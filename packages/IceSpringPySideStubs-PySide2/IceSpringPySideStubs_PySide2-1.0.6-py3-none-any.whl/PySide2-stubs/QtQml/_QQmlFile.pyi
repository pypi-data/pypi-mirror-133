"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtNetwork
import PySide2.QtQml

bytes = str


class QQmlFile(object):
    Null: QQmlFile = ...
    Ready: QQmlFile = ...
    Error: QQmlFile = ...
    Loading: QQmlFile = ...

    class Status(object):
        Null: QQmlFile.Status = ...
        Ready: QQmlFile.Status = ...
        Error: QQmlFile.Status = ...
        Loading: QQmlFile.Status = ...

    @typing.overload
    def __init__(self) -> None:
        ...

    @typing.overload
    def __init__(
        self, arg__1: PySide2.QtQml.QQmlEngine, arg__2: PySide2.QtCore.QUrl
    ) -> None:
        ...

    @typing.overload
    def __init__(self, arg__1: PySide2.QtQml.QQmlEngine, arg__2: str) -> None:
        ...

    @typing.overload
    def clear(self) -> None:
        ...

    @typing.overload
    def clear(self, arg__1: PySide2.QtCore.QObject) -> None:
        ...

    @typing.overload
    def connectDownloadProgress(
        self, arg__1: PySide2.QtCore.QObject, arg__2: bytes
    ) -> bool:
        ...

    @typing.overload
    def connectDownloadProgress(
        self, arg__1: PySide2.QtCore.QObject, arg__2: int
    ) -> bool:
        ...

    @typing.overload
    def connectFinished(self, arg__1: PySide2.QtCore.QObject, arg__2: bytes) -> bool:
        ...

    @typing.overload
    def connectFinished(self, arg__1: PySide2.QtCore.QObject, arg__2: int) -> bool:
        ...

    def data(self) -> bytes:
        ...

    def dataByteArray(self) -> PySide2.QtCore.QByteArray:
        ...

    def error(self) -> str:
        ...

    def isError(self) -> bool:
        ...

    def isLoading(self) -> bool:
        ...

    @typing.overload
    @staticmethod
    def isLocalFile(url: PySide2.QtCore.QUrl) -> bool:
        ...

    @typing.overload
    @staticmethod
    def isLocalFile(url: str) -> bool:
        ...

    def isNull(self) -> bool:
        ...

    def isReady(self) -> bool:
        ...

    @typing.overload
    @staticmethod
    def isSynchronous(url: PySide2.QtCore.QUrl) -> bool:
        ...

    @typing.overload
    @staticmethod
    def isSynchronous(url: str) -> bool:
        ...

    @typing.overload
    def load(
        self, arg__1: PySide2.QtQml.QQmlEngine, arg__2: PySide2.QtCore.QUrl
    ) -> None:
        ...

    @typing.overload
    def load(self, arg__1: PySide2.QtQml.QQmlEngine, arg__2: str) -> None:
        ...

    def size(self) -> int:
        ...

    def status(self) -> PySide2.QtQml.QQmlFile.Status:
        ...

    def url(self) -> PySide2.QtCore.QUrl:
        ...

    @typing.overload
    @staticmethod
    def urlToLocalFileOrQrc(arg__1: PySide2.QtCore.QUrl) -> str:
        ...

    @typing.overload
    @staticmethod
    def urlToLocalFileOrQrc(arg__1: str) -> str:
        ...
