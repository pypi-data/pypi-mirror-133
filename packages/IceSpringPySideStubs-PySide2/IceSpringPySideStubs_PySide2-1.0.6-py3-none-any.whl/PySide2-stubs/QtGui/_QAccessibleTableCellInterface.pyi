"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui

bytes = str


class QAccessibleTableCellInterface(object):
    """
    https://doc.qt.io/qt-5/qaccessibletablecellinterface.html

    **Detailed Description**

    **IAccessible2 Specification**
    """

    def __init__(self) -> None:
        ...

    def columnExtent(self) -> int:
        """
        https://doc.qt.io/qt-5/qaccessibletablecellinterface.html#columnExtent

        **[pure virtual] int QAccessibleTableCellInterface::columnExtent()
        const**

        Returns the number of columns occupied by this cell accessible.
        """
        ...

    def columnHeaderCells(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qaccessibletablecellinterface.html#columnHeaderCe
        lls

        **[pure virtual] QList<QAccessibleInterface *>
        QAccessibleTableCellInterface::columnHeaderCells() const**

        Returns the column headers as an array of cell accessibles.
        """
        ...

    def columnIndex(self) -> int:
        """
        https://doc.qt.io/qt-5/qaccessibletablecellinterface.html#columnIndex

        **[pure virtual] int QAccessibleTableCellInterface::columnIndex()
        const**

        Translates this cell accessible into the corresponding column index.
        """
        ...

    def isSelected(self) -> bool:
        """
        https://doc.qt.io/qt-5/qaccessibletablecellinterface.html#isSelected

        **[pure virtual] bool QAccessibleTableCellInterface::isSelected()
        const**

        Returns a boolean value indicating whether this cell is selected.
        """
        ...

    def rowExtent(self) -> int:
        """
        https://doc.qt.io/qt-5/qaccessibletablecellinterface.html#rowExtent

        **[pure virtual] int QAccessibleTableCellInterface::rowExtent() const**

        Returns the number of rows occupied by this cell accessible.
        """
        ...

    def rowHeaderCells(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qaccessibletablecellinterface.html#rowHeaderCells

        **[pure virtual] QList<QAccessibleInterface *>
        QAccessibleTableCellInterface::rowHeaderCells() const**

        Returns the row headers as an array of cell accessibles.
        """
        ...

    def rowIndex(self) -> int:
        """
        https://doc.qt.io/qt-5/qaccessibletablecellinterface.html#rowIndex

        **[pure virtual] int QAccessibleTableCellInterface::rowIndex() const**

        Translates this cell accessible into the corresponding row index.
        """
        ...

    def table(self) -> PySide2.QtGui.QAccessibleInterface:
        """
        https://doc.qt.io/qt-5/qaccessibletablecellinterface.html#table

        **[pure virtual] QAccessibleInterface
        *QAccessibleTableCellInterface::table() const**

        Returns the **QAccessibleInterface**  of the table containing this cell.
        """
        ...
