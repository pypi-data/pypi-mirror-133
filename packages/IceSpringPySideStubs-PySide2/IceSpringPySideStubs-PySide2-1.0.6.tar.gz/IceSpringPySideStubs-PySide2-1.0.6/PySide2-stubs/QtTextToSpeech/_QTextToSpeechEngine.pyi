"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtTextToSpeech

bytes = str


class QTextToSpeechEngine(PySide2.QtCore.QObject):
    """
    https://doc.qt.io/qt-5/qtexttospeechengine.html

    **Detailed Description**

    An engine implementation must derive from QTextToSpeechEngine and implement
    all its pure virtual methods.
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#QTextToSpeechEngine

        **QTextToSpeechEngine::QTextToSpeechEngine(QObject * parent = nullptr)**

        Constructs the text-to-speech engine base class with **parent**.
        """
        ...

    def availableLocales(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#availableLocales

        **[pure virtual] QVector<QLocale>
        QTextToSpeechEngine::availableLocales() const**

        Implementation of **QTextToSpeech::availableLocales** ().
        """
        ...

    def availableVoices(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#availableVoices

        **[pure virtual] QVector<QVoice> QTextToSpeechEngine::availableVoices()
        const**

        Implementation of **QTextToSpeech::availableVoices** ().
        """
        ...

    @staticmethod
    def createVoice(
        name: str,
        gender: PySide2.QtTextToSpeech.QVoice.Gender,
        age: PySide2.QtTextToSpeech.QVoice.Age,
        data: typing.Any,
    ) -> PySide2.QtTextToSpeech.QVoice:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#createVoice

        **[static protected] QVoice QTextToSpeechEngine::createVoice(const
        QString & name , QVoice::Gender gender , QVoice::Age age , const
        QVariant & data )**

        Creates a voice for a text-to-speech engine.

        Parameters **name** , **gender** , **age** and **data** are directly
        stored in the **QVoice**  instance.
        """
        ...

    def locale(self) -> PySide2.QtCore.QLocale:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#locale

        **[pure virtual] QLocale QTextToSpeechEngine::locale() const**

        Implementation of **QTextToSpeech::locale** ().

        **See also** **setLocale** ().
        """
        ...

    def pause(self) -> None:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#pause

        **[pure virtual] void QTextToSpeechEngine::pause()**

        Implementation of **QTextToSpeech::pause** ().
        """
        ...

    def pitch(self) -> float:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#pitch

        **[pure virtual] double QTextToSpeechEngine::pitch() const**

        Implementation of **QTextToSpeech::pitch** ().

        **See also** **setPitch** ().
        """
        ...

    def rate(self) -> float:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#rate

        **[pure virtual] double QTextToSpeechEngine::rate() const**

        Implementation of **QTextToSpeech::rate** ().

        **See also** **setRate** ().
        """
        ...

    def resume(self) -> None:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#resume

        **[pure virtual] void QTextToSpeechEngine::resume()**

        Implementation of **QTextToSpeech::resume** ().
        """
        ...

    def say(self, text: str) -> None:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#say

        **[pure virtual] void QTextToSpeechEngine::say(const QString & text )**

        Implementation of **QTextToSpeech::say** ( **text** ).
        """
        ...

    def setLocale(self, locale: PySide2.QtCore.QLocale) -> bool:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#setLocale

        **[pure virtual] bool QTextToSpeechEngine::setLocale(const QLocale &
        locale )**

        Implementation **QTextToSpeech::setLocale** ( **locale** ).

        Return `true` if the operation was successful. In this case, the current
        voice (as returned by **voice** ()) should also be updated to a new,
        valid value.

        **See also** **locale** ().
        """
        ...

    def setPitch(self, pitch: float) -> bool:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#setPitch

        **[pure virtual] bool QTextToSpeechEngine::setPitch(double pitch )**

        Implementation of **QTextToSpeech::setPitch** ( **pitch** ).

        Return `true` if the operation was successful.

        **See also** **pitch** ().
        """
        ...

    def setRate(self, rate: float) -> bool:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#setRate

        **[pure virtual] bool QTextToSpeechEngine::setRate(double rate )**

        Implementation of **QTextToSpeech::setRate** ( **rate** ).

        Return `true` if the operation was successful.

        **See also** **rate** ().
        """
        ...

    def setVoice(self, voice: PySide2.QtTextToSpeech.QVoice) -> bool:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#setVoice

        **[pure virtual] bool QTextToSpeechEngine::setVoice(const QVoice & voice
        )**

        Implementation of **QTextToSpeech::setVoice** ( **voice** ).

        Return `true` if the operation was successful.

        **See also** **voice** ().
        """
        ...

    def setVolume(self, volume: float) -> bool:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#setVolume

        **[pure virtual] bool QTextToSpeechEngine::setVolume(double volume )**

        Implementation of **QTextToSpeech::setVolume** ( **volume** ).

        Return `true` if the operation was successful.

        **See also** **volume** ().
        """
        ...

    def state(self) -> PySide2.QtTextToSpeech.QTextToSpeech.State:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#state

        **[pure virtual] QTextToSpeech::State QTextToSpeechEngine::state()
        const**

        Implementation of **QTextToSpeech::state** ().
        """
        ...

    def stop(self) -> None:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#stop

        **[pure virtual] void QTextToSpeechEngine::stop()**

        Implementation of **QTextToSpeech::stop** ().
        """
        ...

    def voice(self) -> PySide2.QtTextToSpeech.QVoice:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#voice

        **[pure virtual] QVoice QTextToSpeechEngine::voice() const**

        Implementation of **QTextToSpeech::voice** ().

        **See also** **setVoice** ().
        """
        ...

    @staticmethod
    def voiceData(voice: PySide2.QtTextToSpeech.QVoice) -> typing.Any:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#voiceData

        **[static protected] QVariant QTextToSpeechEngine::voiceData(const
        QVoice & voice )**

        Returns the engine-specific private data for the given **voice**.
        """
        ...

    def volume(self) -> float:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#volume

        **[pure virtual] double QTextToSpeechEngine::volume() const**

        Implementation of **QTextToSpeech::volume** ().

        **See also** **setVolume** ().
        """
        ...

    @property
    def stateChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qtexttospeechengine.html#stateChanged

        **[signal] void QTextToSpeechEngine::stateChanged(QTextToSpeech::State
        state )**

        Emitted when the text-to-speech engine **state** has changed.

        This signal is connected to **QTextToSpeech::stateChanged** () signal.
        """
        ...
