"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtQml
import PySide2.QtQuick

bytes = str


class QSGSimpleTextureNode(PySide2.QtQuick.QSGGeometryNode):
    """
    https://doc.qt.io/qt-5/qsgsimpletexturenode.html

    **Detailed Description**

    **Warning:** The simple texture node class must have a texture before being added to the scene graph to be rendered.

    **Warning:** This utility class is only functional when running with the default or software backends of the Qt Quick scenegraph. As an alternative, prefer using **QSGImageNode**  via **QQuickWindow::createImageNode** () or **QSGEngine::createImageNode** ().
    """

    NoTransform: QSGSimpleTextureNode = ...
    MirrorHorizontally: QSGSimpleTextureNode = ...
    MirrorVertically: QSGSimpleTextureNode = ...

    class TextureCoordinatesTransformFlag(object):
        NoTransform: QSGSimpleTextureNode.TextureCoordinatesTransformFlag = ...
        MirrorHorizontally: QSGSimpleTextureNode.TextureCoordinatesTransformFlag = ...
        MirrorVertically: QSGSimpleTextureNode.TextureCoordinatesTransformFlag = ...

    class TextureCoordinatesTransformMode(object):
        ...

    def __init__(self) -> None:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#QSGSimpleTextureNode

        **QSGSimpleTextureNode::QSGSimpleTextureNode()**

        Constructs a new simple texture node
        """
        ...

    def filtering(self) -> PySide2.QtQuick.QSGTexture.Filtering:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#filtering

        **QSGTexture::Filtering QSGSimpleTextureNode::filtering() const**

        Returns the filtering currently set on this texture node

        **See also** **setFiltering** ().
        """
        ...

    def ownsTexture(self) -> bool:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#ownsTexture

        **bool QSGSimpleTextureNode::ownsTexture() const**

        Returns `true` if the node takes ownership of the texture; otherwise returns `false`.

        This function was introduced in Qt 5.4.

        **See also** **setOwnsTexture** ().
        """
        ...

    def rect(self) -> PySide2.QtCore.QRectF:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#rect

        **QRectF QSGSimpleTextureNode::rect() const**

        Returns the target rect of this texture node.

        **See also** **setRect** ().
        """
        ...

    def setFiltering(self, filtering: PySide2.QtQuick.QSGTexture.Filtering) -> None:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#setFiltering

        **void QSGSimpleTextureNode::setFiltering(QSGTexture::Filtering filtering )**

        Sets the filtering to be used for this texture node to **filtering**.

        For smooth scaling, use **QSGTexture::Linear** ; for normal scaling, use **QSGTexture::Nearest** .

        **See also** **filtering** ().
        """
        ...

    def setOwnsTexture(self, owns: bool) -> None:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#setOwnsTexture

        **void QSGSimpleTextureNode::setOwnsTexture(bool owns )**

        Sets whether the node takes ownership of the texture to **owns**.

        By default, the node does not take ownership of the texture.

        This function was introduced in Qt 5.4.

        **See also** **ownsTexture** () and **setTexture** ().
        """
        ...

    @typing.overload
    def setRect(self, rect: PySide2.QtCore.QRectF) -> None:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#setRect

        **void QSGSimpleTextureNode::setRect(const QRectF & r )**

        Sets the target rect of this texture node to **r**.

        **See also** **rect** ().
        """
        ...

    @typing.overload
    def setRect(self, x: float, y: float, w: float, h: float) -> None:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#setRect

        **void QSGSimpleTextureNode::setRect(const QRectF & r )**

        Sets the target rect of this texture node to **r**.

        **See also** **rect** ().
        """
        ...

    @typing.overload
    def setSourceRect(self, r: PySide2.QtCore.QRectF) -> None:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#setSourceRect

        **void QSGSimpleTextureNode::setSourceRect(const QRectF & r )**

        Sets the source rect of this texture node to **r**.

        This function was introduced in Qt 5.5.

        **See also** **sourceRect** ().
        """
        ...

    @typing.overload
    def setSourceRect(self, x: float, y: float, w: float, h: float) -> None:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#setSourceRect

        **void QSGSimpleTextureNode::setSourceRect(const QRectF & r )**

        Sets the source rect of this texture node to **r**.

        This function was introduced in Qt 5.5.

        **See also** **sourceRect** ().
        """
        ...

    def setTexture(self, texture: PySide2.QtQuick.QSGTexture) -> None:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#setTexture

        **void QSGSimpleTextureNode::setTexture(QSGTexture * texture )**

        Sets the texture of this texture node to **texture**.

        Use **setOwnsTexture** () to set whether the node should take ownership of the texture. By default, the node does not take ownership.

        **Warning:** A texture node must have a texture before being added to the scenegraph to be rendered.

        **See also** **texture** ().
        """
        ...

    def setTextureCoordinatesTransform(
        self, mode: PySide2.QtQuick.QSGSimpleTextureNode.TextureCoordinatesTransformMode
    ) -> None:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#setTextureCoordinatesTransform

        **void QSGSimpleTextureNode::setTextureCoordinatesTransform(QSGSimpleTextureNode::TextureCoordinatesTransformMode mode )**

        Sets the method used to generate texture coordinates to **mode**. This can be used to obtain correct orientation of the texture. This is commonly needed when using a third party OpenGL library to render to texture as OpenGL has an inverted y-axis relative to Qt Quick.

        **See also** **textureCoordinatesTransform** ().
        """
        ...

    def sourceRect(self) -> PySide2.QtCore.QRectF:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#sourceRect

        **QRectF QSGSimpleTextureNode::sourceRect() const**

        Returns the source rect of this texture node.

        This function was introduced in Qt 5.5.

        **See also** **setSourceRect** ().
        """
        ...

    def texture(self) -> PySide2.QtQuick.QSGTexture:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#texture

        **QSGTexture *QSGSimpleTextureNode::texture() const**

        Returns the texture for this texture node

        **See also** **setTexture** ().
        """
        ...

    def textureCoordinatesTransform(
        self,
    ) -> PySide2.QtQuick.QSGSimpleTextureNode.TextureCoordinatesTransformMode:
        """
        https://doc.qt.io/qt-5/qsgsimpletexturenode.html#textureCoordinatesTransform

        **QSGSimpleTextureNode::TextureCoordinatesTransformMode QSGSimpleTextureNode::textureCoordinatesTransform() const**

        Returns the mode used to generate texture coordinates for this node.

        **See also** **setTextureCoordinatesTransform** ().
        """
        ...
