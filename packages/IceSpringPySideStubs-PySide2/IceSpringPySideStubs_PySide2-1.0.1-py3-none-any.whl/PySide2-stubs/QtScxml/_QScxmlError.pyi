"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtScxml

bytes = str


class QScxmlError(object):
    """
    **Detailed Description**

    **See also** **QScxmlStateMachine**  and **QScxmlCompiler** .
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QScxmlError::QScxmlError()**

        Creates a new invalid SCXML error.
        """
        ...

    @typing.overload
    def __init__(self, arg__1: PySide2.QtScxml.QScxmlError) -> None:
        """
        **QScxmlError::QScxmlError()**

        Creates a new invalid SCXML error.
        """
        ...

    @typing.overload
    def __init__(self, fileName: str, line: int, column: int, description: str) -> None:
        """
        **QScxmlError::QScxmlError()**

        Creates a new invalid SCXML error.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def column(self) -> int:
        """
        **int QScxmlError::column() const**

        Returns the column in which the error occurred.

        **Note:** Getter function for property column.
        """
        ...

    def description(self) -> str:
        """
        **QString QScxmlError::description() const**

        Returns the error message.

        **Note:** Getter function for property description.
        """
        ...

    def fileName(self) -> str:
        """
        **QString QScxmlError::fileName() const**

        Returns the name of the file in which the error occurred.

        **Note:** Getter function for property fileName.
        """
        ...

    def isValid(self) -> bool:
        """
        **bool QScxmlError::isValid() const**

        Returns `true` if the error is valid, `false` otherwise. An invalid error can only be created by calling the default constructor or by assigning an invalid error.

        **Note:** Getter function for property **valid** .
        """
        ...

    def line(self) -> int:
        """
        **int QScxmlError::line() const**

        Returns the line on which the error occurred.

        **Note:** Getter function for property line.
        """
        ...

    def toString(self) -> str:
        """
        **QString QScxmlError::toString() const**

        This convenience method converts an error to a string. Returns the error message formatted as: **"filename:line:column: error: description"**
        """
        ...
