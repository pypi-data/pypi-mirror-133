"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtScript

bytes = str


class QScriptProgram(object):
    """
    **Detailed Description**

    QScriptProgram retains the compiled representation of the script if possible. Thus, QScriptProgram can be used to evaluate the same script multiple times more efficiently.

    **QScriptEngine**  engine;
        **QScriptProgram**  program("1 + 2");
        **QScriptValue**  result = engine.evaluate(program);
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QScriptProgram::QScriptProgram()**

        Constructs a null QScriptProgram.
        """
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtScript.QScriptProgram) -> None:
        """
        **QScriptProgram::QScriptProgram()**

        Constructs a null QScriptProgram.
        """
        ...

    @typing.overload
    def __init__(
        self, sourceCode: str, fileName: str = ..., firstLineNumber: int = ...
    ) -> None:
        """
        **QScriptProgram::QScriptProgram()**

        Constructs a null QScriptProgram.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def fileName(self) -> str:
        """
        **QString QScriptProgram::fileName() const**

        Returns the filename associated with this program.
        """
        ...

    def firstLineNumber(self) -> int:
        """
        **int QScriptProgram::firstLineNumber() const**

        Returns the line number associated with this program.
        """
        ...

    def isNull(self) -> bool:
        """
        **bool QScriptProgram::isNull() const**

        Returns true if this **QScriptProgram**  is null; otherwise returns false.
        """
        ...

    def sourceCode(self) -> str:
        """
        **QString QScriptProgram::sourceCode() const**

        Returns the source code of this program.
        """
        ...
