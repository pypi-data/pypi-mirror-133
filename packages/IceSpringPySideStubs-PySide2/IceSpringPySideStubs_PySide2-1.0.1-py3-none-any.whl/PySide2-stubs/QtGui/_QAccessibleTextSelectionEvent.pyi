"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui

bytes = str


class QAccessibleTextSelectionEvent(PySide2.QtGui.QAccessibleTextCursorEvent):
    """
    **Detailed Description**

    This class is used with **QAccessible::updateAccessibility** ().
    """

    @typing.overload
    def __init__(
        self, iface: PySide2.QtGui.QAccessibleInterface, start: int, end: int
    ) -> None:
        """
        **QAccessibleTextSelectionEvent::QAccessibleTextSelectionEvent(QObject * object , int start , int end )**

        Constructs a new QAccessibleTextSelectionEvent for **object**. The new selection this event notifies about is from position **start** to **end**.
        """
        ...

    @typing.overload
    def __init__(self, obj: PySide2.QtCore.QObject, start: int, end: int) -> None:
        """
        **QAccessibleTextSelectionEvent::QAccessibleTextSelectionEvent(QObject * object , int start , int end )**

        Constructs a new QAccessibleTextSelectionEvent for **object**. The new selection this event notifies about is from position **start** to **end**.
        """
        ...

    def selectionEnd(self) -> int:
        """
        **int QAccessibleTextSelectionEvent::selectionEnd() const**

        Returns the position of the last selected character.
        """
        ...

    def selectionStart(self) -> int:
        """
        **int QAccessibleTextSelectionEvent::selectionStart() const**

        Returns the position of the first selected character.
        """
        ...

    def setSelection(self, start: int, end: int) -> None:
        """
        **void QAccessibleTextSelectionEvent::setSelection(int start , int end )**

        Sets the selection for this event from position **start** to **end**.
        """
        ...
