"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui

bytes = str


class QRadialGradient(PySide2.QtGui.QGradient):
    """
    **Detailed Description**

    Qt supports both simple and extended radial gradients.

    Simple radial gradients interpolate colors between a focal point and end points on a circle surrounding it. Extended radial gradients interpolate colors between a focal circle and a center circle. Points outside the cone defined by the two circles will be transparent. For simple radial gradients the focal point is adjusted to lie inside the center circle, whereas the focal point can have any position in an extended radial gradient.

    Outside the end points the gradient is either padded, reflected or repeated depending on the currently set **spread**  method:

    ![](images/qradialgradient-pad.png)![](images/qradialgradient-reflect.png)![](images/qradialgradient-repeat.png)
    **PadSpread**  (default)**ReflectSpread** **RepeatSpread**

    The colors in a gradient is defined using stop points of the **QGradientStop**  type, i.e. a position and a color. Use the **QGradient::setColorAt** () or the **QGradient::setStops** () function to define the stop points. It is the gradient's complete set of stop points that describes how the gradient area should be filled. If no stop points have been specified, a gradient of black at 0 to white at 1 is used.

    In addition to the functions inherited from **QGradient** , the QRadialGradient class provides the **center** (), **focalPoint** () and **radius** () functions returning the gradient's center, focal point and radius respectively.

    **See also** **QLinearGradient** , **QConicalGradient** , and **The Gradients Example** .
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QRadialGradient::QRadialGradient()**

        Constructs a simple radial gradient with the center and focal point at (0, 0) with a radius of 1.
        """
        ...

    @typing.overload
    def __init__(self, QRadialGradient: PySide2.QtGui.QRadialGradient) -> None:
        """
        **QRadialGradient::QRadialGradient()**

        Constructs a simple radial gradient with the center and focal point at (0, 0) with a radius of 1.
        """
        ...

    @typing.overload
    def __init__(
        self,
        center: PySide2.QtCore.QPointF,
        centerRadius: float,
        focalPoint: PySide2.QtCore.QPointF,
        focalRadius: float,
    ) -> None:
        """
        **QRadialGradient::QRadialGradient()**

        Constructs a simple radial gradient with the center and focal point at (0, 0) with a radius of 1.
        """
        ...

    @typing.overload
    def __init__(self, center: PySide2.QtCore.QPointF, radius: float) -> None:
        """
        **QRadialGradient::QRadialGradient()**

        Constructs a simple radial gradient with the center and focal point at (0, 0) with a radius of 1.
        """
        ...

    @typing.overload
    def __init__(
        self,
        center: PySide2.QtCore.QPointF,
        radius: float,
        focalPoint: PySide2.QtCore.QPointF,
    ) -> None:
        """
        **QRadialGradient::QRadialGradient()**

        Constructs a simple radial gradient with the center and focal point at (0, 0) with a radius of 1.
        """
        ...

    @typing.overload
    def __init__(
        self,
        cx: float,
        cy: float,
        centerRadius: float,
        fx: float,
        fy: float,
        focalRadius: float,
    ) -> None:
        """
        **QRadialGradient::QRadialGradient()**

        Constructs a simple radial gradient with the center and focal point at (0, 0) with a radius of 1.
        """
        ...

    @typing.overload
    def __init__(self, cx: float, cy: float, radius: float) -> None:
        """
        **QRadialGradient::QRadialGradient()**

        Constructs a simple radial gradient with the center and focal point at (0, 0) with a radius of 1.
        """
        ...

    @typing.overload
    def __init__(
        self, cx: float, cy: float, radius: float, fx: float, fy: float
    ) -> None:
        """
        **QRadialGradient::QRadialGradient()**

        Constructs a simple radial gradient with the center and focal point at (0, 0) with a radius of 1.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def center(self) -> PySide2.QtCore.QPointF:
        """
        **QPointF QRadialGradient::center() const**

        Returns the center of this radial gradient in logical coordinates.

        **See also** **setCenter** () and **QGradient::stops** ().
        """
        ...

    def centerRadius(self) -> float:
        """
        **qreal QRadialGradient::centerRadius() const**

        Returns the center radius of this radial gradient in logical coordinates.

        This function was introduced in Qt 4.8.

        **See also** **setCenterRadius** () and **QGradient::stops** ().
        """
        ...

    def focalPoint(self) -> PySide2.QtCore.QPointF:
        """
        **QPointF QRadialGradient::focalPoint() const**

        Returns the focal point of this radial gradient in logical coordinates.

        **See also** **setFocalPoint** () and **QGradient::stops** ().
        """
        ...

    def focalRadius(self) -> float:
        """
        **qreal QRadialGradient::focalRadius() const**

        Returns the focal radius of this radial gradient in logical coordinates.

        This function was introduced in Qt 4.8.

        **See also** **setFocalRadius** () and **QGradient::stops** ().
        """
        ...

    def radius(self) -> float:
        """
        **qreal QRadialGradient::radius() const**

        Returns the radius of this radial gradient in logical coordinates.

        Equivalent to **centerRadius** ()

        **See also** **setRadius** () and **QGradient::stops** ().
        """
        ...

    @typing.overload
    def setCenter(self, center: PySide2.QtCore.QPointF) -> None:
        """
        **void QRadialGradient::setCenter(const QPointF & center )**

        Sets the center of this radial gradient in logical coordinates to **center**.

        This function was introduced in Qt 4.2.

        **See also** **center** ().
        """
        ...

    @typing.overload
    def setCenter(self, x: float, y: float) -> None:
        """
        **void QRadialGradient::setCenter(const QPointF & center )**

        Sets the center of this radial gradient in logical coordinates to **center**.

        This function was introduced in Qt 4.2.

        **See also** **center** ().
        """
        ...

    def setCenterRadius(self, radius: float) -> None:
        """
        **void QRadialGradient::setCenterRadius(qreal radius )**

        Sets the center radius of this radial gradient in logical coordinates to **radius**

        This function was introduced in Qt 4.8.

        **See also** **centerRadius** ().
        """
        ...

    @typing.overload
    def setFocalPoint(self, focalPoint: PySide2.QtCore.QPointF) -> None:
        """
        **void QRadialGradient::setFocalPoint(const QPointF & focalPoint )**

        Sets the focal point of this radial gradient in logical coordinates to **focalPoint**.

        This function was introduced in Qt 4.2.

        **See also** **focalPoint** ().
        """
        ...

    @typing.overload
    def setFocalPoint(self, x: float, y: float) -> None:
        """
        **void QRadialGradient::setFocalPoint(const QPointF & focalPoint )**

        Sets the focal point of this radial gradient in logical coordinates to **focalPoint**.

        This function was introduced in Qt 4.2.

        **See also** **focalPoint** ().
        """
        ...

    def setFocalRadius(self, radius: float) -> None:
        """
        **void QRadialGradient::setFocalRadius(qreal radius )**

        Sets the focal radius of this radial gradient in logical coordinates to **radius**

        This function was introduced in Qt 4.8.

        **See also** **focalRadius** ().
        """
        ...

    def setRadius(self, radius: float) -> None:
        """
        **void QRadialGradient::setRadius(qreal radius )**

        Sets the radius of this radial gradient in logical coordinates to **radius**

        Equivalent to **setCenterRadius** ()

        This function was introduced in Qt 4.2.

        **See also** **radius** ().
        """
        ...
