"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtWidgets

bytes = str


class QGraphicsSceneDragDropEvent(PySide2.QtWidgets.QGraphicsSceneEvent):
    """
    **Detailed Description**

    **QGraphicsView**  inherits the drag and drop functionality provided by **QWidget** . When it receives a drag and drop event, it translates it to a QGraphicsSceneDragDropEvent.

    QGraphicsSceneDragDropEvent stores events of type **GraphicsSceneDragEnter** , **GraphicsSceneDragLeave** , **GraphicsSceneDragMove** , or **GraphicsSceneDrop** .

    QGraphicsSceneDragDropEvent contains the position of the mouse cursor in both item, scene, and screen coordinates; this can be retrieved with **pos** (), **scenePos** (), and **screenPos** ().

    The scene sends the event to the first **QGraphicsItem**  under the mouse cursor that accepts drops; a graphics item is set to accept drops with **setAcceptDrops()** .
    """

    def __init__(self, type: typing.Optional[PySide2.QtCore.QEvent.Type] = ...) -> None:
        ...

    def acceptProposedAction(self) -> None:
        """
        **void QGraphicsSceneDragDropEvent::acceptProposedAction()**

        Sets the proposed action as accepted, i.e, the drop action is set to the proposed action. This is equal to:

        setDropAction(proposedAction());

        When using this function, one should not call `accept()`.

        **See also** **dropAction** (), **setDropAction** (), and **proposedAction** ().
        """
        ...

    def buttons(self) -> PySide2.QtCore.Qt.MouseButtons:
        """
        **Qt::MouseButtons QGraphicsSceneDragDropEvent::buttons() const**

        Returns a **Qt::MouseButtons**  value indicating which buttons were pressed on the mouse when this mouse event was generated.

        **See also** **Qt::MouseButtons** .
        """
        ...

    def dropAction(self) -> PySide2.QtCore.Qt.DropAction:
        """
        **Qt::DropAction QGraphicsSceneDragDropEvent::dropAction() const**

        Returns the action that was performed in this drag and drop. This should be set by the receiver of the drop and is returned by **QDrag::exec** ().

        **See also** **setDropAction** () and **acceptProposedAction** ().
        """
        ...

    def mimeData(self) -> PySide2.QtCore.QMimeData:
        """
        **const QMimeData *QGraphicsSceneDragDropEvent::mimeData() const**

        This function returns the MIME data of the event.
        """
        ...

    def modifiers(self) -> PySide2.QtCore.Qt.KeyboardModifiers:
        """
        **Qt::KeyboardModifiers QGraphicsSceneDragDropEvent::modifiers() const**

        Returns the keyboard modifiers that were pressed when the drag and drop event was created.

        **See also** **Qt::KeyboardModifiers** .
        """
        ...

    def pos(self) -> PySide2.QtCore.QPointF:
        """
        **QPointF QGraphicsSceneDragDropEvent::pos() const**

        Returns the mouse position of the event relative to the view that sent the event.

        **See also** **QGraphicsView** , **screenPos** (), and **scenePos** ().
        """
        ...

    def possibleActions(self) -> PySide2.QtCore.Qt.DropActions:
        """
        **Qt::DropActions QGraphicsSceneDragDropEvent::possibleActions() const**

        Returns the possible drop actions that the drag and drop can result in.

        **See also** **Qt::DropActions** .
        """
        ...

    def proposedAction(self) -> PySide2.QtCore.Qt.DropAction:
        """
        **Qt::DropAction QGraphicsSceneDragDropEvent::proposedAction() const**

        Returns the drop action that is proposed, i.e., preferred. The action must be one of the possible actions as defined by `possibleActions()`.

        **See also** **Qt::DropAction**  and **possibleActions** ().
        """
        ...

    def scenePos(self) -> PySide2.QtCore.QPointF:
        """
        **QPointF QGraphicsSceneDragDropEvent::scenePos() const**

        Returns the position of the mouse in scene coordinates.

        **See also** **pos** () and **screenPos** ().
        """
        ...

    def screenPos(self) -> PySide2.QtCore.QPoint:
        """
        **QPoint QGraphicsSceneDragDropEvent::screenPos() const**

        Returns the position of the mouse relative to the screen.

        **See also** **pos** () and **scenePos** ().
        """
        ...

    def setButtons(self, buttons: PySide2.QtCore.Qt.MouseButtons) -> None:
        """
        **Qt::MouseButtons QGraphicsSceneDragDropEvent::buttons() const**

        Returns a **Qt::MouseButtons**  value indicating which buttons were pressed on the mouse when this mouse event was generated.

        **See also** **Qt::MouseButtons** .
        """
        ...

    def setDropAction(self, action: PySide2.QtCore.Qt.DropAction) -> None:
        """
        **void QGraphicsSceneDragDropEvent::setDropAction(Qt::DropAction action )**

        This function lets the receiver of the drop set the drop action that was performed to **action** , which should be one of the **possible actions** . Call `accept()` in stead of `acceptProposedAction()` if you use this function.

        **See also** **dropAction** (), **accept** (), and **possibleActions** ().
        """
        ...

    def setModifiers(self, modifiers: PySide2.QtCore.Qt.KeyboardModifiers) -> None:
        """
        **Qt::KeyboardModifiers QGraphicsSceneDragDropEvent::modifiers() const**

        Returns the keyboard modifiers that were pressed when the drag and drop event was created.

        **See also** **Qt::KeyboardModifiers** .
        """
        ...

    def setPos(self, pos: PySide2.QtCore.QPointF) -> None:
        """
        **QPointF QGraphicsSceneDragDropEvent::pos() const**

        Returns the mouse position of the event relative to the view that sent the event.

        **See also** **QGraphicsView** , **screenPos** (), and **scenePos** ().
        """
        ...

    def setPossibleActions(self, actions: PySide2.QtCore.Qt.DropActions) -> None:
        """
        **Qt::DropActions QGraphicsSceneDragDropEvent::possibleActions() const**

        Returns the possible drop actions that the drag and drop can result in.

        **See also** **Qt::DropActions** .
        """
        ...

    def setProposedAction(self, action: PySide2.QtCore.Qt.DropAction) -> None:
        """
        **Qt::DropAction QGraphicsSceneDragDropEvent::proposedAction() const**

        Returns the drop action that is proposed, i.e., preferred. The action must be one of the possible actions as defined by `possibleActions()`.

        **See also** **Qt::DropAction**  and **possibleActions** ().
        """
        ...

    def setScenePos(self, pos: PySide2.QtCore.QPointF) -> None:
        """
        **QPointF QGraphicsSceneDragDropEvent::scenePos() const**

        Returns the position of the mouse in scene coordinates.

        **See also** **pos** () and **screenPos** ().
        """
        ...

    def setScreenPos(self, pos: PySide2.QtCore.QPoint) -> None:
        """
        **QPoint QGraphicsSceneDragDropEvent::screenPos() const**

        Returns the position of the mouse relative to the screen.

        **See also** **pos** () and **scenePos** ().
        """
        ...

    def source(self) -> PySide2.QtWidgets.QWidget:
        """
        **QWidget *QGraphicsSceneDragDropEvent::source() const**

        This function returns the **QGraphicsView**  that created the **QGraphicsSceneDragDropEvent** .
        """
        ...
