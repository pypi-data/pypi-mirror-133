"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtWidgets

bytes = str


class QTableWidgetItem(object):
    """
    **Detailed Description**

    Table items are used to hold pieces of information for table widgets. Items usually contain text, icons, or checkboxes

    The QTableWidgetItem class is a convenience class that replaces the `QTableItem` class in Qt 3. It provides an item for use with the **QTableWidget**  class.

    Top-level items are constructed without a parent then inserted at the position specified by a pair of row and column numbers:

    **QTableWidgetItem**  *newItem = new **QTableWidgetItem** (tr("%1").arg(
                pow(row, column+1)));
            tableWidget->setItem(row, column, newItem);

    Each item can have its own background brush which is set with the **setBackground** () function. The current background brush can be found with **background** (). The text label for each item can be rendered with its own font and brush. These are specified with the **setFont** () and **setForeground** () functions, and read with **font** () and **foreground** ().

    By default, items are enabled, editable, selectable, checkable, and can be used both as the source of a drag and drop operation and as a drop target. Each item\'s flags can be changed by calling **setFlags** () with the appropriate value (see **Qt::ItemFlags** ). Checkable items can be checked and unchecked with the **setCheckState** () function. The corresponding **checkState** () function indicates whether the item is currently checked.

    **Subclassing**

    When subclassing QTableWidgetItem to provide custom items, it is possible to define new types for them so that they can be distinguished from standard items. The constructors for subclasses that require this feature need to call the base class constructor with a new type value equal to or greater than **UserType** .

    **See also** **QTableWidget** , **Model/View Programming** , **QListWidgetItem** , and **QTreeWidgetItem** .
    """

    Type: QTableWidgetItem = ...
    UserType: QTableWidgetItem = ...

    class ItemType(object):
        Type: QTableWidgetItem.ItemType = ...
        UserType: QTableWidgetItem.ItemType = ...

    @typing.overload
    def __init__(self, icon: PySide2.QtGui.QIcon, text: str, type: int = ...) -> None:
        """
        **QTableWidgetItem::QTableWidgetItem(int type = Type)**

        Constructs a table item of the specified **type** that does not belong to any table.

        **See also** **type** ().
        """
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtWidgets.QTableWidgetItem) -> None:
        """
        **QTableWidgetItem::QTableWidgetItem(int type = Type)**

        Constructs a table item of the specified **type** that does not belong to any table.

        **See also** **type** ().
        """
        ...

    @typing.overload
    def __init__(self, text: str, type: int = ...) -> None:
        """
        **QTableWidgetItem::QTableWidgetItem(int type = Type)**

        Constructs a table item of the specified **type** that does not belong to any table.

        **See also** **type** ().
        """
        ...

    @typing.overload
    def __init__(self, type: int = ...) -> None:
        """
        **QTableWidgetItem::QTableWidgetItem(int type = Type)**

        Constructs a table item of the specified **type** that does not belong to any table.

        **See also** **type** ().
        """
        ...

    def __lshift__(self, out: PySide2.QtCore.QDataStream) -> PySide2.QtCore.QDataStream:
        ...

    def __rshift__(self, in_: PySide2.QtCore.QDataStream) -> PySide2.QtCore.QDataStream:
        ...

    def background(self) -> PySide2.QtGui.QBrush:
        """
        **QBrush QTableWidgetItem::background() const**

        Returns the brush used to render the item's background.

        This function was introduced in Qt 4.2.

        **See also** **setBackground** () and **foreground** ().
        """
        ...

    def backgroundColor(self) -> PySide2.QtGui.QColor:
        ...

    def checkState(self) -> PySide2.QtCore.Qt.CheckState:
        """
        **Qt::CheckState QTableWidgetItem::checkState() const**

        Returns the checked state of the table item.

        **See also** **setCheckState** () and **flags** ().
        """
        ...

    def clone(self) -> PySide2.QtWidgets.QTableWidgetItem:
        """
        **[virtual] QTableWidgetItem *QTableWidgetItem::clone() const**

        Creates a copy of the item.
        """
        ...

    def column(self) -> int:
        """
        **int QTableWidgetItem::column() const**

        Returns the column of the item in the table. If the item is not in a table, this function will return -1.

        This function was introduced in Qt 4.2.

        **See also** **row** ().
        """
        ...

    def data(self, role: int) -> typing.Any:
        """
        **[virtual] QVariant QTableWidgetItem::data(int role ) const**

        Returns the item's data for the given **role**.

        **See also** **setData** ().
        """
        ...

    def flags(self) -> PySide2.QtCore.Qt.ItemFlags:
        """
        **Qt::ItemFlags QTableWidgetItem::flags() const**

        Returns the flags used to describe the item. These determine whether the item can be checked, edited, and selected.

        **See also** **setFlags** ().
        """
        ...

    def font(self) -> PySide2.QtGui.QFont:
        """
        **QFont QTableWidgetItem::font() const**

        Returns the font used to render the item's text.

        **See also** **setFont** ().
        """
        ...

    def foreground(self) -> PySide2.QtGui.QBrush:
        """
        **QBrush QTableWidgetItem::foreground() const**

        Returns the brush used to render the item's foreground (e.g. text).

        This function was introduced in Qt 4.2.

        **See also** **setForeground** () and **background** ().
        """
        ...

    def icon(self) -> PySide2.QtGui.QIcon:
        """
        **QIcon QTableWidgetItem::icon() const**

        Returns the item's icon.

        **See also** **setIcon** () and **iconSize** .
        """
        ...

    def isSelected(self) -> bool:
        """
        **bool QTableWidgetItem::isSelected() const**

        Returns `true` if the item is selected, otherwise returns `false`.

        This function was introduced in Qt 4.2.

        **See also** **setSelected** ().
        """
        ...

    def read(self, in_: PySide2.QtCore.QDataStream) -> None:
        """
        **[virtual] void QTableWidgetItem::read(QDataStream & in )**

        Reads the item from stream **in**.

        **See also** **write** ().
        """
        ...

    def row(self) -> int:
        """
        **int QTableWidgetItem::row() const**

        Returns the row of the item in the table. If the item is not in a table, this function will return -1.

        This function was introduced in Qt 4.2.

        **See also** **column** ().
        """
        ...

    def setBackground(self, brush: PySide2.QtGui.QBrush) -> None:
        """
        **void QTableWidgetItem::setBackground(const QBrush & brush )**

        Sets the item's background brush to the specified **brush**. Setting a default-constructed brush will let the view use the default color from the style.

        This function was introduced in Qt 4.2.

        **See also** **background** () and **setForeground** ().
        """
        ...

    def setBackgroundColor(self, color: PySide2.QtGui.QColor) -> None:
        ...

    def setCheckState(self, state: PySide2.QtCore.Qt.CheckState) -> None:
        """
        **void QTableWidgetItem::setCheckState(Qt::CheckState state )**

        Sets the check state of the table item to be **state**.

        **See also** **checkState** ().
        """
        ...

    def setData(self, role: int, value: typing.Any) -> None:
        """
        **[virtual] void QTableWidgetItem::setData(int role , const QVariant & value )**

        Sets the item's data for the given **role** to the specified **value**.

        **Note:** The default implementation treats **Qt::EditRole**  and **Qt::DisplayRole**  as referring to the same data.

        **See also** **Qt::ItemDataRole**  and **data** ().
        """
        ...

    def setFlags(self, flags: PySide2.QtCore.Qt.ItemFlags) -> None:
        """
        **void QTableWidgetItem::setFlags(Qt::ItemFlags flags )**

        Sets the flags for the item to the given **flags**. These determine whether the item can be selected or modified.

        **See also** **flags** ().
        """
        ...

    def setFont(self, font: PySide2.QtGui.QFont) -> None:
        """
        **void QTableWidgetItem::setFont(const QFont & font )**

        Sets the font used to display the item's text to the given **font**.

        **See also** **font** (), **setText** (), and **setForeground** ().
        """
        ...

    def setForeground(self, brush: PySide2.QtGui.QBrush) -> None:
        """
        **void QTableWidgetItem::setForeground(const QBrush & brush )**

        Sets the item's foreground brush to the specified **brush**. Setting a default-constructed brush will let the view use the default color from the style.

        This function was introduced in Qt 4.2.

        **See also** **foreground** () and **setBackground** ().
        """
        ...

    def setIcon(self, icon: PySide2.QtGui.QIcon) -> None:
        """
        **void QTableWidgetItem::setIcon(const QIcon & icon )**

        Sets the item's icon to the **icon** specified.

        **See also** **icon** (), **setText** (), and **iconSize** .
        """
        ...

    def setSelected(self, select: bool) -> None:
        """
        **void QTableWidgetItem::setSelected(bool select )**

        Sets the selected state of the item to **select**.

        This function was introduced in Qt 4.2.

        **See also** **isSelected** ().
        """
        ...

    def setSizeHint(self, size: PySide2.QtCore.QSize) -> None:
        """
        **void QTableWidgetItem::setSizeHint(const QSize & size )**

        Sets the size hint for the table item to be **size**. If no size hint is set or **size** is invalid, the item delegate will compute the size hint based on the item data.

        This function was introduced in Qt 4.1.

        **See also** **sizeHint** ().
        """
        ...

    def setStatusTip(self, statusTip: str) -> None:
        """
        **void QTableWidgetItem::setStatusTip(const QString & statusTip )**

        Sets the status tip for the table item to the text specified by **statusTip**. **QTableWidget**  mouse tracking needs to be enabled for this feature to work.

        **See also** **statusTip** (), **setToolTip** (), and **setWhatsThis** ().
        """
        ...

    def setText(self, text: str) -> None:
        """
        **void QTableWidgetItem::setText(const QString & text )**

        Sets the item's text to the **text** specified.

        **See also** **text** (), **setFont** (), and **setForeground** ().
        """
        ...

    def setTextAlignment(self, alignment: int) -> None:
        """
        **void QTableWidgetItem::setTextAlignment(int alignment )**

        Sets the text alignment for the item's text to the **alignment** specified.

        **See also** **textAlignment** () and **Qt::Alignment** .
        """
        ...

    def setTextColor(self, color: PySide2.QtGui.QColor) -> None:
        ...

    def setToolTip(self, toolTip: str) -> None:
        """
        **void QTableWidgetItem::setToolTip(const QString & toolTip )**

        Sets the item's tooltip to the string specified by **toolTip**.

        **See also** **toolTip** (), **setStatusTip** (), and **setWhatsThis** ().
        """
        ...

    def setWhatsThis(self, whatsThis: str) -> None:
        """
        **void QTableWidgetItem::setWhatsThis(const QString & whatsThis )**

        Sets the item\'s "What\'s This?" help to the string specified by **whatsThis**.

        **See also** **whatsThis** (), **setStatusTip** (), and **setToolTip** ().
        """
        ...

    def sizeHint(self) -> PySide2.QtCore.QSize:
        """
        **QSize QTableWidgetItem::sizeHint() const**

        Returns the size hint set for the table item.

        This function was introduced in Qt 4.1.

        **See also** **setSizeHint** ().
        """
        ...

    def statusTip(self) -> str:
        """
        **QString QTableWidgetItem::statusTip() const**

        Returns the item's status tip.

        **See also** **setStatusTip** ().
        """
        ...

    def tableWidget(self) -> PySide2.QtWidgets.QTableWidget:
        """
        **QTableWidget *QTableWidgetItem::tableWidget() const**

        Returns the table widget that contains the item.
        """
        ...

    def text(self) -> str:
        """
        **QString QTableWidgetItem::text() const**

        Returns the item's text.

        **See also** **setText** ().
        """
        ...

    def textAlignment(self) -> int:
        """
        **int QTableWidgetItem::textAlignment() const**

        Returns the text alignment for the item's text.

        **See also** **setTextAlignment** () and **Qt::Alignment** .
        """
        ...

    def textColor(self) -> PySide2.QtGui.QColor:
        ...

    def toolTip(self) -> str:
        """
        **QString QTableWidgetItem::toolTip() const**

        Returns the item's tooltip.

        **See also** **setToolTip** ().
        """
        ...

    def type(self) -> int:
        """
        **int QTableWidgetItem::type() const**

        Returns the type passed to the **QTableWidgetItem**  constructor.
        """
        ...

    def whatsThis(self) -> str:
        """
        **QString QTableWidgetItem::whatsThis() const**

        Returns the item\'s "What\'s This?" help.

        **See also** **setWhatsThis** ().
        """
        ...

    def write(self, out: PySide2.QtCore.QDataStream) -> None:
        """
        **[virtual] void QTableWidgetItem::write(QDataStream & out ) const**

        Writes the item to stream **out**.

        **See also** **read** ().
        """
        ...
