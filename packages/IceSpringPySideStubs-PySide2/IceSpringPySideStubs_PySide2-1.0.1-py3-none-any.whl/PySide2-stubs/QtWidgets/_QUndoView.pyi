"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtWidgets

bytes = str


class QUndoView(PySide2.QtWidgets.QListView):
    """
    **Detailed Description**

    QUndoView is a **QListView**  which displays the list of commands pushed on an undo stack. The most recently executed command is always selected. Selecting a different command results in a call to **QUndoStack::setIndex** (), rolling the state of the document backwards or forward to the new command.

    The stack can be set explicitly with **setStack** (). Alternatively, a **QUndoGroup**  object can be set with **setGroup** (). The view will then update itself automatically whenever the active stack of the group changes.

    ![](images/qundoview.png)
    """

    @typing.overload
    def __init__(
        self,
        group: PySide2.QtWidgets.QUndoGroup,
        parent: typing.Optional[PySide2.QtWidgets.QWidget] = ...,
    ) -> None:
        """
        **QUndoView::QUndoView(QWidget * parent = nullptr)**

        Constructs a new view with parent **parent**.
        """
        ...

    @typing.overload
    def __init__(
        self, parent: typing.Optional[PySide2.QtWidgets.QWidget] = ...
    ) -> None:
        """
        **QUndoView::QUndoView(QWidget * parent = nullptr)**

        Constructs a new view with parent **parent**.
        """
        ...

    @typing.overload
    def __init__(
        self,
        stack: PySide2.QtWidgets.QUndoStack,
        parent: typing.Optional[PySide2.QtWidgets.QWidget] = ...,
    ) -> None:
        """
        **QUndoView::QUndoView(QWidget * parent = nullptr)**

        Constructs a new view with parent **parent**.
        """
        ...

    def cleanIcon(self) -> PySide2.QtGui.QIcon:
        """
        **cleanIcon : QIcon**

        This property holds the icon used to represent the clean state.

        A stack may have a clean state set with **QUndoStack::setClean** (). This is usually the state of the document at the point it was saved. **QUndoView**  can display an icon in the list of commands to show the clean state. If this property is a null icon, no icon is shown. The default value is the null icon.

        **Access functions:**

        QIcon **cleanIcon** () const
        void **setCleanIcon** (const QIcon & **icon** )
        """
        ...

    def emptyLabel(self) -> str:
        """
        **emptyLabel : QString**

        This property holds the label used for the empty state.

        The empty label is the topmost element in the list of commands, which represents the state of the document before any commands were pushed on the stack. The default is the string "<empty>".

        **Access functions:**

        QString **emptyLabel** () const
        void **setEmptyLabel** (const QString & **label** )

        **Member Function Documentation**
        """
        ...

    def group(self) -> PySide2.QtWidgets.QUndoGroup:
        """
        **QUndoGroup *QUndoView::group() const**

        Returns the group displayed by this view.

        If the view is not looking at group, this function returns `nullptr`.

        **See also** **setGroup** () and **setStack** ().
        """
        ...

    def setCleanIcon(self, icon: PySide2.QtGui.QIcon) -> None:
        """
        **cleanIcon : QIcon**

        This property holds the icon used to represent the clean state.

        A stack may have a clean state set with **QUndoStack::setClean** (). This is usually the state of the document at the point it was saved. **QUndoView**  can display an icon in the list of commands to show the clean state. If this property is a null icon, no icon is shown. The default value is the null icon.

        **Access functions:**

        QIcon **cleanIcon** () const
        void **setCleanIcon** (const QIcon & **icon** )
        """
        ...

    def setEmptyLabel(self, label: str) -> None:
        """
        **emptyLabel : QString**

        This property holds the label used for the empty state.

        The empty label is the topmost element in the list of commands, which represents the state of the document before any commands were pushed on the stack. The default is the string "<empty>".

        **Access functions:**

        QString **emptyLabel** () const
        void **setEmptyLabel** (const QString & **label** )

        **Member Function Documentation**
        """
        ...

    def setGroup(self, group: PySide2.QtWidgets.QUndoGroup) -> None:
        """
        **[slot] void QUndoView::setGroup(QUndoGroup * group )**

        Sets the group displayed by this view to **group**. If **group** is `nullptr`, the view will be empty.

        The view will update itself automatically whenever the active stack of the group changes.

        **See also** **group** () and **setStack** ().
        """
        ...

    def setStack(self, stack: PySide2.QtWidgets.QUndoStack) -> None:
        """
        **[slot] void QUndoView::setStack(QUndoStack * stack )**

        Sets the stack displayed by this view to **stack**. If **stack** is `nullptr`, the view will be empty.

        If the view was previously looking at a **QUndoGroup** , the group is set to `nullptr`.

        **See also** **stack** () and **setGroup** ().
        """
        ...

    def stack(self) -> PySide2.QtWidgets.QUndoStack:
        """
        **QUndoStack *QUndoView::stack() const**

        Returns the stack currently displayed by this view. If the view is looking at a **QUndoGroup** , this the group's active stack.

        **See also** **setStack** () and **setGroup** ().
        """
        ...
