"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QMediaStreamsControl(PySide2.QtMultimedia.QMediaControl):
    """
    **Detailed Description**

    The QMediaStreamsControl class provides descriptions of the available media streams and allows individual streams to be activated and deactivated.

    The interface name of QMediaStreamsControl is `org.qt-project.qt.mediastreamscontrol/5.0` as defined in **QMediaStreamsControl_iid** .

    **See also** **QMediaService::requestControl** ().
    """

    UnknownStream: QMediaStreamsControl = ...
    VideoStream: QMediaStreamsControl = ...
    AudioStream: QMediaStreamsControl = ...
    SubPictureStream: QMediaStreamsControl = ...
    DataStream: QMediaStreamsControl = ...

    class StreamType(object):
        UnknownStream: QMediaStreamsControl.StreamType = ...
        VideoStream: QMediaStreamsControl.StreamType = ...
        AudioStream: QMediaStreamsControl.StreamType = ...
        SubPictureStream: QMediaStreamsControl.StreamType = ...
        DataStream: QMediaStreamsControl.StreamType = ...

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        **[protected] QMediaStreamsControl::QMediaStreamsControl(QObject * parent = nullptr)**

        Constructs a new media streams control with the given **parent**.
        """
        ...

    def isActive(self, streamNumber: int) -> bool:
        """
        **[pure virtual] bool QMediaStreamsControl::isActive(int streamNumber )**

        Returns true if the media stream **streamNumber** is active.
        """
        ...

    def metaData(self, streamNumber: int, key: str) -> typing.Any:
        """
        **[pure virtual] QVariant QMediaStreamsControl::metaData(int streamNumber , const QString & key )**

        Returns the meta-data value of **key** for the given **streamNumber**.

        Useful metadata keys are QMediaMetaData::Title, QMediaMetaData::Description and QMediaMetaData::Language.
        """
        ...

    def setActive(self, streamNumber: int, state: bool) -> None:
        """
        **[pure virtual] void QMediaStreamsControl::setActive(int streamNumber , bool state )**

        Sets the active **state** of media stream **streamNumber**.

        Setting the active state of a media stream to true will activate it. If any other stream of the same type was previously active it will be deactivated. Setting the active state fo a media stream to false will deactivate it.

        **See also** **isActive** ().
        """
        ...

    def streamCount(self) -> int:
        """
        **[pure virtual] int QMediaStreamsControl::streamCount()**

        Returns the number of media streams.
        """
        ...

    def streamType(
        self, streamNumber: int
    ) -> PySide2.QtMultimedia.QMediaStreamsControl.StreamType:
        """
        **[pure virtual] QMediaStreamsControl::StreamType QMediaStreamsControl::streamType(int streamNumber )**

        Return the type of media stream **streamNumber**.
        """
        ...

    @property
    def activeStreamsChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        **[signal] void QMediaStreamsControl::activeStreamsChanged()**

        The signal is emitted when the active streams list is changed.
        """
        ...

    @property
    def streamsChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        **[signal] void QMediaStreamsControl::streamsChanged()**

        The signal is emitted when the available streams list is changed.
        """
        ...
