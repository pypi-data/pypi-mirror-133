"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QAudioEncoderSettings(object):
    """
    **Detailed Description**

    A audio encoder settings object is used to specify the audio encoder settings used by **QMediaRecorder** . Audio encoder settings are selected by constructing a QAudioEncoderSettings object, setting the desired properties and then passing it to a **QMediaRecorder**  instance using the **QMediaRecorder::setEncodingSettings** () function.

    **QAudioEncoderSettings**  audioSettings;
        audioSettings.setCodec("audio/mpeg");
        audioSettings.setChannelCount(2);

        recorder->setAudioSettings(audioSettings);

    **See also** **QMediaRecorder**  and **QAudioEncoderSettingsControl** .
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QAudioEncoderSettings::QAudioEncoderSettings()**

        Construct a null audio encoder settings object.
        """
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtMultimedia.QAudioEncoderSettings) -> None:
        """
        **QAudioEncoderSettings::QAudioEncoderSettings()**

        Construct a null audio encoder settings object.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def bitRate(self) -> int:
        """
        **int QAudioEncoderSettings::bitRate() const**

        Returns the bit rate of the compressed audio stream in bits per second.

        **See also** **setBitRate** ().
        """
        ...

    def channelCount(self) -> int:
        """
        **int QAudioEncoderSettings::channelCount() const**

        Returns the number of audio channels.

        **See also** **setChannelCount** ().
        """
        ...

    def codec(self) -> str:
        """
        **QString QAudioEncoderSettings::codec() const**

        Returns the audio codec.

        **See also** **setCodec** ().
        """
        ...

    def encodingMode(self) -> PySide2.QtMultimedia.QMultimedia.EncodingMode:
        """
        **QMultimedia::EncodingMode QAudioEncoderSettings::encodingMode() const**

        Returns the audio encoding mode.

        **See also** **setEncodingMode** () and **QMultimedia::EncodingMode** .
        """
        ...

    def encodingOption(self, option: str) -> typing.Any:
        """
        **QVariant QAudioEncoderSettings::encodingOption(const QString & option ) const**

        Returns the value of encoding **option**.

        **See also** **setEncodingOption** () and **encodingOptions** ().
        """
        ...

    def encodingOptions(self) -> typing.Dict:
        """
        **QVariantMap QAudioEncoderSettings::encodingOptions() const**

        Returns the all the encoding options as **QVariantMap** .

        **See also** **encodingOption** () and **setEncodingOptions** ().
        """
        ...

    def isNull(self) -> bool:
        """
        **bool QAudioEncoderSettings::isNull() const**

        Identifies if an audio settings object is initialized.

        Returns true if the settings object is null, and false if it is not.
        """
        ...

    def quality(self) -> PySide2.QtMultimedia.QMultimedia.EncodingQuality:
        """
        **QMultimedia::EncodingQuality QAudioEncoderSettings::quality() const**

        Returns the audio encoding quality.

        **See also** **setQuality** ().
        """
        ...

    def sampleRate(self) -> int:
        """
        **int QAudioEncoderSettings::sampleRate() const**

        Returns the audio sample rate in Hz.

        **See also** **setSampleRate** ().
        """
        ...

    def setBitRate(self, bitrate: int) -> None:
        """
        **void QAudioEncoderSettings::setBitRate(int rate )**

        Sets the audio bit **rate** in bits per second.

        **See also** **bitRate** ().
        """
        ...

    def setChannelCount(self, channels: int) -> None:
        """
        **void QAudioEncoderSettings::setChannelCount(int channels )**

        Sets the number of audio **channels**.

        A value of -1 indicates the encoder should make an optimal choice based on what is available from the audio source and the limitations of the codec.

        **See also** **channelCount** ().
        """
        ...

    def setCodec(self, codec: str) -> None:
        """
        **void QAudioEncoderSettings::setCodec(const QString & codec )**

        Sets the audio **codec**.

        **See also** **codec** ().
        """
        ...

    def setEncodingMode(
        self, arg__1: PySide2.QtMultimedia.QMultimedia.EncodingMode
    ) -> None:
        """
        **void QAudioEncoderSettings::setEncodingMode(QMultimedia::EncodingMode mode )**

        Sets the audio encoding **mode** setting.

        If **QMultimedia::ConstantQualityEncoding**  is set, the quality encoding parameter is used and bit rate is ignored, otherwise the bitrate is used.

        The audio codec, channels count and sample rate settings are used in all the encoding modes.

        **See also** **encodingMode** () and **QMultimedia::EncodingMode** .
        """
        ...

    def setEncodingOption(self, option: str, value: typing.Any) -> None:
        """
        **void QAudioEncoderSettings::setEncodingOption(const QString & option , const QVariant & value )**

        Set the encoding **option** to **value**.

        The supported set and meaning of encoding options are system and selected codec specific.

        **See also** **encodingOption** () and **setEncodingOptions** ().
        """
        ...

    def setEncodingOptions(self, options: typing.Dict) -> None:
        """
        **void QAudioEncoderSettings::setEncodingOptions(const QVariantMap & options )**

        Replace all the encoding options with **options**.

        The supported set and meaning of encoding options are system and selected codec specific.

        **See also** **encodingOptions** (), **encodingOption** (), and **setEncodingOption** ().
        """
        ...

    def setQuality(
        self, quality: PySide2.QtMultimedia.QMultimedia.EncodingQuality
    ) -> None:
        """
        **void QAudioEncoderSettings::setQuality(QMultimedia::EncodingQuality quality )**

        Set the audio encoding **quality**.

        Setting the audio quality parameter allows backend to choose the balanced set of encoding parameters to achieve the desired quality level.

        The **quality** settings parameter is only used in the **constant quality**  **encoding mode** .

        **See also** **quality** ().
        """
        ...

    def setSampleRate(self, rate: int) -> None:
        """
        **void QAudioEncoderSettings::setSampleRate(int rate )**

        Sets the audio sample **rate** in Hz.

        A value of -1 indicates the encoder should make an optimal choice based on what is avaialbe from the audio source and the limitations of the codec.

        **See also** **sampleRate** ().
        """
        ...
