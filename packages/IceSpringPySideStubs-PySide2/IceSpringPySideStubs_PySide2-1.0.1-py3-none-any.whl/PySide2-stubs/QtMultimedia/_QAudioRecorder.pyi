"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QAudioRecorder(PySide2.QtMultimedia.QMediaRecorder):
    """
    **Detailed Description**

    The QAudioRecorder class is a high level media recording class and contains the same functionality as **QMediaRecorder** .

    audioRecorder = new **QAudioRecorder** ;

        **QAudioEncoderSettings**  audioSettings;
        audioSettings.setCodec("audio/amr");
        audioSettings.setQuality(QMultimedia::HighQuality);

        audioRecorder->setEncodingSettings(audioSettings);

        audioRecorder->setOutputLocation(**QUrl** ::fromLocalFile("test.amr"));
        audioRecorder->record();

    In addition QAudioRecorder provides functionality for selecting the audio input.

    const **QStringList**  inputs = audioRecorder->audioInputs();
        **QString**  selectedInput = audioRecorder->defaultAudioInput();

        for (const **QString**  &input : inputs) {
            **QString**  description = audioRecorder->audioInputDescription(input);
            // show descriptions to user and allow selection
            selectedInput = input;
        }

        audioRecorder->setAudioInput(selectedInput);

    The **Audio Recorder Example**  shows how to use this class in more detail.

    **See also** **QMediaRecorder**  and **QAudioInputSelectorControl** .
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        **QAudioRecorder::QAudioRecorder(QObject * parent = nullptr)**

        Constructs an audio recorder. The **parent** is passed to **QMediaObject** .
        """
        ...

    def audioInput(self) -> str:
        """
        **QString QAudioRecorder::audioInput() const**

        Returns the active audio input name.

        **Note:** Getter function for property audioInput.

        **See also** **setAudioInput** ().
        """
        ...

    def audioInputDescription(self, name: str) -> str:
        """
        **QString QAudioRecorder::audioInputDescription(const QString & name ) const**

        Returns the readable translated description of the audio input device with **name**.
        """
        ...

    def audioInputs(self) -> typing.List:
        """
        **QStringList QAudioRecorder::audioInputs() const**

        Returns a list of available audio inputs
        """
        ...

    def defaultAudioInput(self) -> str:
        """
        **QString QAudioRecorder::defaultAudioInput() const**

        Returns the default audio input name.
        """
        ...

    def setAudioInput(self, name: str) -> None:
        """
        **[slot] void QAudioRecorder::setAudioInput(const QString & name )**

        Set the active audio input to **name**.

        **Note:** Setter function for property **audioInput** .

        **See also** **audioInput** ().
        """
        ...

    @property
    def audioInputChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        **[signal] void QAudioRecorder::audioInputChanged(const QString & name )**

        Signal emitted when active audio input changes to **name**.

        **Note:** Notifier signal for property **audioInput** .
        """
        ...

    @property
    def availableAudioInputsChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        **[signal] void QAudioRecorder::availableAudioInputsChanged()**

        Signal is emitted when the available audio inputs change.
        """
        ...
