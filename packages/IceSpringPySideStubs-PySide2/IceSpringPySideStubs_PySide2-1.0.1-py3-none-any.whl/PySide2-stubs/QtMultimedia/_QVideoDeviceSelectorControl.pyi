"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QVideoDeviceSelectorControl(PySide2.QtMultimedia.QMediaControl):
    """
    **Detailed Description**

    The QVideoDeviceSelectorControl class provides descriptions of the video devices available on a system and allows one to be selected as the endpoint of a media service.

    The interface name of QVideoDeviceSelectorControl is `org.qt-project.qt.videodeviceselectorcontrol/5.0` as defined in **QVideoDeviceSelectorControl_iid** .
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        **[protected] QVideoDeviceSelectorControl::QVideoDeviceSelectorControl(QObject * parent = nullptr)**

        Constructs a video device selector control with the given **parent**.
        """
        ...

    def defaultDevice(self) -> int:
        """
        **[pure virtual] int QVideoDeviceSelectorControl::defaultDevice() const**

        Returns the index of the default video device.
        """
        ...

    def deviceCount(self) -> int:
        """
        **[pure virtual] int QVideoDeviceSelectorControl::deviceCount() const**

        Returns the number of available video devices;
        """
        ...

    def deviceDescription(self, index: int) -> str:
        """
        **[pure virtual] QString QVideoDeviceSelectorControl::deviceDescription(int index ) const**

        Returns a description of the video device at **index**.
        """
        ...

    def deviceName(self, index: int) -> str:
        """
        **[pure virtual] QString QVideoDeviceSelectorControl::deviceName(int index ) const**

        Returns the name of the video device at **index**.
        """
        ...

    def selectedDevice(self) -> int:
        """
        **[pure virtual] int QVideoDeviceSelectorControl::selectedDevice() const**

        Returns the index of the selected video device.

        **See also** **setSelectedDevice** ().
        """
        ...

    def setSelectedDevice(self, index: int) -> None:
        """
        **[pure virtual slot] void QVideoDeviceSelectorControl::setSelectedDevice(int index )**

        Sets the selected video device **index**.

        **See also** **selectedDevice** ().
        """
        ...

    @property
    def devicesChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        **[signal] void QVideoDeviceSelectorControl::devicesChanged()**

        Signals that the list of available video devices has changed.
        """
        ...

    @property
    def selectedDeviceChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        **[signal] void QVideoDeviceSelectorControl::selectedDeviceChanged(int index )**

        Signals that the selected video device **index** has changed.

        **Note:** Signal **selectedDeviceChanged** is overloaded in this class. To connect to this signal by using the function pointer syntax, Qt provides a convenient helper for obtaining the function pointer as shown in this example:

        connect(videoDeviceSelectorControl, QOverload<int>::of(&**QVideoDeviceSelectorControl** ::selectedDeviceChanged),
                [=](int index){ /* ... */ });
        """
        ...

    @property
    def selectedDeviceChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        **[signal] void QVideoDeviceSelectorControl::selectedDeviceChanged(int index )**

        Signals that the selected video device **index** has changed.

        **Note:** Signal **selectedDeviceChanged** is overloaded in this class. To connect to this signal by using the function pointer syntax, Qt provides a convenient helper for obtaining the function pointer as shown in this example:

        connect(videoDeviceSelectorControl, QOverload<int>::of(&**QVideoDeviceSelectorControl** ::selectedDeviceChanged),
                [=](int index){ /* ... */ });
        """
        ...
