"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtPositioning
import PySide2.QtLocation

bytes = str


class QGeoRouteSegment(object):
    """
    **Detailed Description**

    A QGeoRouteSegment instance has information about the physical layout of the route segment, the length of the route and estimated time required to traverse the route segment and an optional **QGeoManeuver**  associated with the beginning of the route segment.

    QGeoRouteSegment instances can be thought of as edges on a routing graph, with **QGeoManeuver**  instances as optional labels attached to the vertices of the graph.
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QGeoRouteSegment::QGeoRouteSegment()**

        Constructs an invalid route segment object.

        The route segment will remain invalid until one of **setNextRouteSegment** (), **setTravelTime** (), **setDistance** (), **setPath** () or **setManeuver** () is called.
        """
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtLocation.QGeoRouteSegment) -> None:
        """
        **QGeoRouteSegment::QGeoRouteSegment()**

        Constructs an invalid route segment object.

        The route segment will remain invalid until one of **setNextRouteSegment** (), **setTravelTime** (), **setDistance** (), **setPath** () or **setManeuver** () is called.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def distance(self) -> float:
        """
        **qreal QGeoRouteSegment::distance() const**

        Returns the distance covered by this segment of the route, in meters.

        **See also** **setDistance** ().
        """
        ...

    def isLegLastSegment(self) -> bool:
        """
        **bool QGeoRouteSegment::isLegLastSegment() const**

        Returns whether this route segment is the last segment of a route leg.

        This function was introduced in Qt 5.12.
        """
        ...

    def isValid(self) -> bool:
        """
        **bool QGeoRouteSegment::isValid() const**

        Returns whether this route segment is valid or not.

        If **nextRouteSegment** () is called on the last route segment of a route, the returned value will be an invalid route segment.
        """
        ...

    def maneuver(self) -> PySide2.QtLocation.QGeoManeuver:
        """
        **QGeoManeuver QGeoRouteSegment::maneuver() const**

        Returns the maneuver for this route segment.

        Will return an invalid **QGeoManeuver**  if no information has been attached to the starting point of this route segment.

        **See also** **setManeuver** ().
        """
        ...

    def nextRouteSegment(self) -> PySide2.QtLocation.QGeoRouteSegment:
        """
        **QGeoRouteSegment QGeoRouteSegment::nextRouteSegment() const**

        Returns the next route segment in the route.

        Will return an invalid route segment if this is the last route segment in the route.

        **See also** **setNextRouteSegment** ().
        """
        ...

    def path(self) -> typing.List:
        """
        **QList<QGeoCoordinate> QGeoRouteSegment::path() const**

        Returns the geometric shape of this route segment of the route.

        The coordinates should be listed in the order in which they would be traversed by someone traveling along this segment of the route.

        **See also** **setPath** ().
        """
        ...

    def setDistance(self, distance: float) -> None:
        """
        **void QGeoRouteSegment::setDistance(qreal distance )**

        Sets the distance covered by this segment of the route, in meters, to **distance**.

        **See also** **distance** ().
        """
        ...

    def setManeuver(self, maneuver: PySide2.QtLocation.QGeoManeuver) -> None:
        """
        **void QGeoRouteSegment::setManeuver(const QGeoManeuver & maneuver )**

        Sets the maneuver for this route segment to **maneuver**.

        **See also** **maneuver** ().
        """
        ...

    def setNextRouteSegment(
        self, routeSegment: PySide2.QtLocation.QGeoRouteSegment
    ) -> None:
        """
        **void QGeoRouteSegment::setNextRouteSegment(const QGeoRouteSegment & routeSegment )**

        Sets the next route segment in the route to **routeSegment**.

        **See also** **nextRouteSegment** ().
        """
        ...

    def setPath(self, path: typing.Sequence) -> None:
        """
        **void QGeoRouteSegment::setPath(const QList<QGeoCoordinate> & path )**

        Sets the geometric shape of this segment of the route to **path**.

        The coordinates in **path** should be listed in the order in which they would be traversed by someone traveling along this segment of the route.

        **See also** **path** ().
        """
        ...

    def setTravelTime(self, secs: int) -> None:
        """
        **void QGeoRouteSegment::setTravelTime(int secs )**

        Sets the estimated amount of time it will take to traverse this segment of the route, in seconds, to **secs**.

        **See also** **travelTime** ().
        """
        ...

    def travelTime(self) -> int:
        """
        **int QGeoRouteSegment::travelTime() const**

        Returns the estimated amount of time it will take to traverse this segment of the route, in seconds.

        **See also** **setTravelTime** ().
        """
        ...
