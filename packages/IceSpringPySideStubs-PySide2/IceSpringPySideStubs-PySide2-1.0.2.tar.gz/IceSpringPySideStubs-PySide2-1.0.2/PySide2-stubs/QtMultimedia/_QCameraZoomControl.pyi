"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QCameraZoomControl(PySide2.QtMultimedia.QMediaControl):
    """
    https://doc.qt.io/qt-5/qcamerazoomcontrol.html

    **Detailed Description**

    The interface name of QCameraZoomControl is `org.qt-project.qt.camerazoomcontrol/5.0` as defined in **QCameraZoomControl_iid** .

    **See also** **QMediaService::requestControl** () and **QCamera** .
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#QCameraZoomControl

        **[protected] QCameraZoomControl::QCameraZoomControl(QObject * parent = nullptr)**

        Constructs a camera zoom control object with **parent**.
        """
        ...

    def currentDigitalZoom(self) -> float:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#currentDigitalZoom

        **[pure virtual] qreal QCameraZoomControl::currentDigitalZoom() const**

        Return the current digital zoom value.
        """
        ...

    def currentOpticalZoom(self) -> float:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#currentOpticalZoom

        **[pure virtual] qreal QCameraZoomControl::currentOpticalZoom() const**

        Return the current optical zoom value.
        """
        ...

    def maximumDigitalZoom(self) -> float:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#maximumDigitalZoom

        **[pure virtual] qreal QCameraZoomControl::maximumDigitalZoom() const**

        Returns the maximum digital zoom value, or 1.0 if digital zoom is not supported.
        """
        ...

    def maximumOpticalZoom(self) -> float:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#maximumOpticalZoom

        **[pure virtual] qreal QCameraZoomControl::maximumOpticalZoom() const**

        Returns the maximum optical zoom value, or 1.0 if optical zoom is not supported.
        """
        ...

    def requestedDigitalZoom(self) -> float:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#requestedDigitalZoom

        **[pure virtual] qreal QCameraZoomControl::requestedDigitalZoom() const**

        Return the requested digital zoom value.
        """
        ...

    def requestedOpticalZoom(self) -> float:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#requestedOpticalZoom

        **[pure virtual] qreal QCameraZoomControl::requestedOpticalZoom() const**

        Return the requested optical zoom value.
        """
        ...

    def zoomTo(self, optical: float, digital: float) -> None:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#zoomTo

        **[pure virtual] void QCameraZoomControl::zoomTo(qreal optical , qreal digital )**

        Sets **optical** and **digital** zoom values.

        Zooming can be asynchronous with value changes reported with **currentDigitalZoomChanged** () and **currentOpticalZoomChanged** () signals.

        The backend should expect and correctly handle frequent zoomTo() calls during zoom animations or slider movements.
        """
        ...

    @property
    def currentDigitalZoomChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#currentDigitalZoomChanged

        **[signal] void QCameraZoomControl::currentDigitalZoomChanged(qreal zoom )**

        Signal emitted when the current digital **zoom** value changed.
        """
        ...

    @property
    def currentOpticalZoomChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#currentOpticalZoomChanged

        **[signal] void QCameraZoomControl::currentOpticalZoomChanged(qreal zoom )**

        Signal emitted when the current optical **zoom** value changed.
        """
        ...

    @property
    def maximumDigitalZoomChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#maximumDigitalZoomChanged

        **[signal] void QCameraZoomControl::maximumDigitalZoomChanged(qreal zoom )**

        Signal emitted when the maximum supported digital **zoom** value changed.

        The maximum supported zoom value can depend on other camera settings, like capture mode or resolution.
        """
        ...

    @property
    def maximumOpticalZoomChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#maximumOpticalZoomChanged

        **[signal] void QCameraZoomControl::maximumOpticalZoomChanged(qreal zoom )**

        Signal emitted when the maximum supported optical **zoom** value changed.

        The maximum supported zoom value can depend on other camera settings, like focusing mode.
        """
        ...

    @property
    def requestedDigitalZoomChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#requestedDigitalZoomChanged

        **[signal] void QCameraZoomControl::requestedDigitalZoomChanged(qreal zoom )**

        Signal emitted when the requested digital **zoom** value changed.
        """
        ...

    @property
    def requestedOpticalZoomChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qcamerazoomcontrol.html#requestedOpticalZoomChanged

        **[signal] void QCameraZoomControl::requestedOpticalZoomChanged(qreal zoom )**

        Signal emitted when the requested optical **zoom** value changed.
        """
        ...
