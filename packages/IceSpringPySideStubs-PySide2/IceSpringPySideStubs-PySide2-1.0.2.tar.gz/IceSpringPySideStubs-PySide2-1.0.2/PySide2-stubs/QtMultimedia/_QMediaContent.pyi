"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QMediaContent(object):
    """
    https://doc.qt.io/qt-5/qmediacontent.html

    **Detailed Description**

    QMediaContent is used within the multimedia framework as the logical handle to media content. A QMediaContent object contains a **QNetworkRequest**  which provides the URL of the content.

    A non-null QMediaContent will always have a reference to the content available through the **request** () method.

    Alternatively QMediaContent can represent a playlist and contain a pointer to a valid **QMediaPlaylist**  object. In this case URL is optional and can either be empty or point to the playlist URL.
    """

    @typing.overload
    def __init__(self) -> None:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#QMediaContent

        **QMediaContent::QMediaContent()**

        Constructs a null QMediaContent.
        """
        ...

    @typing.overload
    def __init__(self, contentRequest: PySide2.QtNetwork.QNetworkRequest) -> None:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#QMediaContent

        **QMediaContent::QMediaContent()**

        Constructs a null QMediaContent.
        """
        ...

    @typing.overload
    def __init__(self, contentResource: PySide2.QtMultimedia.QMediaResource) -> None:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#QMediaContent

        **QMediaContent::QMediaContent()**

        Constructs a null QMediaContent.
        """
        ...

    @typing.overload
    def __init__(self, contentUrl: PySide2.QtCore.QUrl) -> None:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#QMediaContent

        **QMediaContent::QMediaContent()**

        Constructs a null QMediaContent.
        """
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtMultimedia.QMediaContent) -> None:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#QMediaContent

        **QMediaContent::QMediaContent()**

        Constructs a null QMediaContent.
        """
        ...

    @typing.overload
    def __init__(
        self,
        playlist: PySide2.QtMultimedia.QMediaPlaylist,
        contentUrl: PySide2.QtCore.QUrl = ...,
        takeOwnership: bool = ...,
    ) -> None:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#QMediaContent

        **QMediaContent::QMediaContent()**

        Constructs a null QMediaContent.
        """
        ...

    @typing.overload
    def __init__(self, resources: typing.Sequence) -> None:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#QMediaContent

        **QMediaContent::QMediaContent()**

        Constructs a null QMediaContent.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def canonicalRequest(self) -> PySide2.QtNetwork.QNetworkRequest:
        ...

    def canonicalResource(self) -> PySide2.QtMultimedia.QMediaResource:
        ...

    def canonicalUrl(self) -> PySide2.QtCore.QUrl:
        ...

    def isNull(self) -> bool:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#isNull

        **bool QMediaContent::isNull() const**

        Returns true if this media content is null (uninitialized); false otherwise.
        """
        ...

    def playlist(self) -> PySide2.QtMultimedia.QMediaPlaylist:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#playlist

        **QMediaPlaylist *QMediaContent::playlist() const**

        Returns a playlist for this media content or 0 if this **QMediaContent**  is not a playlist.
        """
        ...

    def request(self) -> PySide2.QtNetwork.QNetworkRequest:
        """
        https://doc.qt.io/qt-5/qmediacontent.html#request

        **QNetworkRequest QMediaContent::request() const**

        Returns a **QNetworkRequest**  that represents the resource for this media content.

        This function was introduced in Qt 5.14.
        """
        ...

    def resources(self) -> typing.List:
        ...
