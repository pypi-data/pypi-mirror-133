"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtWidgets
import PySide2.QtAxContainer

bytes = str


class QAxSelect(PySide2.QtWidgets.QDialog):
    """
    https://doc.qt.io/qt-5/qaxselect.html

    **Detailed Description**

    QAxSelect dialog can be used to provide users with a way to browse the
    registered COM components of the system and select one. It also provides a
    combo box for selecting desired sandboxing level. The CLSID of the selected
    component can then be used in the application to e.g. initialize a
    **QAxWidget** :

    **QAxSelect**  select;
        if (select.exec()) {
            **QAxWidget**
    *container = new **QAxWidget** ;
    container->setControl(select.clsid());
            container->show();
        }

    **See also** **QAxWidget**  and **ActiveQt Framework** .
    """

    SandboxingNone: QAxSelect = ...
    SandboxingProcess: QAxSelect = ...
    SandboxingLowIntegrity: QAxSelect = ...

    class SandboxingLevel(object):
        SandboxingNone: QAxSelect.SandboxingLevel = ...
        SandboxingProcess: QAxSelect.SandboxingLevel = ...
        SandboxingLowIntegrity: QAxSelect.SandboxingLevel = ...

    def __init__(
        self,
        parent: typing.Optional[PySide2.QtWidgets.QWidget] = ...,
        flags: PySide2.QtCore.Qt.WindowFlags = ...,
    ) -> None:
        """
        https://doc.qt.io/qt-5/qaxselect.html#QAxSelect

        **QAxSelect::QAxSelect(QWidget * parent = nullptr, Qt::WindowFlags flags
        = Qt::WindowFlags())**

        Constructs a QAxSelect object. Dialog parent widget and window flags can
        be optionally specified with **parent** and **flags** parameters,
        respectively.
        """
        ...

    def clsid(self) -> str:
        """
        https://doc.qt.io/qt-5/qaxselect.html#clsid

        **QString QAxSelect::clsid() const**

        Returns the CLSID of the selected COM component.
        """
        ...

    def sandboxingLevel(self) -> PySide2.QtAxContainer.QAxSelect.SandboxingLevel:
        """
        https://doc.qt.io/qt-5/qaxselect.html#sandboxingLevel

        **QAxSelect::SandboxingLevel QAxSelect::sandboxingLevel() const**

        Returns the desired level of sandboxing for the ActiveX control.

        This function was introduced in Qt 5.13.
        """
        ...
