"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QCameraViewfinderSettingsControl(PySide2.QtMultimedia.QMediaControl):
    """
    https://doc.qt.io/qt-5/qcameraviewfindersettingscontrol.html

    **Detailed Description**

    The interface name of QCameraViewfinderSettingsControl is `org.qt-
    project.qt.cameraviewfindersettingscontrol/5.0` as defined in
    **QCameraViewfinderSettingsControl_iid** .

    **Warning:** New backends should implement
    **QCameraViewfinderSettingsControl2**  instead. Application developers
    should request this control only if **QCameraViewfinderSettingsControl2**
    is not available.

    **See also** **QMediaService::requestControl** (),
    **QCameraViewfinderSettingsControl2** , and **QCamera** .
    """

    Resolution: QCameraViewfinderSettingsControl = ...
    PixelAspectRatio: QCameraViewfinderSettingsControl = ...
    MinimumFrameRate: QCameraViewfinderSettingsControl = ...
    MaximumFrameRate: QCameraViewfinderSettingsControl = ...
    PixelFormat: QCameraViewfinderSettingsControl = ...
    UserParameter: QCameraViewfinderSettingsControl = ...

    class ViewfinderParameter(object):
        Resolution: QCameraViewfinderSettingsControl.ViewfinderParameter = ...
        PixelAspectRatio: QCameraViewfinderSettingsControl.ViewfinderParameter = ...
        MinimumFrameRate: QCameraViewfinderSettingsControl.ViewfinderParameter = ...
        MaximumFrameRate: QCameraViewfinderSettingsControl.ViewfinderParameter = ...
        PixelFormat: QCameraViewfinderSettingsControl.ViewfinderParameter = ...
        UserParameter: QCameraViewfinderSettingsControl.ViewfinderParameter = ...

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qcameraviewfindersettingscontrol.html#QCameraView
        finderSettingsControl

        **[protected] QCameraViewfinderSettingsControl::QCameraViewfinderSetting
        sControl(QObject * parent = nullptr)**

        Constructs a camera viewfinder control object with **parent**.
        """
        ...

    def isViewfinderParameterSupported(
        self,
        parameter: PySide2.QtMultimedia.QCameraViewfinderSettingsControl.ViewfinderParameter,
    ) -> bool:
        """
        https://doc.qt.io/qt-5/qcameraviewfindersettingscontrol.html#isViewfinde
        rParameterSupported

        **[pure virtual] bool QCameraViewfinderSettingsControl::isViewfinderPara
        meterSupported(QCameraViewfinderSettingsControl::ViewfinderParameter
        parameter ) const**

        Returns true if configuration of viewfinder **parameter** is supported
        by camera backend.
        """
        ...

    def setViewfinderParameter(
        self,
        parameter: PySide2.QtMultimedia.QCameraViewfinderSettingsControl.ViewfinderParameter,
        value: typing.Any,
    ) -> None:
        """
        https://doc.qt.io/qt-5/qcameraviewfindersettingscontrol.html#setViewfind
        erParameter

        **[pure virtual] void QCameraViewfinderSettingsControl::setViewfinderPar
        ameter(QCameraViewfinderSettingsControl::ViewfinderParameter parameter ,
        const QVariant & value )**

        Set the prefferred **value** of viewfinder **parameter**.

        Calling this while the camera is active may result in the camera being
        stopped and reloaded. If video recording is in progress, this call may
        be ignored.

        If an unsupported parameter is specified the camera may fail to load, or
        the setting may be ignored.

        Viewfinder parameters may also depend on other camera settings,
        especially in video capture mode. If camera configuration conflicts with
        viewfinder settings, the camara configuration is usually preferred.

        **See also** **viewfinderParameter** ().
        """
        ...

    def viewfinderParameter(
        self,
        parameter: PySide2.QtMultimedia.QCameraViewfinderSettingsControl.ViewfinderParameter,
    ) -> typing.Any:
        """
        https://doc.qt.io/qt-5/qcameraviewfindersettingscontrol.html#viewfinderP
        arameter

        **[pure virtual] QVariant QCameraViewfinderSettingsControl::viewfinderPa
        rameter(QCameraViewfinderSettingsControl::ViewfinderParameter parameter
        ) const**

        Returns the value of viewfinder **parameter**.

        **See also** **setViewfinderParameter** ().
        """
        ...
