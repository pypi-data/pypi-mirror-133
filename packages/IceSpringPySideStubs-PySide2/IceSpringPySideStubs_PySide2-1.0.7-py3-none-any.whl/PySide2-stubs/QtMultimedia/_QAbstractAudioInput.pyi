"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QAbstractAudioInput(PySide2.QtCore.QObject):
    """
    https://doc.qt.io/qt-5/qabstractaudioinput.html

    **Detailed Description**

    QAudioDeviceInput keeps an instance of QAbstractAudioInput and routes calls
    to functions of the same name to QAbstractAudioInput. This means that it is
    QAbstractAudioInput that implements the audio functionality. For a
    description of the functionality, see the **QAudioInput**  class
    description.

    **See also** **QAudioInput** .
    """

    def __init__(self) -> None:
        ...

    def bufferSize(self) -> int:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#bufferSize

        **[pure virtual] int QAbstractAudioInput::bufferSize() const**

        Returns the audio buffer size in milliseconds.

        **See also** **setBufferSize** ().
        """
        ...

    def bytesReady(self) -> int:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#bytesReady

        **[pure virtual] int QAbstractAudioInput::bytesReady() const**

        Returns the amount of audio data available to read in bytes.
        """
        ...

    def elapsedUSecs(self) -> int:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#elapsedUSecs

        **[pure virtual] qint64 QAbstractAudioInput::elapsedUSecs() const**

        Returns the milliseconds since **start** () was called, including time
        in Idle and suspend states.
        """
        ...

    def error(self) -> PySide2.QtMultimedia.QAudio.Error:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#error

        **[pure virtual] QAudio::Error QAbstractAudioInput::error() const**

        Returns the error state.
        """
        ...

    def format(self) -> PySide2.QtMultimedia.QAudioFormat:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#format

        **[pure virtual] QAudioFormat QAbstractAudioInput::format() const**

        Returns the **QAudioFormat**  being used

        **See also** **setFormat** ().
        """
        ...

    def notifyInterval(self) -> int:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#notifyInterval

        **[pure virtual] int QAbstractAudioInput::notifyInterval() const**

        Returns the notify interval in milliseconds.

        **See also** **setNotifyInterval** ().
        """
        ...

    def periodSize(self) -> int:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#periodSize

        **[pure virtual] int QAbstractAudioInput::periodSize() const**

        Returns the period size in bytes.
        """
        ...

    def processedUSecs(self) -> int:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#processedUSecs

        **[pure virtual] qint64 QAbstractAudioInput::processedUSecs() const**

        Returns the amount of audio data processed since **start** () was called
        in milliseconds.
        """
        ...

    def reset(self) -> None:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#reset

        **[pure virtual] void QAbstractAudioInput::reset()**

        Drops all audio data in the buffers, resets buffers to zero.
        """
        ...

    def resume(self) -> None:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#resume

        **[pure virtual] void QAbstractAudioInput::resume()**

        Resumes processing audio data after a **suspend** ().
        """
        ...

    def setBufferSize(self, value: int) -> None:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#setBufferSize

        **[pure virtual] void QAbstractAudioInput::setBufferSize(int value )**

        Sets the audio buffer size to **value** in milliseconds.

        **See also** **bufferSize** ().
        """
        ...

    def setFormat(self, fmt: PySide2.QtMultimedia.QAudioFormat) -> None:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#setFormat

        **[pure virtual] void QAbstractAudioInput::setFormat(const QAudioFormat
        & fmt )**

        Set the **QAudioFormat**  to use to **fmt**. Setting the format is only
        allowable while in **QAudio::StoppedState** .

        **See also** **format** ().
        """
        ...

    def setNotifyInterval(self, milliSeconds: int) -> None:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#setNotifyInterval

        **[pure virtual] void QAbstractAudioInput::setNotifyInterval(int ms )**

        Sets the interval for **notify** () signal to be emitted. This is based
        on the **ms** of audio data processed not on actual real-time. The
        resolution of the timer is platform specific.

        **See also** **notifyInterval** ().
        """
        ...

    def setVolume(self, arg__1: float) -> None:
        ...

    @typing.overload
    def start(self) -> PySide2.QtCore.QIODevice:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#start

        **[pure virtual] void QAbstractAudioInput::start(QIODevice * device )**

        Uses the **device** as the **QIODevice**  to transfer data.
        """
        ...

    @typing.overload
    def start(self, device: PySide2.QtCore.QIODevice) -> None:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#start

        **[pure virtual] void QAbstractAudioInput::start(QIODevice * device )**

        Uses the **device** as the **QIODevice**  to transfer data.
        """
        ...

    def state(self) -> PySide2.QtMultimedia.QAudio.State:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#state

        **[pure virtual] QAudio::State QAbstractAudioInput::state() const**

        Returns the state of audio processing.
        """
        ...

    def stop(self) -> None:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#stop

        **[pure virtual] void QAbstractAudioInput::stop()**

        Stops the audio input.
        """
        ...

    def suspend(self) -> None:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#suspend

        **[pure virtual] void QAbstractAudioInput::suspend()**

        Stops processing audio data, preserving buffered audio data.
        """
        ...

    def volume(self) -> float:
        ...

    @property
    def errorChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#errorChanged

        **[signal] void QAbstractAudioInput::errorChanged(QAudio::Error error
        )**

        This signal is emitted when the **error** state has changed.
        """
        ...

    @property
    def notify(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#notify

        **[signal] void QAbstractAudioInput::notify()**

        This signal is emitted when x ms of audio data has been processed the
        interval set by **setNotifyInterval** (x).
        """
        ...

    @property
    def stateChanged(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qabstractaudioinput.html#stateChanged

        **[signal] void QAbstractAudioInput::stateChanged(QAudio::State state
        )**

        This signal is emitted when the device **state** has changed.
        """
        ...
