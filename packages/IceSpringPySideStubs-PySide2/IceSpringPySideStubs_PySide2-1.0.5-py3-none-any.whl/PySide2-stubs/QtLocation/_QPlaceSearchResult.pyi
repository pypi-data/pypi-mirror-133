"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtPositioning
import PySide2.QtLocation

bytes = str


class QPlaceSearchResult(object):
    """
    https://doc.qt.io/qt-5/qplacesearchresult.html

    **Detailed Description**

    A list of search results can be retrieved from the **QPlaceSearchReply**
    after it has successfully completed the request. Common to all search
    results are the **title**  and **icon** , which can be used to present the
    search result to the user.

    The intended usage is that depending on the **type** , the search result can
    be converted to a more detailed subclass like so:

    if (result.type() == **QPlaceSearchResult** ::PlaceResult) {
    **QPlaceResult**  placeResult = result;
            **qDebug** () <<
    placeResult.place().name();
            **qDebug** () <<
    placeResult.place().location().coordinate();
            **qDebug** () <<
    placeResult.distance();
        }

    The implementation is handled in such a way that object slicing is not an
    issue. It is not expected that client applications or backend plugins
    instantiate a QPlaceSearchResult directly, but rather client applications
    simply convert to search result subclasses and backend plugins only
    instantiate subclasses.

    **See also** **QPlaceResult** .
    """

    UnknownSearchResult: QPlaceSearchResult = ...
    PlaceResult: QPlaceSearchResult = ...
    ProposedSearchResult: QPlaceSearchResult = ...

    class SearchResultType(object):
        UnknownSearchResult: QPlaceSearchResult.SearchResultType = ...
        PlaceResult: QPlaceSearchResult.SearchResultType = ...
        ProposedSearchResult: QPlaceSearchResult.SearchResultType = ...

    @typing.overload
    def __init__(self) -> None:
        """
        https://doc.qt.io/qt-5/qplacesearchresult.html#QPlaceSearchResult

        **QPlaceSearchResult::QPlaceSearchResult()**

        Constructs a new search result.
        """
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtLocation.QPlaceSearchResult) -> None:
        """
        https://doc.qt.io/qt-5/qplacesearchresult.html#QPlaceSearchResult

        **QPlaceSearchResult::QPlaceSearchResult()**

        Constructs a new search result.
        """
        ...

    def icon(self) -> PySide2.QtLocation.QPlaceIcon:
        """
        https://doc.qt.io/qt-5/qplacesearchresult.html#icon

        **QPlaceIcon QPlaceSearchResult::icon() const**

        Returns an icon that can be used to represent the search result.

        **See also** **setIcon** ().
        """
        ...

    def setIcon(self, icon: PySide2.QtLocation.QPlaceIcon) -> None:
        """
        https://doc.qt.io/qt-5/qplacesearchresult.html#setIcon

        **void QPlaceSearchResult::setIcon(const QPlaceIcon & icon )**

        Sets the icon of the search result to **icon**.

        **See also** **icon** ().
        """
        ...

    def setTitle(self, title: str) -> None:
        """
        https://doc.qt.io/qt-5/qplacesearchresult.html#setTitle

        **void QPlaceSearchResult::setTitle(const QString & title )**

        Sets the title of the search result to **title**.

        **See also** **title** ().
        """
        ...

    def title(self) -> str:
        """
        https://doc.qt.io/qt-5/qplacesearchresult.html#title

        **QString QPlaceSearchResult::title() const**

        Returns the title of the search result. This string can be used to
        display the search result to the user.

        **See also** **setTitle** ().
        """
        ...

    def type(self) -> PySide2.QtLocation.QPlaceSearchResult.SearchResultType:
        """
        https://doc.qt.io/qt-5/qplacesearchresult.html#type

        **QPlaceSearchResult::SearchResultType QPlaceSearchResult::type()
        const**

        Returns the result type.
        """
        ...
