"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtMultimedia, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QMediaAudioProbeControl(PySide2.QtMultimedia.QMediaControl):
    """
    https://doc.qt.io/qt-5/qmediaaudioprobecontrol.html

    **Detailed Description**

    **QAudioProbe**  is the client facing class for probing audio - this class
    is implemented by media backends to provide this functionality.

    The interface name of QMediaAudioProbeControl is `org.qt-
    project.qt.mediaaudioprobecontrol/5.0` as defined in
    **QMediaAudioProbeControl_iid** .

    **See also** **QAudioProbe** , **QMediaService::requestControl** (),
    **QMediaPlayer** , and **QCamera** .
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qmediaaudioprobecontrol.html#QMediaAudioProbeCont
        rol

        **[protected] QMediaAudioProbeControl::QMediaAudioProbeControl(QObject *
        parent = nullptr)**

        Create a new media audio probe control object with the given **parent**.
        """
        ...

    @property
    def audioBufferProbed(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qmediaaudioprobecontrol.html#audioBufferProbed

        **[signal] void QMediaAudioProbeControl::audioBufferProbed(const
        QAudioBuffer & buffer )**

        This signal should be emitted when an audio **buffer** is processed in
        the media service.
        """
        ...

    @property
    def flush(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qmediaaudioprobecontrol.html#flush

        **[signal] void QMediaAudioProbeControl::flush()**

        This signal should be emitted when it is required to release all frames.
        """
        ...
