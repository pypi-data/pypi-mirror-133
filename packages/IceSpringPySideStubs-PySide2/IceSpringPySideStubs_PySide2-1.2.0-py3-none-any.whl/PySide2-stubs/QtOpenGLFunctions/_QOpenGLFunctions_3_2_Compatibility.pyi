"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtOpenGLFunctions, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtGui
import PySide2.QtOpenGLFunctions

bytes = str


class QOpenGLFunctions_3_2_Compatibility(PySide2.QtGui.QAbstractOpenGLFunctions):
    """
    https://doc.qt.io/qt-5/qopenglfunctions-3-2-compatibility.html

    **Detailed Description**

    This class is a wrapper for functions from OpenGL 3.2 compatibility profile.
    See reference pages on **opengl.org**  for function documentation.

    **See also** **QAbstractOpenGLFunctions** .
    """

    def __init__(self) -> None:
        ...

    def glAccum(self, op: int, value: float) -> None:
        ...

    def glActiveTexture(self, texture: int) -> None:
        ...

    def glAlphaFunc(self, func: int, ref: float) -> None:
        ...

    def glArrayElement(self, i: int) -> None:
        ...

    def glAttachShader(self, program: int, shader: int) -> None:
        ...

    def glBegin(self, mode: int) -> None:
        ...

    def glBeginConditionalRender(self, id: int, mode: int) -> None:
        ...

    def glBeginQuery(self, target: int, id: int) -> None:
        ...

    def glBeginTransformFeedback(self, primitiveMode: int) -> None:
        ...

    def glBindAttribLocation(self, program: int, index: int, name: bytes) -> None:
        ...

    def glBindBuffer(self, target: int, buffer: int) -> None:
        ...

    def glBindBufferBase(self, target: int, index: int, buffer: int) -> None:
        ...

    def glBindFragDataLocation(self, program: int, color: int, name: bytes) -> None:
        ...

    def glBindFramebuffer(self, target: int, framebuffer: int) -> None:
        ...

    def glBindRenderbuffer(self, target: int, renderbuffer: int) -> None:
        ...

    def glBindTexture(self, target: int, texture: int) -> None:
        ...

    def glBindVertexArray(self, array: int) -> None:
        ...

    def glBlendColor(self, red: float, green: float, blue: float, alpha: float) -> None:
        ...

    def glBlendEquation(self, mode: int) -> None:
        ...

    def glBlendEquationSeparate(self, modeRGB: int, modeAlpha: int) -> None:
        ...

    def glBlendFunc(self, sfactor: int, dfactor: int) -> None:
        ...

    def glBlendFuncSeparate(
        self, sfactorRGB: int, dfactorRGB: int, sfactorAlpha: int, dfactorAlpha: int
    ) -> None:
        ...

    def glBlitFramebuffer(
        self,
        srcX0: int,
        srcY0: int,
        srcX1: int,
        srcY1: int,
        dstX0: int,
        dstY0: int,
        dstX1: int,
        dstY1: int,
        mask: int,
        filter: int,
    ) -> None:
        ...

    def glCallList(self, list: int) -> None:
        ...

    def glCallLists(self, n: int, type: int, lists: int) -> None:
        ...

    def glCheckFramebufferStatus(self, target: int) -> int:
        ...

    def glClampColor(self, target: int, clamp: int) -> None:
        ...

    def glClear(self, mask: int) -> None:
        ...

    def glClearAccum(self, red: float, green: float, blue: float, alpha: float) -> None:
        ...

    def glClearBufferfi(
        self, buffer: int, drawbuffer: int, depth: float, stencil: int
    ) -> None:
        ...

    def glClearBufferfv(
        self, buffer: int, drawbuffer: int, value: typing.Sequence
    ) -> None:
        ...

    def glClearBufferiv(
        self, buffer: int, drawbuffer: int, value: typing.Sequence
    ) -> None:
        ...

    def glClearBufferuiv(
        self, buffer: int, drawbuffer: int, value: typing.Sequence
    ) -> None:
        ...

    def glClearColor(self, red: float, green: float, blue: float, alpha: float) -> None:
        ...

    def glClearDepth(self, depth: float) -> None:
        ...

    def glClearIndex(self, c: float) -> None:
        ...

    def glClearStencil(self, s: int) -> None:
        ...

    def glClientActiveTexture(self, texture: int) -> None:
        ...

    def glClipPlane(self, plane: int, equation: typing.Sequence) -> None:
        ...

    def glColor3b(self, red: int, green: int, blue: int) -> None:
        ...

    def glColor3bv(self, v: bytes) -> None:
        ...

    def glColor3d(self, red: float, green: float, blue: float) -> None:
        ...

    def glColor3dv(self, v: typing.Sequence) -> None:
        ...

    def glColor3f(self, red: float, green: float, blue: float) -> None:
        ...

    def glColor3fv(self, v: typing.Sequence) -> None:
        ...

    def glColor3i(self, red: int, green: int, blue: int) -> None:
        ...

    def glColor3iv(self, v: typing.Sequence) -> None:
        ...

    def glColor3s(self, red: int, green: int, blue: int) -> None:
        ...

    def glColor3sv(self, v: typing.Sequence) -> None:
        ...

    def glColor3ub(self, red: int, green: int, blue: int) -> None:
        ...

    def glColor3ubv(self, v: bytes) -> None:
        ...

    def glColor3ui(self, red: int, green: int, blue: int) -> None:
        ...

    def glColor3uiv(self, v: typing.Sequence) -> None:
        ...

    def glColor3us(self, red: int, green: int, blue: int) -> None:
        ...

    def glColor3usv(self, v: typing.Sequence) -> None:
        ...

    def glColor4b(self, red: int, green: int, blue: int, alpha: int) -> None:
        ...

    def glColor4bv(self, v: bytes) -> None:
        ...

    def glColor4d(self, red: float, green: float, blue: float, alpha: float) -> None:
        ...

    def glColor4dv(self, v: typing.Sequence) -> None:
        ...

    def glColor4f(self, red: float, green: float, blue: float, alpha: float) -> None:
        ...

    def glColor4fv(self, v: typing.Sequence) -> None:
        ...

    def glColor4i(self, red: int, green: int, blue: int, alpha: int) -> None:
        ...

    def glColor4iv(self, v: typing.Sequence) -> None:
        ...

    def glColor4s(self, red: int, green: int, blue: int, alpha: int) -> None:
        ...

    def glColor4sv(self, v: typing.Sequence) -> None:
        ...

    def glColor4ub(self, red: int, green: int, blue: int, alpha: int) -> None:
        ...

    def glColor4ubv(self, v: bytes) -> None:
        ...

    def glColor4ui(self, red: int, green: int, blue: int, alpha: int) -> None:
        ...

    def glColor4uiv(self, v: typing.Sequence) -> None:
        ...

    def glColor4us(self, red: int, green: int, blue: int, alpha: int) -> None:
        ...

    def glColor4usv(self, v: typing.Sequence) -> None:
        ...

    def glColorMask(self, red: int, green: int, blue: int, alpha: int) -> None:
        ...

    def glColorMaski(self, index: int, r: int, g: int, b: int, a: int) -> None:
        ...

    def glColorMaterial(self, face: int, mode: int) -> None:
        ...

    def glColorPointer(self, size: int, type: int, stride: int, pointer: int) -> None:
        ...

    def glColorSubTable(
        self, target: int, start: int, count: int, format: int, type: int, data: int
    ) -> None:
        ...

    def glColorTable(
        self,
        target: int,
        internalformat: int,
        width: int,
        format: int,
        type: int,
        table: int,
    ) -> None:
        ...

    def glColorTableParameterfv(
        self, target: int, pname: int, params: typing.Sequence
    ) -> None:
        ...

    def glColorTableParameteriv(
        self, target: int, pname: int, params: typing.Sequence
    ) -> None:
        ...

    def glCompileShader(self, shader: int) -> None:
        ...

    def glCompressedTexImage1D(
        self,
        target: int,
        level: int,
        internalformat: int,
        width: int,
        border: int,
        imageSize: int,
        data: int,
    ) -> None:
        ...

    def glCompressedTexImage2D(
        self,
        target: int,
        level: int,
        internalformat: int,
        width: int,
        height: int,
        border: int,
        imageSize: int,
        data: int,
    ) -> None:
        ...

    def glCompressedTexImage3D(
        self,
        target: int,
        level: int,
        internalformat: int,
        width: int,
        height: int,
        depth: int,
        border: int,
        imageSize: int,
        data: int,
    ) -> None:
        ...

    def glCompressedTexSubImage1D(
        self,
        target: int,
        level: int,
        xoffset: int,
        width: int,
        format: int,
        imageSize: int,
        data: int,
    ) -> None:
        ...

    def glCompressedTexSubImage2D(
        self,
        target: int,
        level: int,
        xoffset: int,
        yoffset: int,
        width: int,
        height: int,
        format: int,
        imageSize: int,
        data: int,
    ) -> None:
        ...

    def glCompressedTexSubImage3D(
        self,
        target: int,
        level: int,
        xoffset: int,
        yoffset: int,
        zoffset: int,
        width: int,
        height: int,
        depth: int,
        format: int,
        imageSize: int,
        data: int,
    ) -> None:
        ...

    def glConvolutionFilter1D(
        self,
        target: int,
        internalformat: int,
        width: int,
        format: int,
        type: int,
        image: int,
    ) -> None:
        ...

    def glConvolutionFilter2D(
        self,
        target: int,
        internalformat: int,
        width: int,
        height: int,
        format: int,
        type: int,
        image: int,
    ) -> None:
        ...

    def glConvolutionParameterf(self, target: int, pname: int, params: float) -> None:
        ...

    def glConvolutionParameterfv(
        self, target: int, pname: int, params: typing.Sequence
    ) -> None:
        ...

    def glConvolutionParameteri(self, target: int, pname: int, params: int) -> None:
        ...

    def glConvolutionParameteriv(
        self, target: int, pname: int, params: typing.Sequence
    ) -> None:
        ...

    def glCopyColorSubTable(
        self, target: int, start: int, x: int, y: int, width: int
    ) -> None:
        ...

    def glCopyColorTable(
        self, target: int, internalformat: int, x: int, y: int, width: int
    ) -> None:
        ...

    def glCopyConvolutionFilter1D(
        self, target: int, internalformat: int, x: int, y: int, width: int
    ) -> None:
        ...

    def glCopyConvolutionFilter2D(
        self, target: int, internalformat: int, x: int, y: int, width: int, height: int
    ) -> None:
        ...

    def glCopyPixels(self, x: int, y: int, width: int, height: int, type: int) -> None:
        ...

    def glCopyTexImage1D(
        self,
        target: int,
        level: int,
        internalformat: int,
        x: int,
        y: int,
        width: int,
        border: int,
    ) -> None:
        ...

    def glCopyTexImage2D(
        self,
        target: int,
        level: int,
        internalformat: int,
        x: int,
        y: int,
        width: int,
        height: int,
        border: int,
    ) -> None:
        ...

    def glCopyTexSubImage1D(
        self, target: int, level: int, xoffset: int, x: int, y: int, width: int
    ) -> None:
        ...

    def glCopyTexSubImage2D(
        self,
        target: int,
        level: int,
        xoffset: int,
        yoffset: int,
        x: int,
        y: int,
        width: int,
        height: int,
    ) -> None:
        ...

    def glCopyTexSubImage3D(
        self,
        target: int,
        level: int,
        xoffset: int,
        yoffset: int,
        zoffset: int,
        x: int,
        y: int,
        width: int,
        height: int,
    ) -> None:
        ...

    def glCreateProgram(self) -> int:
        ...

    def glCreateShader(self, type: int) -> int:
        ...

    def glCullFace(self, mode: int) -> None:
        ...

    def glDeleteBuffers(self, n: int, buffers: typing.Sequence) -> None:
        ...

    def glDeleteFramebuffers(self, n: int, framebuffers: typing.Sequence) -> None:
        ...

    def glDeleteLists(self, list: int, range: int) -> None:
        ...

    def glDeleteProgram(self, program: int) -> None:
        ...

    def glDeleteQueries(self, n: int, ids: typing.Sequence) -> None:
        ...

    def glDeleteRenderbuffers(self, n: int, renderbuffers: typing.Sequence) -> None:
        ...

    def glDeleteShader(self, shader: int) -> None:
        ...

    def glDeleteTextures(self, n: int, textures: typing.Sequence) -> None:
        ...

    def glDeleteVertexArrays(self, n: int, arrays: typing.Sequence) -> None:
        ...

    def glDepthFunc(self, func: int) -> None:
        ...

    def glDepthMask(self, flag: int) -> None:
        ...

    def glDepthRange(self, nearVal: float, farVal: float) -> None:
        ...

    def glDetachShader(self, program: int, shader: int) -> None:
        ...

    def glDisable(self, cap: int) -> None:
        ...

    def glDisableClientState(self, array: int) -> None:
        ...

    def glDisableVertexAttribArray(self, index: int) -> None:
        ...

    def glDisablei(self, target: int, index: int) -> None:
        ...

    def glDrawArrays(self, mode: int, first: int, count: int) -> None:
        ...

    def glDrawArraysInstanced(
        self, mode: int, first: int, count: int, instancecount: int
    ) -> None:
        ...

    def glDrawBuffer(self, mode: int) -> None:
        ...

    def glDrawBuffers(self, n: int, bufs: typing.Sequence) -> None:
        ...

    def glDrawElements(self, mode: int, count: int, type: int, indices: int) -> None:
        ...

    def glDrawElementsBaseVertex(
        self, mode: int, count: int, type: int, indices: int, basevertex: int
    ) -> None:
        ...

    def glDrawElementsInstanced(
        self, mode: int, count: int, type: int, indices: int, instancecount: int
    ) -> None:
        ...

    def glDrawElementsInstancedBaseVertex(
        self,
        mode: int,
        count: int,
        type: int,
        indices: int,
        instancecount: int,
        basevertex: int,
    ) -> None:
        ...

    def glDrawPixels(
        self, width: int, height: int, format: int, type: int, pixels: int
    ) -> None:
        ...

    def glDrawRangeElements(
        self, mode: int, start: int, end: int, count: int, type: int, indices: int
    ) -> None:
        ...

    def glDrawRangeElementsBaseVertex(
        self,
        mode: int,
        start: int,
        end: int,
        count: int,
        type: int,
        indices: int,
        basevertex: int,
    ) -> None:
        ...

    def glEdgeFlag(self, flag: int) -> None:
        ...

    def glEdgeFlagPointer(self, stride: int, pointer: int) -> None:
        ...

    def glEnable(self, cap: int) -> None:
        ...

    def glEnableClientState(self, array: int) -> None:
        ...

    def glEnableVertexAttribArray(self, index: int) -> None:
        ...

    def glEnablei(self, target: int, index: int) -> None:
        ...

    def glEnd(self) -> None:
        ...

    def glEndConditionalRender(self) -> None:
        ...

    def glEndList(self) -> None:
        ...

    def glEndQuery(self, target: int) -> None:
        ...

    def glEndTransformFeedback(self) -> None:
        ...

    def glEvalCoord1d(self, u: float) -> None:
        ...

    def glEvalCoord1dv(self, u: typing.Sequence) -> None:
        ...

    def glEvalCoord1f(self, u: float) -> None:
        ...

    def glEvalCoord1fv(self, u: typing.Sequence) -> None:
        ...

    def glEvalCoord2d(self, u: float, v: float) -> None:
        ...

    def glEvalCoord2dv(self, u: typing.Sequence) -> None:
        ...

    def glEvalCoord2f(self, u: float, v: float) -> None:
        ...

    def glEvalCoord2fv(self, u: typing.Sequence) -> None:
        ...

    def glEvalMesh1(self, mode: int, i1: int, i2: int) -> None:
        ...

    def glEvalMesh2(self, mode: int, i1: int, i2: int, j1: int, j2: int) -> None:
        ...

    def glEvalPoint1(self, i: int) -> None:
        ...

    def glEvalPoint2(self, i: int, j: int) -> None:
        ...

    def glFinish(self) -> None:
        ...

    def glFlush(self) -> None:
        ...

    def glFogCoordPointer(self, type: int, stride: int, pointer: int) -> None:
        ...

    def glFogCoordd(self, coord: float) -> None:
        ...

    def glFogCoorddv(self, coord: typing.Sequence) -> None:
        ...

    def glFogCoordf(self, coord: float) -> None:
        ...

    def glFogCoordfv(self, coord: typing.Sequence) -> None:
        ...

    def glFogf(self, pname: int, param: float) -> None:
        ...

    def glFogfv(self, pname: int, params: typing.Sequence) -> None:
        ...

    def glFogi(self, pname: int, param: int) -> None:
        ...

    def glFogiv(self, pname: int, params: typing.Sequence) -> None:
        ...

    def glFramebufferRenderbuffer(
        self, target: int, attachment: int, renderbuffertarget: int, renderbuffer: int
    ) -> None:
        ...

    def glFramebufferTexture(
        self, target: int, attachment: int, texture: int, level: int
    ) -> None:
        ...

    def glFramebufferTexture1D(
        self, target: int, attachment: int, textarget: int, texture: int, level: int
    ) -> None:
        ...

    def glFramebufferTexture2D(
        self, target: int, attachment: int, textarget: int, texture: int, level: int
    ) -> None:
        ...

    def glFramebufferTexture3D(
        self,
        target: int,
        attachment: int,
        textarget: int,
        texture: int,
        level: int,
        zoffset: int,
    ) -> None:
        ...

    def glFramebufferTextureLayer(
        self, target: int, attachment: int, texture: int, level: int, layer: int
    ) -> None:
        ...

    def glFrontFace(self, mode: int) -> None:
        ...

    def glFrustum(
        self,
        left: float,
        right: float,
        bottom: float,
        top: float,
        zNear: float,
        zFar: float,
    ) -> None:
        ...

    def glGenLists(self, range: int) -> int:
        ...

    def glGenerateMipmap(self, target: int) -> None:
        ...

    def glGetAttribLocation(self, program: int, name: bytes) -> int:
        ...

    def glGetError(self) -> int:
        ...

    def glGetFragDataLocation(self, program: int, name: bytes) -> int:
        ...

    def glGetString(self, name: int) -> bytes:
        ...

    def glGetStringi(self, name: int, index: int) -> bytes:
        ...

    def glGetUniformBlockIndex(self, program: int, uniformBlockName: bytes) -> int:
        ...

    def glGetUniformLocation(self, program: int, name: bytes) -> int:
        ...

    def glHint(self, target: int, mode: int) -> None:
        ...

    def glHistogram(
        self, target: int, width: int, internalformat: int, sink: int
    ) -> None:
        ...

    def glIndexMask(self, mask: int) -> None:
        ...

    def glIndexPointer(self, type: int, stride: int, pointer: int) -> None:
        ...

    def glIndexd(self, c: float) -> None:
        ...

    def glIndexdv(self, c: typing.Sequence) -> None:
        ...

    def glIndexf(self, c: float) -> None:
        ...

    def glIndexfv(self, c: typing.Sequence) -> None:
        ...

    def glIndexi(self, c: int) -> None:
        ...

    def glIndexiv(self, c: typing.Sequence) -> None:
        ...

    def glIndexs(self, c: int) -> None:
        ...

    def glIndexsv(self, c: typing.Sequence) -> None:
        ...

    def glIndexub(self, c: int) -> None:
        ...

    def glIndexubv(self, c: bytes) -> None:
        ...

    def glInitNames(self) -> None:
        ...

    def glInterleavedArrays(self, format: int, stride: int, pointer: int) -> None:
        ...

    def glIsBuffer(self, buffer: int) -> int:
        ...

    def glIsEnabled(self, cap: int) -> int:
        ...

    def glIsEnabledi(self, target: int, index: int) -> int:
        ...

    def glIsFramebuffer(self, framebuffer: int) -> int:
        ...

    def glIsList(self, list: int) -> int:
        ...

    def glIsProgram(self, program: int) -> int:
        ...

    def glIsQuery(self, id: int) -> int:
        ...

    def glIsRenderbuffer(self, renderbuffer: int) -> int:
        ...

    def glIsShader(self, shader: int) -> int:
        ...

    def glIsTexture(self, texture: int) -> int:
        ...

    def glIsVertexArray(self, array: int) -> int:
        ...

    def glLightModelf(self, pname: int, param: float) -> None:
        ...

    def glLightModelfv(self, pname: int, params: typing.Sequence) -> None:
        ...

    def glLightModeli(self, pname: int, param: int) -> None:
        ...

    def glLightModeliv(self, pname: int, params: typing.Sequence) -> None:
        ...

    def glLightf(self, light: int, pname: int, param: float) -> None:
        ...

    def glLightfv(self, light: int, pname: int, params: typing.Sequence) -> None:
        ...

    def glLighti(self, light: int, pname: int, param: int) -> None:
        ...

    def glLightiv(self, light: int, pname: int, params: typing.Sequence) -> None:
        ...

    def glLineStipple(self, factor: int, pattern: int) -> None:
        ...

    def glLineWidth(self, width: float) -> None:
        ...

    def glLinkProgram(self, program: int) -> None:
        ...

    def glListBase(self, base: int) -> None:
        ...

    def glLoadIdentity(self) -> None:
        ...

    def glLoadMatrixd(self, m: typing.Sequence) -> None:
        ...

    def glLoadMatrixf(self, m: typing.Sequence) -> None:
        ...

    def glLoadName(self, name: int) -> None:
        ...

    def glLoadTransposeMatrixd(self, m: typing.Sequence) -> None:
        ...

    def glLoadTransposeMatrixf(self, m: typing.Sequence) -> None:
        ...

    def glLogicOp(self, opcode: int) -> None:
        ...

    def glMap1d(
        self,
        target: int,
        u1: float,
        u2: float,
        stride: int,
        order: int,
        points: typing.Sequence,
    ) -> None:
        ...

    def glMap1f(
        self,
        target: int,
        u1: float,
        u2: float,
        stride: int,
        order: int,
        points: typing.Sequence,
    ) -> None:
        ...

    def glMap2d(
        self,
        target: int,
        u1: float,
        u2: float,
        ustride: int,
        uorder: int,
        v1: float,
        v2: float,
        vstride: int,
        vorder: int,
        points: typing.Sequence,
    ) -> None:
        ...

    def glMap2f(
        self,
        target: int,
        u1: float,
        u2: float,
        ustride: int,
        uorder: int,
        v1: float,
        v2: float,
        vstride: int,
        vorder: int,
        points: typing.Sequence,
    ) -> None:
        ...

    def glMapBuffer(self, target: int, access: int) -> int:
        ...

    def glMapGrid1d(self, un: int, u1: float, u2: float) -> None:
        ...

    def glMapGrid1f(self, un: int, u1: float, u2: float) -> None:
        ...

    def glMapGrid2d(
        self, un: int, u1: float, u2: float, vn: int, v1: float, v2: float
    ) -> None:
        ...

    def glMapGrid2f(
        self, un: int, u1: float, u2: float, vn: int, v1: float, v2: float
    ) -> None:
        ...

    def glMaterialf(self, face: int, pname: int, param: float) -> None:
        ...

    def glMaterialfv(self, face: int, pname: int, params: typing.Sequence) -> None:
        ...

    def glMateriali(self, face: int, pname: int, param: int) -> None:
        ...

    def glMaterialiv(self, face: int, pname: int, params: typing.Sequence) -> None:
        ...

    def glMatrixMode(self, mode: int) -> None:
        ...

    def glMinmax(self, target: int, internalformat: int, sink: int) -> None:
        ...

    def glMultMatrixd(self, m: typing.Sequence) -> None:
        ...

    def glMultMatrixf(self, m: typing.Sequence) -> None:
        ...

    def glMultTransposeMatrixd(self, m: typing.Sequence) -> None:
        ...

    def glMultTransposeMatrixf(self, m: typing.Sequence) -> None:
        ...

    def glMultiDrawArrays(
        self, mode: int, first: typing.Sequence, count: typing.Sequence, drawcount: int
    ) -> None:
        ...

    def glMultiTexCoord1d(self, target: int, s: float) -> None:
        ...

    def glMultiTexCoord1dv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord1f(self, target: int, s: float) -> None:
        ...

    def glMultiTexCoord1fv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord1i(self, target: int, s: int) -> None:
        ...

    def glMultiTexCoord1iv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord1s(self, target: int, s: int) -> None:
        ...

    def glMultiTexCoord1sv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord2d(self, target: int, s: float, t: float) -> None:
        ...

    def glMultiTexCoord2dv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord2f(self, target: int, s: float, t: float) -> None:
        ...

    def glMultiTexCoord2fv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord2i(self, target: int, s: int, t: int) -> None:
        ...

    def glMultiTexCoord2iv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord2s(self, target: int, s: int, t: int) -> None:
        ...

    def glMultiTexCoord2sv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord3d(self, target: int, s: float, t: float, r: float) -> None:
        ...

    def glMultiTexCoord3dv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord3f(self, target: int, s: float, t: float, r: float) -> None:
        ...

    def glMultiTexCoord3fv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord3i(self, target: int, s: int, t: int, r: int) -> None:
        ...

    def glMultiTexCoord3iv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord3s(self, target: int, s: int, t: int, r: int) -> None:
        ...

    def glMultiTexCoord3sv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord4d(
        self, target: int, s: float, t: float, r: float, q: float
    ) -> None:
        ...

    def glMultiTexCoord4dv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord4f(
        self, target: int, s: float, t: float, r: float, q: float
    ) -> None:
        ...

    def glMultiTexCoord4fv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord4i(self, target: int, s: int, t: int, r: int, q: int) -> None:
        ...

    def glMultiTexCoord4iv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glMultiTexCoord4s(self, target: int, s: int, t: int, r: int, q: int) -> None:
        ...

    def glMultiTexCoord4sv(self, target: int, v: typing.Sequence) -> None:
        ...

    def glNewList(self, list: int, mode: int) -> None:
        ...

    def glNormal3b(self, nx: int, ny: int, nz: int) -> None:
        ...

    def glNormal3bv(self, v: bytes) -> None:
        ...

    def glNormal3d(self, nx: float, ny: float, nz: float) -> None:
        ...

    def glNormal3dv(self, v: typing.Sequence) -> None:
        ...

    def glNormal3f(self, nx: float, ny: float, nz: float) -> None:
        ...

    def glNormal3fv(self, v: typing.Sequence) -> None:
        ...

    def glNormal3i(self, nx: int, ny: int, nz: int) -> None:
        ...

    def glNormal3iv(self, v: typing.Sequence) -> None:
        ...

    def glNormal3s(self, nx: int, ny: int, nz: int) -> None:
        ...

    def glNormal3sv(self, v: typing.Sequence) -> None:
        ...

    def glNormalPointer(self, type: int, stride: int, pointer: int) -> None:
        ...

    def glOrtho(
        self,
        left: float,
        right: float,
        bottom: float,
        top: float,
        zNear: float,
        zFar: float,
    ) -> None:
        ...

    def glPassThrough(self, token: float) -> None:
        ...

    def glPixelMapfv(self, map: int, mapsize: int, values: typing.Sequence) -> None:
        ...

    def glPixelMapuiv(self, map: int, mapsize: int, values: typing.Sequence) -> None:
        ...

    def glPixelMapusv(self, map: int, mapsize: int, values: typing.Sequence) -> None:
        ...

    def glPixelStoref(self, pname: int, param: float) -> None:
        ...

    def glPixelStorei(self, pname: int, param: int) -> None:
        ...

    def glPixelTransferf(self, pname: int, param: float) -> None:
        ...

    def glPixelTransferi(self, pname: int, param: int) -> None:
        ...

    def glPixelZoom(self, xfactor: float, yfactor: float) -> None:
        ...

    def glPointParameterf(self, pname: int, param: float) -> None:
        ...

    def glPointParameterfv(self, pname: int, params: typing.Sequence) -> None:
        ...

    def glPointParameteri(self, pname: int, param: int) -> None:
        ...

    def glPointParameteriv(self, pname: int, params: typing.Sequence) -> None:
        ...

    def glPointSize(self, size: float) -> None:
        ...

    def glPolygonMode(self, face: int, mode: int) -> None:
        ...

    def glPolygonOffset(self, factor: float, units: float) -> None:
        ...

    def glPopAttrib(self) -> None:
        ...

    def glPopClientAttrib(self) -> None:
        ...

    def glPopMatrix(self) -> None:
        ...

    def glPopName(self) -> None:
        ...

    def glPrimitiveRestartIndex(self, index: int) -> None:
        ...

    def glPrioritizeTextures(
        self, n: int, textures: typing.Sequence, priorities: typing.Sequence
    ) -> None:
        ...

    def glProvokingVertex(self, mode: int) -> None:
        ...

    def glPushAttrib(self, mask: int) -> None:
        ...

    def glPushClientAttrib(self, mask: int) -> None:
        ...

    def glPushMatrix(self) -> None:
        ...

    def glPushName(self, name: int) -> None:
        ...

    def glRasterPos2d(self, x: float, y: float) -> None:
        ...

    def glRasterPos2dv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos2f(self, x: float, y: float) -> None:
        ...

    def glRasterPos2fv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos2i(self, x: int, y: int) -> None:
        ...

    def glRasterPos2iv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos2s(self, x: int, y: int) -> None:
        ...

    def glRasterPos2sv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos3d(self, x: float, y: float, z: float) -> None:
        ...

    def glRasterPos3dv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos3f(self, x: float, y: float, z: float) -> None:
        ...

    def glRasterPos3fv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos3i(self, x: int, y: int, z: int) -> None:
        ...

    def glRasterPos3iv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos3s(self, x: int, y: int, z: int) -> None:
        ...

    def glRasterPos3sv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos4d(self, x: float, y: float, z: float, w: float) -> None:
        ...

    def glRasterPos4dv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos4f(self, x: float, y: float, z: float, w: float) -> None:
        ...

    def glRasterPos4fv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos4i(self, x: int, y: int, z: int, w: int) -> None:
        ...

    def glRasterPos4iv(self, v: typing.Sequence) -> None:
        ...

    def glRasterPos4s(self, x: int, y: int, z: int, w: int) -> None:
        ...

    def glRasterPos4sv(self, v: typing.Sequence) -> None:
        ...

    def glReadBuffer(self, mode: int) -> None:
        ...

    def glRectd(self, x1: float, y1: float, x2: float, y2: float) -> None:
        ...

    def glRectdv(self, v1: typing.Sequence, v2: typing.Sequence) -> None:
        ...

    def glRectf(self, x1: float, y1: float, x2: float, y2: float) -> None:
        ...

    def glRectfv(self, v1: typing.Sequence, v2: typing.Sequence) -> None:
        ...

    def glRecti(self, x1: int, y1: int, x2: int, y2: int) -> None:
        ...

    def glRectiv(self, v1: typing.Sequence, v2: typing.Sequence) -> None:
        ...

    def glRects(self, x1: int, y1: int, x2: int, y2: int) -> None:
        ...

    def glRectsv(self, v1: typing.Sequence, v2: typing.Sequence) -> None:
        ...

    def glRenderMode(self, mode: int) -> int:
        ...

    def glRenderbufferStorage(
        self, target: int, internalformat: int, width: int, height: int
    ) -> None:
        ...

    def glRenderbufferStorageMultisample(
        self, target: int, samples: int, internalformat: int, width: int, height: int
    ) -> None:
        ...

    def glResetHistogram(self, target: int) -> None:
        ...

    def glResetMinmax(self, target: int) -> None:
        ...

    def glRotated(self, angle: float, x: float, y: float, z: float) -> None:
        ...

    def glRotatef(self, angle: float, x: float, y: float, z: float) -> None:
        ...

    def glSampleCoverage(self, value: float, invert: int) -> None:
        ...

    def glSampleMaski(self, index: int, mask: int) -> None:
        ...

    def glScaled(self, x: float, y: float, z: float) -> None:
        ...

    def glScalef(self, x: float, y: float, z: float) -> None:
        ...

    def glScissor(self, x: int, y: int, width: int, height: int) -> None:
        ...

    def glSecondaryColor3b(self, red: int, green: int, blue: int) -> None:
        ...

    def glSecondaryColor3bv(self, v: bytes) -> None:
        ...

    def glSecondaryColor3d(self, red: float, green: float, blue: float) -> None:
        ...

    def glSecondaryColor3dv(self, v: typing.Sequence) -> None:
        ...

    def glSecondaryColor3f(self, red: float, green: float, blue: float) -> None:
        ...

    def glSecondaryColor3fv(self, v: typing.Sequence) -> None:
        ...

    def glSecondaryColor3i(self, red: int, green: int, blue: int) -> None:
        ...

    def glSecondaryColor3iv(self, v: typing.Sequence) -> None:
        ...

    def glSecondaryColor3s(self, red: int, green: int, blue: int) -> None:
        ...

    def glSecondaryColor3sv(self, v: typing.Sequence) -> None:
        ...

    def glSecondaryColor3ub(self, red: int, green: int, blue: int) -> None:
        ...

    def glSecondaryColor3ubv(self, v: bytes) -> None:
        ...

    def glSecondaryColor3ui(self, red: int, green: int, blue: int) -> None:
        ...

    def glSecondaryColor3uiv(self, v: typing.Sequence) -> None:
        ...

    def glSecondaryColor3us(self, red: int, green: int, blue: int) -> None:
        ...

    def glSecondaryColor3usv(self, v: typing.Sequence) -> None:
        ...

    def glSecondaryColorPointer(
        self, size: int, type: int, stride: int, pointer: int
    ) -> None:
        ...

    def glSeparableFilter2D(
        self,
        target: int,
        internalformat: int,
        width: int,
        height: int,
        format: int,
        type: int,
        row: int,
        column: int,
    ) -> None:
        ...

    def glShadeModel(self, mode: int) -> None:
        ...

    def glStencilFunc(self, func: int, ref: int, mask: int) -> None:
        ...

    def glStencilFuncSeparate(self, face: int, func: int, ref: int, mask: int) -> None:
        ...

    def glStencilMask(self, mask: int) -> None:
        ...

    def glStencilMaskSeparate(self, face: int, mask: int) -> None:
        ...

    def glStencilOp(self, fail: int, zfail: int, zpass: int) -> None:
        ...

    def glStencilOpSeparate(
        self, face: int, sfail: int, dpfail: int, dppass: int
    ) -> None:
        ...

    def glTexBuffer(self, target: int, internalformat: int, buffer: int) -> None:
        ...

    def glTexCoord1d(self, s: float) -> None:
        ...

    def glTexCoord1dv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord1f(self, s: float) -> None:
        ...

    def glTexCoord1fv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord1i(self, s: int) -> None:
        ...

    def glTexCoord1iv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord1s(self, s: int) -> None:
        ...

    def glTexCoord1sv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord2d(self, s: float, t: float) -> None:
        ...

    def glTexCoord2dv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord2f(self, s: float, t: float) -> None:
        ...

    def glTexCoord2fv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord2i(self, s: int, t: int) -> None:
        ...

    def glTexCoord2iv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord2s(self, s: int, t: int) -> None:
        ...

    def glTexCoord2sv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord3d(self, s: float, t: float, r: float) -> None:
        ...

    def glTexCoord3dv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord3f(self, s: float, t: float, r: float) -> None:
        ...

    def glTexCoord3fv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord3i(self, s: int, t: int, r: int) -> None:
        ...

    def glTexCoord3iv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord3s(self, s: int, t: int, r: int) -> None:
        ...

    def glTexCoord3sv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord4d(self, s: float, t: float, r: float, q: float) -> None:
        ...

    def glTexCoord4dv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord4f(self, s: float, t: float, r: float, q: float) -> None:
        ...

    def glTexCoord4fv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord4i(self, s: int, t: int, r: int, q: int) -> None:
        ...

    def glTexCoord4iv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoord4s(self, s: int, t: int, r: int, q: int) -> None:
        ...

    def glTexCoord4sv(self, v: typing.Sequence) -> None:
        ...

    def glTexCoordPointer(
        self, size: int, type: int, stride: int, pointer: int
    ) -> None:
        ...

    def glTexEnvf(self, target: int, pname: int, param: float) -> None:
        ...

    def glTexEnvfv(self, target: int, pname: int, params: typing.Sequence) -> None:
        ...

    def glTexEnvi(self, target: int, pname: int, param: int) -> None:
        ...

    def glTexEnviv(self, target: int, pname: int, params: typing.Sequence) -> None:
        ...

    def glTexGend(self, coord: int, pname: int, param: float) -> None:
        ...

    def glTexGendv(self, coord: int, pname: int, params: typing.Sequence) -> None:
        ...

    def glTexGenf(self, coord: int, pname: int, param: float) -> None:
        ...

    def glTexGenfv(self, coord: int, pname: int, params: typing.Sequence) -> None:
        ...

    def glTexGeni(self, coord: int, pname: int, param: int) -> None:
        ...

    def glTexGeniv(self, coord: int, pname: int, params: typing.Sequence) -> None:
        ...

    def glTexImage1D(
        self,
        target: int,
        level: int,
        internalformat: int,
        width: int,
        border: int,
        format: int,
        type: int,
        pixels: int,
    ) -> None:
        ...

    def glTexImage2D(
        self,
        target: int,
        level: int,
        internalformat: int,
        width: int,
        height: int,
        border: int,
        format: int,
        type: int,
        pixels: int,
    ) -> None:
        ...

    def glTexImage2DMultisample(
        self,
        target: int,
        samples: int,
        internalformat: int,
        width: int,
        height: int,
        fixedsamplelocations: int,
    ) -> None:
        ...

    def glTexImage3D(
        self,
        target: int,
        level: int,
        internalformat: int,
        width: int,
        height: int,
        depth: int,
        border: int,
        format: int,
        type: int,
        pixels: int,
    ) -> None:
        ...

    def glTexImage3DMultisample(
        self,
        target: int,
        samples: int,
        internalformat: int,
        width: int,
        height: int,
        depth: int,
        fixedsamplelocations: int,
    ) -> None:
        ...

    def glTexParameterIiv(
        self, target: int, pname: int, params: typing.Sequence
    ) -> None:
        ...

    def glTexParameterIuiv(
        self, target: int, pname: int, params: typing.Sequence
    ) -> None:
        ...

    def glTexParameterf(self, target: int, pname: int, param: float) -> None:
        ...

    def glTexParameterfv(
        self, target: int, pname: int, params: typing.Sequence
    ) -> None:
        ...

    def glTexParameteri(self, target: int, pname: int, param: int) -> None:
        ...

    def glTexParameteriv(
        self, target: int, pname: int, params: typing.Sequence
    ) -> None:
        ...

    def glTexSubImage1D(
        self,
        target: int,
        level: int,
        xoffset: int,
        width: int,
        format: int,
        type: int,
        pixels: int,
    ) -> None:
        ...

    def glTexSubImage2D(
        self,
        target: int,
        level: int,
        xoffset: int,
        yoffset: int,
        width: int,
        height: int,
        format: int,
        type: int,
        pixels: int,
    ) -> None:
        ...

    def glTexSubImage3D(
        self,
        target: int,
        level: int,
        xoffset: int,
        yoffset: int,
        zoffset: int,
        width: int,
        height: int,
        depth: int,
        format: int,
        type: int,
        pixels: int,
    ) -> None:
        ...

    def glTranslated(self, x: float, y: float, z: float) -> None:
        ...

    def glTranslatef(self, x: float, y: float, z: float) -> None:
        ...

    def glUniform1f(self, location: int, v0: float) -> None:
        ...

    def glUniform1fv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform1i(self, location: int, v0: int) -> None:
        ...

    def glUniform1iv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform1ui(self, location: int, v0: int) -> None:
        ...

    def glUniform1uiv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform2f(self, location: int, v0: float, v1: float) -> None:
        ...

    def glUniform2fv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform2i(self, location: int, v0: int, v1: int) -> None:
        ...

    def glUniform2iv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform2ui(self, location: int, v0: int, v1: int) -> None:
        ...

    def glUniform2uiv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform3f(self, location: int, v0: float, v1: float, v2: float) -> None:
        ...

    def glUniform3fv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform3i(self, location: int, v0: int, v1: int, v2: int) -> None:
        ...

    def glUniform3iv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform3ui(self, location: int, v0: int, v1: int, v2: int) -> None:
        ...

    def glUniform3uiv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform4f(
        self, location: int, v0: float, v1: float, v2: float, v3: float
    ) -> None:
        ...

    def glUniform4fv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform4i(self, location: int, v0: int, v1: int, v2: int, v3: int) -> None:
        ...

    def glUniform4iv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniform4ui(self, location: int, v0: int, v1: int, v2: int, v3: int) -> None:
        ...

    def glUniform4uiv(self, location: int, count: int, value: typing.Sequence) -> None:
        ...

    def glUniformBlockBinding(
        self, program: int, uniformBlockIndex: int, uniformBlockBinding: int
    ) -> None:
        ...

    def glUniformMatrix2fv(
        self, location: int, count: int, transpose: int, value: typing.Sequence
    ) -> None:
        ...

    def glUniformMatrix2x3fv(
        self, location: int, count: int, transpose: int, value: typing.Sequence
    ) -> None:
        ...

    def glUniformMatrix2x4fv(
        self, location: int, count: int, transpose: int, value: typing.Sequence
    ) -> None:
        ...

    def glUniformMatrix3fv(
        self, location: int, count: int, transpose: int, value: typing.Sequence
    ) -> None:
        ...

    def glUniformMatrix3x2fv(
        self, location: int, count: int, transpose: int, value: typing.Sequence
    ) -> None:
        ...

    def glUniformMatrix3x4fv(
        self, location: int, count: int, transpose: int, value: typing.Sequence
    ) -> None:
        ...

    def glUniformMatrix4fv(
        self, location: int, count: int, transpose: int, value: typing.Sequence
    ) -> None:
        ...

    def glUniformMatrix4x2fv(
        self, location: int, count: int, transpose: int, value: typing.Sequence
    ) -> None:
        ...

    def glUniformMatrix4x3fv(
        self, location: int, count: int, transpose: int, value: typing.Sequence
    ) -> None:
        ...

    def glUnmapBuffer(self, target: int) -> int:
        ...

    def glUseProgram(self, program: int) -> None:
        ...

    def glValidateProgram(self, program: int) -> None:
        ...

    def glVertex2d(self, x: float, y: float) -> None:
        ...

    def glVertex2dv(self, v: typing.Sequence) -> None:
        ...

    def glVertex2f(self, x: float, y: float) -> None:
        ...

    def glVertex2fv(self, v: typing.Sequence) -> None:
        ...

    def glVertex2i(self, x: int, y: int) -> None:
        ...

    def glVertex2iv(self, v: typing.Sequence) -> None:
        ...

    def glVertex2s(self, x: int, y: int) -> None:
        ...

    def glVertex2sv(self, v: typing.Sequence) -> None:
        ...

    def glVertex3d(self, x: float, y: float, z: float) -> None:
        ...

    def glVertex3dv(self, v: typing.Sequence) -> None:
        ...

    def glVertex3f(self, x: float, y: float, z: float) -> None:
        ...

    def glVertex3fv(self, v: typing.Sequence) -> None:
        ...

    def glVertex3i(self, x: int, y: int, z: int) -> None:
        ...

    def glVertex3iv(self, v: typing.Sequence) -> None:
        ...

    def glVertex3s(self, x: int, y: int, z: int) -> None:
        ...

    def glVertex3sv(self, v: typing.Sequence) -> None:
        ...

    def glVertex4d(self, x: float, y: float, z: float, w: float) -> None:
        ...

    def glVertex4dv(self, v: typing.Sequence) -> None:
        ...

    def glVertex4f(self, x: float, y: float, z: float, w: float) -> None:
        ...

    def glVertex4fv(self, v: typing.Sequence) -> None:
        ...

    def glVertex4i(self, x: int, y: int, z: int, w: int) -> None:
        ...

    def glVertex4iv(self, v: typing.Sequence) -> None:
        ...

    def glVertex4s(self, x: int, y: int, z: int, w: int) -> None:
        ...

    def glVertex4sv(self, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib1d(self, index: int, x: float) -> None:
        ...

    def glVertexAttrib1dv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib1f(self, index: int, x: float) -> None:
        ...

    def glVertexAttrib1fv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib1s(self, index: int, x: int) -> None:
        ...

    def glVertexAttrib1sv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib2d(self, index: int, x: float, y: float) -> None:
        ...

    def glVertexAttrib2dv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib2f(self, index: int, x: float, y: float) -> None:
        ...

    def glVertexAttrib2fv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib2s(self, index: int, x: int, y: int) -> None:
        ...

    def glVertexAttrib2sv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib3d(self, index: int, x: float, y: float, z: float) -> None:
        ...

    def glVertexAttrib3dv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib3f(self, index: int, x: float, y: float, z: float) -> None:
        ...

    def glVertexAttrib3fv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib3s(self, index: int, x: int, y: int, z: int) -> None:
        ...

    def glVertexAttrib3sv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4Nbv(self, index: int, v: bytes) -> None:
        ...

    def glVertexAttrib4Niv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4Nsv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4Nub(self, index: int, x: int, y: int, z: int, w: int) -> None:
        ...

    def glVertexAttrib4Nubv(self, index: int, v: bytes) -> None:
        ...

    def glVertexAttrib4Nuiv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4Nusv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4bv(self, index: int, v: bytes) -> None:
        ...

    def glVertexAttrib4d(
        self, index: int, x: float, y: float, z: float, w: float
    ) -> None:
        ...

    def glVertexAttrib4dv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4f(
        self, index: int, x: float, y: float, z: float, w: float
    ) -> None:
        ...

    def glVertexAttrib4fv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4iv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4s(self, index: int, x: int, y: int, z: int, w: int) -> None:
        ...

    def glVertexAttrib4sv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4ubv(self, index: int, v: bytes) -> None:
        ...

    def glVertexAttrib4uiv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttrib4usv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI1i(self, index: int, x: int) -> None:
        ...

    def glVertexAttribI1iv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI1ui(self, index: int, x: int) -> None:
        ...

    def glVertexAttribI1uiv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI2i(self, index: int, x: int, y: int) -> None:
        ...

    def glVertexAttribI2iv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI2ui(self, index: int, x: int, y: int) -> None:
        ...

    def glVertexAttribI2uiv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI3i(self, index: int, x: int, y: int, z: int) -> None:
        ...

    def glVertexAttribI3iv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI3ui(self, index: int, x: int, y: int, z: int) -> None:
        ...

    def glVertexAttribI3uiv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI4bv(self, index: int, v: bytes) -> None:
        ...

    def glVertexAttribI4i(self, index: int, x: int, y: int, z: int, w: int) -> None:
        ...

    def glVertexAttribI4iv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI4sv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI4ubv(self, index: int, v: bytes) -> None:
        ...

    def glVertexAttribI4ui(self, index: int, x: int, y: int, z: int, w: int) -> None:
        ...

    def glVertexAttribI4uiv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribI4usv(self, index: int, v: typing.Sequence) -> None:
        ...

    def glVertexAttribIPointer(
        self, index: int, size: int, type: int, stride: int, pointer: int
    ) -> None:
        ...

    def glVertexAttribPointer(
        self,
        index: int,
        size: int,
        type: int,
        normalized: int,
        stride: int,
        pointer: int,
    ) -> None:
        ...

    def glVertexPointer(self, size: int, type: int, stride: int, pointer: int) -> None:
        ...

    def glViewport(self, x: int, y: int, width: int, height: int) -> None:
        ...

    def glWindowPos2d(self, x: float, y: float) -> None:
        ...

    def glWindowPos2dv(self, v: typing.Sequence) -> None:
        ...

    def glWindowPos2f(self, x: float, y: float) -> None:
        ...

    def glWindowPos2fv(self, v: typing.Sequence) -> None:
        ...

    def glWindowPos2i(self, x: int, y: int) -> None:
        ...

    def glWindowPos2iv(self, v: typing.Sequence) -> None:
        ...

    def glWindowPos2s(self, x: int, y: int) -> None:
        ...

    def glWindowPos2sv(self, v: typing.Sequence) -> None:
        ...

    def glWindowPos3d(self, x: float, y: float, z: float) -> None:
        ...

    def glWindowPos3dv(self, v: typing.Sequence) -> None:
        ...

    def glWindowPos3f(self, x: float, y: float, z: float) -> None:
        ...

    def glWindowPos3fv(self, v: typing.Sequence) -> None:
        ...

    def glWindowPos3i(self, x: int, y: int, z: int) -> None:
        ...

    def glWindowPos3iv(self, v: typing.Sequence) -> None:
        ...

    def glWindowPos3s(self, x: int, y: int, z: int) -> None:
        ...

    def glWindowPos3sv(self, v: typing.Sequence) -> None:
        ...

    def initializeOpenGLFunctions(self) -> bool:
        ...
