"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtRemoteObjects, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore
import PySide2.QtRemoteObjects

bytes = str


class QRemoteObjectPendingCallWatcher(
    PySide2.QtCore.QObject, PySide2.QtRemoteObjects.QRemoteObjectPendingCall
):
    """
    https://doc.qt.io/qt-5/qremoteobjectpendingcallwatcher.html

    **Detailed Description**

    QRemoteObjectPendingCallWatcher provides a signal indicating when a
    **QRemoteObjectPendingCall**  has finished, allowing for convenient, non-
    blocking handling of the call.
    """

    def __init__(
        self,
        call: PySide2.QtRemoteObjects.QRemoteObjectPendingCall,
        parent: typing.Optional[PySide2.QtCore.QObject] = ...,
    ) -> None:
        ...

    def isFinished(self) -> bool:
        """
        https://doc.qt.io/qt-5/qremoteobjectpendingcallwatcher.html#isFinished

        **bool QRemoteObjectPendingCallWatcher::isFinished() const**

        Returns true if the remote call has finished, false otherwise.

        A finished call will include a **returnValue**  or error.
        """
        ...

    def waitForFinished(self) -> None:
        """
        https://doc.qt.io/qt-5/qremoteobjectpendingcallwatcher.html#waitForFinis
        hed

        **void QRemoteObjectPendingCallWatcher::waitForFinished()**

        Blocks until the remote call has finished.
        """
        ...

    @property
    def finished(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qremoteobjectpendingcallwatcher.html#finished

        **[signal] void QRemoteObjectPendingCallWatcher::finished(QRemoteObjectP
        endingCallWatcher * self )**

        This signal is emitted when the remote call has finished. **self** is
        the pointer to the watcher object that emitted the signal. A finished
        call will include a **returnValue**  or error.
        """
        ...
