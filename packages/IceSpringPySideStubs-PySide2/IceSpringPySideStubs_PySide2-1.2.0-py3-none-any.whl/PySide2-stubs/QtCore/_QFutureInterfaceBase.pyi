"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtCore, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore

bytes = str


class QFutureInterfaceBase(object):
    NoState: QFutureInterfaceBase = ...
    Running: QFutureInterfaceBase = ...
    Started: QFutureInterfaceBase = ...
    Finished: QFutureInterfaceBase = ...
    Canceled: QFutureInterfaceBase = ...
    Paused: QFutureInterfaceBase = ...
    Throttled: QFutureInterfaceBase = ...

    class State(object):
        NoState: QFutureInterfaceBase.State = ...
        Running: QFutureInterfaceBase.State = ...
        Started: QFutureInterfaceBase.State = ...
        Finished: QFutureInterfaceBase.State = ...
        Canceled: QFutureInterfaceBase.State = ...
        Paused: QFutureInterfaceBase.State = ...
        Throttled: QFutureInterfaceBase.State = ...

    @typing.overload
    def __init__(
        self, initialState: PySide2.QtCore.QFutureInterfaceBase.State = ...
    ) -> None:
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtCore.QFutureInterfaceBase) -> None:
        ...

    def cancel(self) -> None:
        ...

    def derefT(self) -> bool:
        ...

    def expectedResultCount(self) -> int:
        ...

    def isCanceled(self) -> bool:
        ...

    def isFinished(self) -> bool:
        ...

    def isPaused(self) -> bool:
        ...

    def isProgressUpdateNeeded(self) -> bool:
        ...

    def isResultReadyAt(self, index: int) -> bool:
        ...

    def isRunning(self) -> bool:
        ...

    def isStarted(self) -> bool:
        ...

    def isThrottled(self) -> bool:
        ...

    @typing.overload
    def mutex(self) -> PySide2.QtCore.QMutex:
        ...

    @typing.overload
    def mutex(self, arg__1: int) -> PySide2.QtCore.QMutex:
        ...

    def progressMaximum(self) -> int:
        ...

    def progressMinimum(self) -> int:
        ...

    def progressText(self) -> str:
        ...

    def progressValue(self) -> int:
        ...

    def queryState(self, state: PySide2.QtCore.QFutureInterfaceBase.State) -> bool:
        ...

    def refT(self) -> bool:
        ...

    def reportCanceled(self) -> None:
        ...

    def reportFinished(self) -> None:
        ...

    def reportResultsReady(self, beginIndex: int, endIndex: int) -> None:
        ...

    def reportStarted(self) -> None:
        ...

    def resultCount(self) -> int:
        ...

    def setExpectedResultCount(self, resultCount: int) -> None:
        ...

    def setFilterMode(self, enable: bool) -> None:
        ...

    def setPaused(self, paused: bool) -> None:
        ...

    def setProgressRange(self, minimum: int, maximum: int) -> None:
        ...

    def setProgressValue(self, progressValue: int) -> None:
        ...

    def setProgressValueAndText(self, progressValue: int, progressText: str) -> None:
        ...

    def setRunnable(self, runnable: PySide2.QtCore.QRunnable) -> None:
        ...

    def setThreadPool(self, pool: PySide2.QtCore.QThreadPool) -> None:
        ...

    def setThrottled(self, enable: bool) -> None:
        ...

    def togglePaused(self) -> None:
        ...

    def waitForFinished(self) -> None:
        ...

    def waitForNextResult(self) -> bool:
        ...

    def waitForResult(self, resultIndex: int) -> None:
        ...

    def waitForResume(self) -> None:
        ...
