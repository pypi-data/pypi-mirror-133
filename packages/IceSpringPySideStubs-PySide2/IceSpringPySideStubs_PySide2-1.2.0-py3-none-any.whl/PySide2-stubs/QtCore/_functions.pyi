"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtCore, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore

bytes = str
object = Object


def QEnum(arg__1: object) -> object:
    ...


def QFlag(arg__1: object) -> object:
    ...


def QT_TRANSLATE_NOOP(arg__1: object, arg__2: object) -> object:
    ...


def QT_TRANSLATE_NOOP3(arg__1: object, arg__2: object, arg__3: object) -> object:
    ...


def QT_TRANSLATE_NOOP_UTF8(arg__1: object) -> object:
    ...


def QT_TR_NOOP(arg__1: object) -> object:
    ...


def QT_TR_NOOP_UTF8(arg__1: object) -> object:
    ...


def SIGNAL(arg__1: bytes) -> str:
    ...


def SLOT(arg__1: bytes) -> str:
    ...


def __init_feature__() -> None:
    ...


def __moduleShutdown() -> None:
    ...


def qAbs(arg__1: float) -> float:
    ...


def qAcos(v: float) -> float:
    ...


def qAddPostRoutine(arg__1: object) -> None:
    ...


def qAsin(v: float) -> float:
    ...


def qAtan(v: float) -> float:
    ...


def qAtan2(y: float, x: float) -> float:
    ...


def qChecksum(s: bytes, len: int) -> int:
    ...


@typing.overload
def qCompress(
    data: PySide2.QtCore.QByteArray, compressionLevel: int = ...
) -> PySide2.QtCore.QByteArray:
    ...


@typing.overload
def qCompress(
    data: bytes, nbytes: int, compressionLevel: int = ...
) -> PySide2.QtCore.QByteArray:
    ...


def qCritical(arg__1: bytes) -> None:
    ...


def qDebug(arg__1: bytes) -> None:
    ...


def qExp(v: float) -> float:
    ...


def qFabs(v: float) -> float:
    ...


def qFastCos(x: float) -> float:
    ...


def qFastSin(x: float) -> float:
    ...


def qFatal(arg__1: bytes) -> None:
    ...


def qFuzzyCompare(p1: float, p2: float) -> bool:
    ...


def qFuzzyIsNull(d: float) -> bool:
    ...


def qInstallMessageHandler(arg__1: object) -> object:
    ...


def qIsFinite(d: float) -> bool:
    ...


def qIsInf(d: float) -> bool:
    ...


def qIsNaN(d: float) -> bool:
    ...


def qIsNull(d: float) -> bool:
    ...


def qRegisterResourceData(
    arg__1: int, arg__2: bytes, arg__3: bytes, arg__4: bytes
) -> bool:
    ...


def qTan(v: float) -> float:
    ...


@typing.overload
def qUncompress(data: PySide2.QtCore.QByteArray) -> PySide2.QtCore.QByteArray:
    ...


@typing.overload
def qUncompress(data: bytes, nbytes: int) -> PySide2.QtCore.QByteArray:
    ...


def qUnregisterResourceData(
    arg__1: int, arg__2: bytes, arg__3: bytes, arg__4: bytes
) -> bool:
    ...


def qVersion() -> bytes:
    ...


def qWarning(arg__1: bytes) -> None:
    ...


def qrand() -> int:
    ...


def qsrand(seed: int) -> None:
    ...


def qtTrId(id: bytes, n: int = ...) -> str:
    ...
