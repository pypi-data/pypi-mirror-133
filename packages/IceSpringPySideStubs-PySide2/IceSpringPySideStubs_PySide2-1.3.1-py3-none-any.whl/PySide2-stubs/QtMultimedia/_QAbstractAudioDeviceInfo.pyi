"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

License: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtMultimedia, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QAbstractAudioDeviceInfo(PySide2.QtCore.QObject):
    """
    https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html

    **Detailed Description**

    This class implements the audio functionality for **QAudioDeviceInfo** ,
    i.e., **QAudioDeviceInfo**  keeps a QAbstractAudioDeviceInfo and routes
    function calls to it. For a description of the functionality that
    QAbstractAudioDeviceInfo implements, you can read the class and functions
    documentation of **QAudioDeviceInfo** .

    **See also** **QAudioDeviceInfo** , **QAbstractAudioOutput** , and
    **QAbstractAudioInput** .
    """

    def __init__(self) -> None:
        ...

    def deviceName(self) -> str:
        """
        https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html#deviceName

        **[pure virtual] QString QAbstractAudioDeviceInfo::deviceName() const**

        Returns the audio device name.
        """
        ...

    def isFormatSupported(self, format: PySide2.QtMultimedia.QAudioFormat) -> bool:
        """
        https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html#isFormatSupported

        **[pure virtual] bool QAbstractAudioDeviceInfo::isFormatSupported(const
        QAudioFormat & format ) const**

        Returns true if **format** is available from audio device.
        """
        ...

    def preferredFormat(self) -> PySide2.QtMultimedia.QAudioFormat:
        """
        https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html#preferredFormat

        **[pure virtual] QAudioFormat
        QAbstractAudioDeviceInfo::preferredFormat() const**

        Returns the recommended settings to use.
        """
        ...

    def supportedByteOrders(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html#supportedByteOrders

        **[pure virtual] QList<QAudioFormat::Endian>
        QAbstractAudioDeviceInfo::supportedByteOrders()**

        Returns the list of currently available byte orders.
        """
        ...

    def supportedChannelCounts(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html#supportedChannelCou
        nts

        **[pure virtual] QList<int>
        QAbstractAudioDeviceInfo::supportedChannelCounts()**

        Returns the list of currently available channels.
        """
        ...

    def supportedCodecs(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html#supportedCodecs

        **[pure virtual] QStringList
        QAbstractAudioDeviceInfo::supportedCodecs()**

        Returns the list of currently available codecs.
        """
        ...

    def supportedSampleRates(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html#supportedSampleRate
        s

        **[pure virtual] QList<int>
        QAbstractAudioDeviceInfo::supportedSampleRates()**

        Returns the list of currently available sample rates.
        """
        ...

    def supportedSampleSizes(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html#supportedSampleSize
        s

        **[pure virtual] QList<int>
        QAbstractAudioDeviceInfo::supportedSampleSizes()**

        Returns the list of currently available sample sizes.
        """
        ...

    def supportedSampleTypes(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qabstractaudiodeviceinfo.html#supportedSampleType
        s

        **[pure virtual] QList<QAudioFormat::SampleType>
        QAbstractAudioDeviceInfo::supportedSampleTypes()**

        Returns the list of currently available sample types.
        """
        ...
