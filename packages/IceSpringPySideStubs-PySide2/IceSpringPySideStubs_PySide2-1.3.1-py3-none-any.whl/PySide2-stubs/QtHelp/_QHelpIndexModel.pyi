"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

License: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtHelp, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtWidgets
import PySide2.QtHelp

bytes = str


class QHelpIndexModel(PySide2.QtCore.QStringListModel):
    """
    https://doc.qt.io/qt-5/qhelpindexmodel.html

    **Detailed Description**
    """

    @typing.overload
    def createIndex(self, customFilterName: str) -> None:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#createIndex

        **void QHelpIndexModel::createIndex(const QString & customFilterName )**

        Creates a new index by querying the help system for keywords for the
        specified **customFilterName**.
        """
        ...

    @typing.overload
    def createIndex(
        self, row: int, column: int, id: int = ...
    ) -> PySide2.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#createIndex

        **void QHelpIndexModel::createIndex(const QString & customFilterName )**

        Creates a new index by querying the help system for keywords for the
        specified **customFilterName**.
        """
        ...

    @typing.overload
    def createIndex(
        self, row: int, column: int, ptr: object
    ) -> PySide2.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#createIndex

        **void QHelpIndexModel::createIndex(const QString & customFilterName )**

        Creates a new index by querying the help system for keywords for the
        specified **customFilterName**.
        """
        ...

    def filter(self, filter: str, wildcard: str = ...) -> PySide2.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#filter

        **QModelIndex QHelpIndexModel::filter(const QString & filter , const
        QString & wildcard = QString())**

        Filters the indices and returns the model index of the best matching
        keyword. In a first step, only the keywords containing **filter** are
        kept in the model's index list. Analogously, if **wildcard** is not
        empty, only the keywords matched are left in the index list. In a second
        step, the best match is determined and its index model returned. When
        specifying a wildcard expression, the **filter** string is used to
        search for the best match.
        """
        ...

    def helpEngine(self) -> PySide2.QtHelp.QHelpEngineCore:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#helpEngine

        **QHelpEngineCore *QHelpIndexModel::helpEngine() const**

        Returns the associated help engine that manages this model.

        This function was introduced in Qt 5.15.
        """
        ...

    def isCreatingIndex(self) -> bool:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#isCreatingIndex

        **bool QHelpIndexModel::isCreatingIndex() const**

        Returns true if the index is currently built up, otherwise false.
        """
        ...

    def linksForKeyword(self, keyword: str) -> typing.Dict:
        ...

    @property
    def indexCreated(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#indexCreated

        **[signal] void QHelpIndexModel::indexCreated()**

        This signal is emitted when the index has been created.
        """
        ...

    @property
    def indexCreationStarted(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#indexCreationStarted

        **[signal] void QHelpIndexModel::indexCreationStarted()**

        This signal is emitted when the creation of a new index has started. The
        current index is invalid from this point on until the signal
        **indexCreated** () is emitted.

        **See also** **isCreatingIndex** ().
        """
        ...
