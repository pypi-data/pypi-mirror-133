"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtScxml

bytes = str


class QScxmlDynamicScxmlServiceFactory(PySide2.QtScxml.QScxmlInvokableServiceFactory):
    """
    https://doc.qt.io/qt-5/qscxmldynamicscxmlservicefactory.html

    **Detailed Description**

    Dynamically resolved services are used when loading **SCXML**  content from
    files that a parent state machine requests at runtime, via the `srcexpr`
    attribute in the `<invoke>` element.
    """

    def __init__(
        self,
        invokeInfo: PySide2.QtScxml.QScxmlExecutableContent.InvokeInfo,
        names: typing.List,
        parameters: typing.List,
        parent: typing.Optional[PySide2.QtCore.QObject] = ...,
    ) -> None:
        """
        https://doc.qt.io/qt-5/qscxmldynamicscxmlservicefactory.html#QScxmlDynam
        icScxmlServiceFactory

        **QScxmlDynamicScxmlServiceFactory::QScxmlDynamicScxmlServiceFactory(con
        st QScxmlExecutableContent::InvokeInfo & invokeInfo , const
        QVector<QScxmlExecutableContent::StringId> & names , const
        QVector<QScxmlExecutableContent::ParameterInfo> & parameters , QObject *
        parent = nullptr)**

        Creates a factory for dynamically resolved services, passing the
        attributes of the `<invoke>` element as **invokeInfo** , any `<param>`
        child elements as **parameters** , the content of the `names` attribute
        as **names** , and the **QObject**  parent **parent**.
        """
        ...

    def invoke(
        self, parentStateMachine: PySide2.QtScxml.QScxmlStateMachine
    ) -> PySide2.QtScxml.QScxmlInvokableService:
        """
        https://doc.qt.io/qt-5/qscxmldynamicscxmlservicefactory.html#invoke

        **[override virtual] QScxmlInvokableService
        *QScxmlDynamicScxmlServiceFactory::invoke(QScxmlStateMachine *
        parentStateMachine )**

        Reimplements: **QScxmlInvokableServiceFactory::invoke**
        (QScxmlStateMachine *parentStateMachine).
        """
        ...
