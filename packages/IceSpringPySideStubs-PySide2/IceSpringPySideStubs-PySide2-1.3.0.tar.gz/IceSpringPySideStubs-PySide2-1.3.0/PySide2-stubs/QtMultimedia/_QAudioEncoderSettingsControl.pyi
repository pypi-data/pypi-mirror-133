"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

Licence: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtMultimedia, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QAudioEncoderSettingsControl(PySide2.QtMultimedia.QMediaControl):
    """
    https://doc.qt.io/qt-5/qaudioencodersettingscontrol.html

    **Detailed Description**

    If a **QMediaService**  supports encoding audio data it will implement
    QAudioEncoderSettingsControl. This control provides information about the
    limits of restricted audio encoder options and allows the selection of a set
    of audio encoder settings as specified in a **QAudioEncoderSettings**
    object.

    The functionality provided by this control is exposed to application code
    through the **QMediaRecorder**  class.

    The interface name of QAudioEncoderSettingsControl is `org.qt-
    project.qt.audioencodersettingscontrol/5.0` as defined in
    **QAudioEncoderSettingsControl_iid** .

    **See also** **QMediaService::requestControl** () and **QMediaRecorder** .
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qaudioencodersettingscontrol.html#QAudioEncoderSe
        ttingsControl

        **[protected]
        QAudioEncoderSettingsControl::QAudioEncoderSettingsControl(QObject *
        parent = nullptr)**

        Create a new audio encoder settings control object with the given
        **parent**.
        """
        ...

    def audioSettings(self) -> PySide2.QtMultimedia.QAudioEncoderSettings:
        """
        https://doc.qt.io/qt-5/qaudioencodersettingscontrol.html#audioSettings

        **[pure virtual] QAudioEncoderSettings
        QAudioEncoderSettingsControl::audioSettings() const**

        Returns the audio encoder settings.

        The returned value may be different tha passed to
        **QAudioEncoderSettingsControl::setAudioSettings** () if the settings
        contains the default or undefined parameters. In this case if the
        undefined parameters are already resolved, they should be returned.

        **See also** **setAudioSettings** ().
        """
        ...

    def codecDescription(self, codecName: str) -> str:
        """
        https://doc.qt.io/qt-5/qaudioencodersettingscontrol.html#codecDescriptio
        n

        **[pure virtual] QString
        QAudioEncoderSettingsControl::codecDescription(const QString & codecName
        ) const**

        Returns the description of audio codec **codecName**.
        """
        ...

    def setAudioSettings(
        self, settings: PySide2.QtMultimedia.QAudioEncoderSettings
    ) -> None:
        """
        https://doc.qt.io/qt-5/qaudioencodersettingscontrol.html#setAudioSetting
        s

        **[pure virtual] void
        QAudioEncoderSettingsControl::setAudioSettings(const
        QAudioEncoderSettings & settings )**

        Sets the selected audio **settings**.

        **See also** **audioSettings** ().
        """
        ...

    def supportedAudioCodecs(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qaudioencodersettingscontrol.html#supportedAudioC
        odecs

        **[pure virtual] QStringList
        QAudioEncoderSettingsControl::supportedAudioCodecs() const**

        Returns the list of supported audio codec names.
        """
        ...
