"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

Licence: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtWidgets, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtWidgets

bytes = str


class QMouseEventTransition(PySide2.QtCore.QEventTransition):
    """
    https://doc.qt.io/qt-5/qmouseeventtransition.html

    **Detailed Description**

    QMouseEventTransition is part of **The State Machine Framework** .

    **See also** **QState::addTransition** ().
    """

    @typing.overload
    def __init__(
        self,
        object: PySide2.QtCore.QObject,
        type: PySide2.QtCore.QEvent.Type,
        button: PySide2.QtCore.Qt.MouseButton,
        sourceState: typing.Optional[PySide2.QtCore.QState] = ...,
    ) -> None:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#QMouseEventTransition

        **QMouseEventTransition::QMouseEventTransition(QState * sourceState =
        nullptr)**

        Constructs a new mouse event transition with the given **sourceState**.
        """
        ...

    @typing.overload
    def __init__(
        self, sourceState: typing.Optional[PySide2.QtCore.QState] = ...
    ) -> None:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#QMouseEventTransition-
        1

        **QMouseEventTransition::QMouseEventTransition(QObject * object ,
        QEvent::Type type , Qt::MouseButton button , QState * sourceState =
        nullptr)**

        Constructs a new mouse event transition for events of the given **type**
        for the given **object** , with the given **button** and
        **sourceState**.
        """
        ...

    def button(self) -> PySide2.QtCore.Qt.MouseButton:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#button

        **Qt::MouseButton QMouseEventTransition::button() const**

        Returns the button that this mouse event transition checks for.

        **Note:** Getter function for property button.

        **See also** **setButton** ().
        """
        ...

    def eventTest(self, event: PySide2.QtCore.QEvent) -> bool:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#eventTest

        **[override virtual protected] bool
        QMouseEventTransition::eventTest(QEvent * event )**

        Reimplements: **QEventTransition::eventTest** (QEvent *event).
        """
        ...

    def hitTestPath(self) -> PySide2.QtGui.QPainterPath:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#hitTestPath

        **QPainterPath QMouseEventTransition::hitTestPath() const**

        Returns the hit test path for this mouse event transition.

        **See also** **setHitTestPath** ().
        """
        ...

    def modifierMask(self) -> PySide2.QtCore.Qt.KeyboardModifiers:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#modifierMask

        **Qt::KeyboardModifiers QMouseEventTransition::modifierMask() const**

        Returns the keyboard modifier mask that this mouse event transition
        checks for.

        **Note:** Getter function for property modifierMask.

        **See also** **setModifierMask** ().
        """
        ...

    def onTransition(self, event: PySide2.QtCore.QEvent) -> None:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#onTransition

        **[override virtual protected] void
        QMouseEventTransition::onTransition(QEvent * event )**

        Reimplements: **QEventTransition::onTransition** (QEvent *event).
        """
        ...

    def setButton(self, button: PySide2.QtCore.Qt.MouseButton) -> None:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#setButton

        **void QMouseEventTransition::setButton(Qt::MouseButton button )**

        Sets the **button** that this mouse event transition will check for.

        **Note:** Setter function for property **button** .

        **See also** **button** ().
        """
        ...

    def setHitTestPath(self, path: PySide2.QtGui.QPainterPath) -> None:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#setHitTestPath

        **void QMouseEventTransition::setHitTestPath(const QPainterPath & path
        )**

        Sets the hit test path for this mouse event transition to **path**. If a
        valid path has been set, the transition will only trigger if the mouse
        event position (**QMouseEvent::pos** ()) is inside the path.

        **See also** **hitTestPath** () and **QPainterPath::contains** ().
        """
        ...

    def setModifierMask(self, modifiers: PySide2.QtCore.Qt.KeyboardModifiers) -> None:
        """
        https://doc.qt.io/qt-5/qmouseeventtransition.html#setModifierMask

        **void QMouseEventTransition::setModifierMask(Qt::KeyboardModifiers
        modifierMask )**

        Sets the keyboard modifier mask that this mouse event transition will
        check for to **modifierMask**.

        **Note:** Setter function for property **modifierMask** .

        **See also** **modifierMask** ().
        """
        ...
