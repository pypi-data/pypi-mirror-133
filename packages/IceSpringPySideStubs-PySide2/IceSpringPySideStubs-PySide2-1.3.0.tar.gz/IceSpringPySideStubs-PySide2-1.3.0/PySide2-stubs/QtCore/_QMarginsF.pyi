"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

Licence: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtCore, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore

bytes = str


class QMarginsF(object):
    """
    https://doc.qt.io/qt-5/qmarginsf.html

    **Detailed Description**

    QMarginsF defines a set of four margins; left, top, right and bottom, that
    describe the size of the borders surrounding a rectangle.

    The **isNull** () function returns `true` only if all margins are set to
    zero.

    QMarginsF objects can be streamed as well as compared.
    """

    @typing.overload
    def __init__(self) -> None:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#QMarginsF

        **QMarginsF::QMarginsF()**

        Constructs a margins object with all margins set to 0.

        **See also** **isNull** ().
        """
        ...

    @typing.overload
    def __init__(self, QMarginsF: PySide2.QtCore.QMarginsF) -> None:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#QMarginsF-1

        **QMarginsF::QMarginsF(qreal left , qreal top , qreal right , qreal
        bottom )**

        Constructs margins with the given **left** , **top** , **right** ,
        **bottom**

        **See also** **setLeft** (), **setRight** (), **setTop** (), and
        **setBottom** ().
        """
        ...

    @typing.overload
    def __init__(self, left: float, top: float, right: float, bottom: float) -> None:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#QMarginsF-2

        **QMarginsF::QMarginsF(const QMargins & margins )**

        Constructs margins copied from the given **margins**
        """
        ...

    @typing.overload
    def __init__(self, margins: PySide2.QtCore.QMargins) -> None:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#QMarginsF

        **QMarginsF::QMarginsF()**

        Constructs a margins object with all margins set to 0.

        **See also** **isNull** ().
        """
        ...

    @typing.overload
    def __add__(self, lhs: float) -> PySide2.QtCore.QMarginsF:
        ...

    @typing.overload
    def __add__(self, rhs: PySide2.QtCore.QMarginsF) -> PySide2.QtCore.QMarginsF:
        ...

    @typing.overload
    def __add__(self, rhs: float) -> PySide2.QtCore.QMarginsF:
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    @typing.overload
    def __iadd__(self, addend: float) -> PySide2.QtCore.QMarginsF:
        ...

    @typing.overload
    def __iadd__(self, margins: PySide2.QtCore.QMarginsF) -> PySide2.QtCore.QMarginsF:
        ...

    def __imul__(self, factor: float) -> PySide2.QtCore.QMarginsF:
        ...

    @typing.overload
    def __isub__(self, margins: PySide2.QtCore.QMarginsF) -> PySide2.QtCore.QMarginsF:
        ...

    @typing.overload
    def __isub__(self, subtrahend: float) -> PySide2.QtCore.QMarginsF:
        ...

    @typing.overload
    def __mul__(self, lhs: float) -> PySide2.QtCore.QMarginsF:
        ...

    @typing.overload
    def __mul__(self, rhs: float) -> PySide2.QtCore.QMarginsF:
        ...

    def __neg__(self) -> PySide2.QtCore.QMarginsF:
        ...

    def __pos__(self) -> PySide2.QtCore.QMarginsF:
        ...

    @typing.overload
    def __sub__(self, rhs: PySide2.QtCore.QMarginsF) -> PySide2.QtCore.QMarginsF:
        ...

    @typing.overload
    def __sub__(self, rhs: float) -> PySide2.QtCore.QMarginsF:
        ...

    def bottom(self) -> float:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#bottom

        **qreal QMarginsF::bottom() const**

        Returns the bottom margin.

        **See also** **setBottom** ().
        """
        ...

    def isNull(self) -> bool:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#isNull

        **bool QMarginsF::isNull() const**

        Returns `true` if all margins are 0; otherwise returns false.
        """
        ...

    def left(self) -> float:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#left

        **qreal QMarginsF::left() const**

        Returns the left margin.

        **See also** **setLeft** ().
        """
        ...

    def right(self) -> float:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#right

        **qreal QMarginsF::right() const**

        Returns the right margin.

        **See also** **setRight** ().
        """
        ...

    def setBottom(self, bottom: float) -> None:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#setBottom

        **void QMarginsF::setBottom(qreal bottom )**

        Sets the bottom margin to **bottom**.

        **See also** **bottom** ().
        """
        ...

    def setLeft(self, left: float) -> None:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#setLeft

        **void QMarginsF::setLeft(qreal left )**

        Sets the left margin to **left**.

        **See also** **left** ().
        """
        ...

    def setRight(self, right: float) -> None:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#setRight

        **void QMarginsF::setRight(qreal right )**

        Sets the right margin to **right**.

        **See also** **right** ().
        """
        ...

    def setTop(self, top: float) -> None:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#setTop

        **void QMarginsF::setTop(qreal Top )**

        Sets the Top margin to **Top**.

        **See also** **top** ().
        """
        ...

    def toMargins(self) -> PySide2.QtCore.QMargins:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#toMargins

        **QMargins QMarginsF::toMargins() const**

        Returns an integer based copy of this margins object.

        Note that the components in the returned margins will be rounded to the
        nearest integer.

        **See also** **QMarginsF** ().
        """
        ...

    def top(self) -> float:
        """
        https://doc.qt.io/qt-5/qmarginsf.html#top

        **qreal QMarginsF::top() const**

        Returns the top margin.

        **See also** **setTop** ().
        """
        ...
