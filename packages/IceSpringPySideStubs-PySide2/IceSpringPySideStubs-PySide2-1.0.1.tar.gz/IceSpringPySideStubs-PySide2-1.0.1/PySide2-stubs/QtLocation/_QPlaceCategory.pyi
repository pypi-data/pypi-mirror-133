"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtPositioning
import PySide2.QtLocation

bytes = str


class QPlaceCategory(object):
    """
    **Detailed Description**

    Categories are used to search for places based on the categories they are associated with. The list/tree of available categories can be obtained from **QPlaceManager** . The **QPlaceSearchRequest::setCategories** () function can be used to limit the search results to places with the specified categories.

    If the **QGeoServiceProvider**  supports it, categories can be created and removed. This functionality is available in the **QPlaceManager**  class.
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QPlaceCategory::QPlaceCategory()**

        Constructs a category.
        """
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtLocation.QPlaceCategory) -> None:
        """
        **QPlaceCategory::QPlaceCategory()**

        Constructs a category.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def categoryId(self) -> str:
        """
        **QString QPlaceCategory::categoryId() const**

        Returns the identifier of the category. The category identifier is a string which uniquely identifies this category within a particular **QPlaceManager** . The identifier is only meaningful to the **QPlaceManager**  that generated it and is not transferable between managers.

        **See also** **setCategoryId** ().
        """
        ...

    def icon(self) -> PySide2.QtLocation.QPlaceIcon:
        """
        **QPlaceIcon QPlaceCategory::icon() const**

        Returns the icon associated with the category.

        **See also** **setIcon** ().
        """
        ...

    def isEmpty(self) -> bool:
        """
        **bool QPlaceCategory::isEmpty() const**

        Returns a boolean indicating whether the all the fields of the place category are empty or not.
        """
        ...

    def name(self) -> str:
        """
        **QString QPlaceCategory::name() const**

        Returns the name of category.

        **See also** **setName** ().
        """
        ...

    def setCategoryId(self, identifier: str) -> None:
        """
        **void QPlaceCategory::setCategoryId(const QString & identifier )**

        Sets the **identifier** of the category.

        **See also** **categoryId** ().
        """
        ...

    def setIcon(self, icon: PySide2.QtLocation.QPlaceIcon) -> None:
        """
        **void QPlaceCategory::setIcon(const QPlaceIcon & icon )**

        Sets the **icon** of the category.

        **See also** **icon** ().
        """
        ...

    def setName(self, name: str) -> None:
        """
        **void QPlaceCategory::setName(const QString & name )**

        Sets the **name** of the category.

        **See also** **name** ().
        """
        ...
