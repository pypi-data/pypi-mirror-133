"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtPositioning
import PySide2.QtLocation

bytes = str


class QPlaceResult(PySide2.QtLocation.QPlaceSearchResult):
    """
    **Detailed Description**

    The **PlaceResult**  holds the distance to the place from the center of the search request, an instance of the place and an indication of whether the result is sponsored or **organic** .

    The intended usage is that a **QPlaceSearchResult**  can be converted into a QPlaceResult like so:

    if (result.type() == **QPlaceSearchResult** ::PlaceResult) {
            **QPlaceResult**  placeResult = result;
            **qDebug** () << placeResult.place().name();
            **qDebug** () << placeResult.place().location().coordinate();
            **qDebug** () << placeResult.distance();
        }

    The implementation is handled in such a way that object slicing is not an issue.

    **See also** **QPlaceSearchResult** .
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QPlaceResult::QPlaceResult()**

        Constructs a new place result object.
        """
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtLocation.QPlaceSearchResult) -> None:
        """
        **QPlaceResult::QPlaceResult()**

        Constructs a new place result object.
        """
        ...

    def distance(self) -> float:
        """
        **qreal QPlaceResult::distance() const**

        Returns the distance of the place to the search center. This field is only relevant provided the search request contained a search area with a search center. Otherwise, the distance is NaN indicating an undefined distance. The default value for distance is NaN.

        **See also** **setDistance** ().
        """
        ...

    def isSponsored(self) -> bool:
        """
        **bool QPlaceResult::isSponsored() const**

        Returns true if the result is a sponsored result.

        **See also** **setSponsored** ().
        """
        ...

    def place(self) -> PySide2.QtLocation.QPlace:
        """
        **QPlace QPlaceResult::place() const**

        Returns the place of the search result.

        **See also** **setPlace** ().
        """
        ...

    def setDistance(self, distance: float) -> None:
        """
        **void QPlaceResult::setDistance(qreal distance )**

        Set the **distance** of the search result's place from a search center.

        **See also** **distance** ().
        """
        ...

    def setPlace(self, place: PySide2.QtLocation.QPlace) -> None:
        """
        **void QPlaceResult::setPlace(const QPlace & place )**

        Sets the **place** that this result refers to.

        **See also** **place** ().
        """
        ...

    def setSponsored(self, sponsored: bool) -> None:
        """
        **void QPlaceResult::setSponsored(bool sponsored )**

        Sets whether the result is a **sponsored** result or not.

        **See also** **isSponsored** ().
        """
        ...
