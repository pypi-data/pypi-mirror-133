"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtNetwork

bytes = str


class QSslCipher(object):
    """
    **Detailed Description**

    QSslCipher stores information about one cryptographic cipher. It is most commonly used with **QSslSocket** , either for configuring which ciphers the socket can use, or for displaying the socket's ciphers to the user.

    **See also** **QSslSocket**  and **QSslKey** .
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QSslCipher::QSslCipher()**

        Constructs an empty QSslCipher object.
        """
        ...

    @typing.overload
    def __init__(self, name: str) -> None:
        """
        **QSslCipher::QSslCipher()**

        Constructs an empty QSslCipher object.
        """
        ...

    @typing.overload
    def __init__(self, name: str, protocol: PySide2.QtNetwork.QSsl.SslProtocol) -> None:
        """
        **QSslCipher::QSslCipher()**

        Constructs an empty QSslCipher object.
        """
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtNetwork.QSslCipher) -> None:
        """
        **QSslCipher::QSslCipher()**

        Constructs an empty QSslCipher object.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def authenticationMethod(self) -> str:
        """
        **QString QSslCipher::authenticationMethod() const**

        Returns the cipher's authentication method as a **QString** .
        """
        ...

    def encryptionMethod(self) -> str:
        """
        **QString QSslCipher::encryptionMethod() const**

        Returns the cipher's encryption method as a **QString** .
        """
        ...

    def isNull(self) -> bool:
        """
        **bool QSslCipher::isNull() const**

        Returns `true` if this is a null cipher; otherwise returns `false`.
        """
        ...

    def keyExchangeMethod(self) -> str:
        """
        **QString QSslCipher::keyExchangeMethod() const**

        Returns the cipher's key exchange method as a **QString** .
        """
        ...

    def name(self) -> str:
        """
        **QString QSslCipher::name() const**

        Returns the name of the cipher, or an empty **QString**  if this is a null cipher.

        **See also** **isNull** ().
        """
        ...

    def protocol(self) -> PySide2.QtNetwork.QSsl.SslProtocol:
        """
        **QSsl::SslProtocol QSslCipher::protocol() const**

        Returns the cipher's protocol type, or **QSsl::UnknownProtocol**  if **QSslCipher**  is unable to determine the protocol (**protocolString** () may contain more information).

        **See also** **protocolString** ().
        """
        ...

    def protocolString(self) -> str:
        """
        **QString QSslCipher::protocolString() const**

        Returns the cipher's protocol as a **QString** .

        **See also** **protocol** ().
        """
        ...

    def supportedBits(self) -> int:
        """
        **int QSslCipher::supportedBits() const**

        Returns the number of bits supported by the cipher.

        **See also** **usedBits** ().
        """
        ...

    def swap(self, other: PySide2.QtNetwork.QSslCipher) -> None:
        """
        **void QSslCipher::swap(QSslCipher & other )**

        Swaps this cipher instance with **other**. This function is very fast and never fails.

        This function was introduced in Qt 5.0.
        """
        ...

    def usedBits(self) -> int:
        """
        **int QSslCipher::usedBits() const**

        Returns the number of bits used by the cipher.

        **See also** **supportedBits** ().
        """
        ...
