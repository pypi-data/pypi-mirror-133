"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui

bytes = str


class QDragEnterEvent(PySide2.QtGui.QDragMoveEvent):
    """
    **Detailed Description**

    A widget must accept this event in order to receive the **drag move events**  that are sent while the drag and drop action is in progress. The drag enter event is always immediately followed by a drag move event.

    QDragEnterEvent inherits most of its functionality from **QDragMoveEvent** , which in turn inherits most of its functionality from **QDropEvent** .

    **See also** **QDragLeaveEvent** , **QDragMoveEvent** , and **QDropEvent** .
    """

    def __init__(
        self,
        pos: PySide2.QtCore.QPoint,
        actions: PySide2.QtCore.Qt.DropActions,
        data: PySide2.QtCore.QMimeData,
        buttons: PySide2.QtCore.Qt.MouseButtons,
        modifiers: PySide2.QtCore.Qt.KeyboardModifiers,
    ) -> None:
        """
        **QDragEnterEvent::QDragEnterEvent(const QPoint & point , Qt::DropActions actions , const QMimeData * data , Qt::MouseButtons buttons , Qt::KeyboardModifiers modifiers )**

        Constructs a QDragEnterEvent that represents a drag entering a widget at the given **point** with mouse and keyboard states specified by **buttons** and **modifiers**.

        The drag data is passed as MIME-encoded information in **data** , and the specified **actions** describe the possible types of drag and drop operation that can be performed.

        **Warning:** Do not create a QDragEnterEvent yourself since these objects rely on Qt's internal state.
        """
        ...
