"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui

bytes = str


class QTextListFormat(PySide2.QtGui.QTextFormat):
    """
    **Detailed Description**

    A list is composed of one or more items, represented as text blocks. The list\'s format specifies the appearance of items in the list. In particular, it determines the indentation and the style of each item.

    The indentation of the items is an integer value that causes each item to be offset from the left margin by a certain amount. This value is read with **indent** () and set with **setIndent** ().

    The style used to decorate each item is set with **setStyle** () and can be read with the **style** () function. The style controls the type of bullet points and numbering scheme used for items in the list. Note that lists that use the decimal numbering scheme begin counting at 1 rather than 0.

    Style properties can be set to further configure the appearance of list items; for example, the **ListNumberPrefix**  and **ListNumberSuffix**  properties can be used to customize the numbers used in an ordered list so that they appear as (1), (2), (3), etc.:

    **QTextListFormat**  listFormat;

        listFormat.setStyle(**QTextListFormat** ::ListDecimal);
        listFormat.setNumberPrefix("(");
        listFormat.setNumberSuffix(")");

        cursor.insertList(listFormat);

    **See also** **QTextList** .
    """

    ListUpperRoman: QTextListFormat = ...
    ListLowerRoman: QTextListFormat = ...
    ListUpperAlpha: QTextListFormat = ...
    ListLowerAlpha: QTextListFormat = ...
    ListDecimal: QTextListFormat = ...
    ListSquare: QTextListFormat = ...
    ListCircle: QTextListFormat = ...
    ListDisc: QTextListFormat = ...
    ListStyleUndefined: QTextListFormat = ...

    class Style(object):
        ListUpperRoman: QTextListFormat.Style = ...
        ListLowerRoman: QTextListFormat.Style = ...
        ListUpperAlpha: QTextListFormat.Style = ...
        ListLowerAlpha: QTextListFormat.Style = ...
        ListDecimal: QTextListFormat.Style = ...
        ListSquare: QTextListFormat.Style = ...
        ListCircle: QTextListFormat.Style = ...
        ListDisc: QTextListFormat.Style = ...
        ListStyleUndefined: QTextListFormat.Style = ...

    @typing.overload
    def __init__(self) -> None:
        """
        **QTextListFormat::QTextListFormat()**

        Constructs a new list format object.
        """
        ...

    @typing.overload
    def __init__(self, QTextListFormat: PySide2.QtGui.QTextListFormat) -> None:
        """
        **QTextListFormat::QTextListFormat()**

        Constructs a new list format object.
        """
        ...

    @typing.overload
    def __init__(self, fmt: PySide2.QtGui.QTextFormat) -> None:
        """
        **QTextListFormat::QTextListFormat()**

        Constructs a new list format object.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def indent(self) -> int:
        """
        **int QTextListFormat::indent() const**

        Returns the list format's indentation. The indentation is multiplied by the **QTextDocument::indentWidth**  property to get the effective indent in pixels.

        **See also** **setIndent** ().
        """
        ...

    def isValid(self) -> bool:
        """
        **bool QTextListFormat::isValid() const**

        Returns `true` if this list format is valid; otherwise returns `false`.
        """
        ...

    def numberPrefix(self) -> str:
        """
        **QString QTextListFormat::numberPrefix() const**

        Returns the list format's number prefix.

        This function was introduced in Qt 4.8.

        **See also** **setNumberPrefix** ().
        """
        ...

    def numberSuffix(self) -> str:
        """
        **QString QTextListFormat::numberSuffix() const**

        Returns the list format's number suffix.

        This function was introduced in Qt 4.8.

        **See also** **setNumberSuffix** ().
        """
        ...

    def setIndent(self, indent: int) -> None:
        """
        **void QTextListFormat::setIndent(int indentation )**

        Sets the list format's **indentation**. The indentation is multiplied by the **QTextDocument::indentWidth**  property to get the effective indent in pixels.

        **See also** **indent** ().
        """
        ...

    def setNumberPrefix(self, numberPrefix: str) -> None:
        """
        **void QTextListFormat::setNumberPrefix(const QString & numberPrefix )**

        Sets the list format's number prefix to the string specified by **numberPrefix**. This can be used with all sorted list types. It does not have any effect on unsorted list types.

        The default prefix is an empty string.

        This function was introduced in Qt 4.8.

        **See also** **numberPrefix** ().
        """
        ...

    def setNumberSuffix(self, numberSuffix: str) -> None:
        """
        **void QTextListFormat::setNumberSuffix(const QString & numberSuffix )**

        Sets the list format\'s number suffix to the string specified by **numberSuffix**. This can be used with all sorted list types. It does not have any effect on unsorted list types.

        The default suffix is ".".

        This function was introduced in Qt 4.8.

        **See also** **numberSuffix** ().
        """
        ...

    def setStyle(self, style: PySide2.QtGui.QTextListFormat.Style) -> None:
        """
        **void QTextListFormat::setStyle(QTextListFormat::Style style )**

        Sets the list format's **style**.

        **See also** **style** () and **Style** .
        """
        ...

    def style(self) -> PySide2.QtGui.QTextListFormat.Style:
        """
        **QTextListFormat::Style QTextListFormat::style() const**

        Returns the list format's style.

        **See also** **setStyle** () and **Style** .
        """
        ...
