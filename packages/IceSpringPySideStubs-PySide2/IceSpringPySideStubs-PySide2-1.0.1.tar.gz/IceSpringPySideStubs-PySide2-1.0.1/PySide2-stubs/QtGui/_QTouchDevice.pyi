"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui

bytes = str


class QTouchDevice(object):
    """
    **Detailed Description**

    Each **QTouchEvent**  contains a QTouchDevice pointer to allow accessing device-specific properties like type and capabilities. It is the responsibility of the platform or generic plug-ins to register the available touch devices via QWindowSystemInterface before generating any touch events. Applications do not need to instantiate this class, they should just access the global instances pointed to by **QTouchEvent::device** ().
    """

    TouchScreen: QTouchDevice = ...
    Position: QTouchDevice = ...
    TouchPad: QTouchDevice = ...
    Area: QTouchDevice = ...
    Pressure: QTouchDevice = ...
    Velocity: QTouchDevice = ...
    RawPositions: QTouchDevice = ...
    NormalizedPosition: QTouchDevice = ...
    MouseEmulation: QTouchDevice = ...

    class Capabilities(object):
        ...

    class CapabilityFlag(object):
        Position: QTouchDevice.CapabilityFlag = ...
        Area: QTouchDevice.CapabilityFlag = ...
        Pressure: QTouchDevice.CapabilityFlag = ...
        Velocity: QTouchDevice.CapabilityFlag = ...
        RawPositions: QTouchDevice.CapabilityFlag = ...
        NormalizedPosition: QTouchDevice.CapabilityFlag = ...
        MouseEmulation: QTouchDevice.CapabilityFlag = ...

    class DeviceType(object):
        TouchScreen: QTouchDevice.DeviceType = ...
        TouchPad: QTouchDevice.DeviceType = ...

    def __init__(self) -> None:
        """
        **QTouchDevice::QTouchDevice()**

        Creates a new touch device instance. By default the name is empty, the only capability is Position and type is **TouchScreen** .
        """
        ...

    def capabilities(self) -> PySide2.QtGui.QTouchDevice.Capabilities:
        """
        **QTouchDevice::Capabilities QTouchDevice::capabilities() const**

        Returns the touch device capabilities.

        **See also** **setCapabilities** ().
        """
        ...

    @staticmethod
    def devices() -> typing.List:
        """
        **[static] QList<const QTouchDevice *> QTouchDevice::devices()**

        Returns a list of all registered devices.

        **Note:** The returned list cannot be used to add new devices. To add a simulated touch screen for an autotest, **QTest::createTouchDevice** () can be used. To add real touch screens to QPA plugins, the private `QWindowSystemInterface::registerTouchDevice()` function can be used.
        """
        ...

    def maximumTouchPoints(self) -> int:
        """
        **int QTouchDevice::maximumTouchPoints() const**

        Returns the maximum number of simultaneous touch points (fingers) that can be detected.

        This function was introduced in Qt 5.2.

        **See also** **setMaximumTouchPoints** ().
        """
        ...

    def name(self) -> str:
        """
        **QString QTouchDevice::name() const**

        Returns the touch device name.

        This string may often be empty. It is however useful for systems that have more than one touch input device because there it can be used to differentiate between the devices (i.e. to tell from which device a **QTouchEvent**  originates from).

        **See also** **setName** ().
        """
        ...

    def setCapabilities(self, caps: PySide2.QtGui.QTouchDevice.Capabilities) -> None:
        """
        **void QTouchDevice::setCapabilities(QTouchDevice::Capabilities caps )**

        Sets the capabilities **caps** supported by the device and its driver.

        **See also** **capabilities** ().
        """
        ...

    def setMaximumTouchPoints(self, max: int) -> None:
        """
        **void QTouchDevice::setMaximumTouchPoints(int max )**

        Sets the maximum number of simultaneous touchpoints **max** supported by the device and its driver.

        **See also** **maximumTouchPoints** ().
        """
        ...

    def setName(self, name: str) -> None:
        """
        **void QTouchDevice::setName(const QString & name )**

        Sets the **name** (a unique identifier) for the device. In most systems it is enough to leave this unset and keep the default empty name. This identifier becomes important when having multiple touch devices and a need to differentiate between them.

        **See also** **name** ().
        """
        ...

    def setType(self, devType: PySide2.QtGui.QTouchDevice.DeviceType) -> None:
        """
        **void QTouchDevice::setType(QTouchDevice::DeviceType devType )**

        Sets the device type **devType**.

        **See also** **type** ().
        """
        ...

    def type(self) -> PySide2.QtGui.QTouchDevice.DeviceType:
        """
        **QTouchDevice::DeviceType QTouchDevice::type() const**

        Returns the touch device type.

        **See also** **setType** ().
        """
        ...
