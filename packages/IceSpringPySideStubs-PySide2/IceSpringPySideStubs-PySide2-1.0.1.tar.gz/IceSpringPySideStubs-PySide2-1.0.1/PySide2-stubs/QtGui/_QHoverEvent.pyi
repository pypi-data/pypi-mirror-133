"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui

bytes = str


class QHoverEvent(PySide2.QtGui.QInputEvent):
    """
    **Detailed Description**

    Mouse events occur when a mouse cursor is moved into, out of, or within a widget, and if the widget has the **Qt::WA_Hover**  attribute.

    The function **pos** () gives the current cursor position, while **oldPos** () gives the old mouse position.

    There are a few similarities between the events **QEvent::HoverEnter**  and **QEvent::HoverLeave** , and the events **QEvent::Enter**  and **QEvent::Leave** . However, they are slightly different because we do an update() in the event handler of **HoverEnter**  and **HoverLeave** .

    **QEvent::HoverMove**  is also slightly different from **QEvent::MouseMove** . Let us consider a top-level window A containing a child B which in turn contains a child C (all with mouse tracking enabled):

    ![](images/hoverevents.png)

    Now, if you move the cursor from the top to the bottom in the middle of A, you will get the following **QEvent::MouseMove**  events:

    1. A::MouseMove
      2. B::MouseMove
      3. C::MouseMove

    You will get the same events for **QEvent::HoverMove** , except that the event always propagates to the top-level regardless whether the event is accepted or not. It will only stop propagating with the **Qt::WA_NoMousePropagation**  attribute.

    In this case the events will occur in the following way:

    1. A::HoverMove
      2. A::HoverMove, B::HoverMove
      3. A::HoverMove, B::HoverMove, C::HoverMove
    """

    def __init__(
        self,
        type: PySide2.QtCore.QEvent.Type,
        pos: PySide2.QtCore.QPointF,
        oldPos: PySide2.QtCore.QPointF,
        modifiers: PySide2.QtCore.Qt.KeyboardModifiers = ...,
    ) -> None:
        """
        **QHoverEvent::QHoverEvent(QEvent::Type type , const QPointF & pos , const QPointF & oldPos , Qt::KeyboardModifiers modifiers = Qt::NoModifier)**

        Constructs a hover event object.

        The **type** parameter must be **QEvent::HoverEnter** , **QEvent::HoverLeave** , or **QEvent::HoverMove** .

        The **pos** is the current mouse cursor's position relative to the receiving widget, while **oldPos** is its previous such position. **modifiers** hold the state of all keyboard modifiers at the time of the event.
        """
        ...

    def oldPos(self) -> PySide2.QtCore.QPoint:
        """
        **QPoint QHoverEvent::oldPos() const**

        Returns the previous position of the mouse cursor, relative to the widget that received the event. If there is no previous position, oldPos() will return the same position as **pos** ().

        On **QEvent::HoverEnter**  events, this position will always be **QPoint** (-1, -1).

        **See also** **pos** ().
        """
        ...

    def oldPosF(self) -> PySide2.QtCore.QPointF:
        """
        **const QPointF &QHoverEvent::oldPosF() const**

        Returns the previous position of the mouse cursor, relative to the widget that received the event. If there is no previous position, oldPosF() will return the same position as **posF** ().

        On **QEvent::HoverEnter**  events, this position will always be **QPointF** (-1, -1).

        **See also** **posF** ().
        """
        ...

    def pos(self) -> PySide2.QtCore.QPoint:
        """
        **QPoint QHoverEvent::pos() const**

        Returns the position of the mouse cursor, relative to the widget that received the event.

        On **QEvent::HoverLeave**  events, this position will always be **QPoint** (-1, -1).

        **See also** **oldPos** ().
        """
        ...

    def posF(self) -> PySide2.QtCore.QPointF:
        """
        **const QPointF &QHoverEvent::posF() const**

        Returns the position of the mouse cursor, relative to the widget that received the event.

        On **QEvent::HoverLeave**  events, this position will always be **QPointF** (-1, -1).

        **See also** **oldPosF** ().
        """
        ...
