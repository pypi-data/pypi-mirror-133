"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtScxml

bytes = str


class QScxmlInvokableService(PySide2.QtCore.QObject):
    """
    **Detailed Description**

    The services are called from state machines via the mechanism described in **SCXML Specification - 6.4 <invoke>** . This class represents an actual instance of an invoked service.
    """

    def __init__(
        self,
        parentStateMachine: PySide2.QtScxml.QScxmlStateMachine,
        parent: PySide2.QtScxml.QScxmlInvokableServiceFactory,
    ) -> None:
        ...

    def id(self) -> str:
        """
        **id : const QString**

        This property holds the ID of the invokable service.

        The ID is specified by the `id` attribute of the `<invoke>` element.

        **Access functions:**

        virtual QString **id** () const = 0
        """
        ...

    def name(self) -> str:
        """
        **name : const QString**

        This property holds the name of the service being invoked.

        **Access functions:**

        virtual QString **name** () const = 0
        """
        ...

    def parentStateMachine(self) -> PySide2.QtScxml.QScxmlStateMachine:
        """
        **parentStateMachine : QScxmlStateMachine* const**

        This property holds the SCXML state machine that invoked the service.

        **Access functions:**

        QScxmlStateMachine * **parentStateMachine** () const

        **Member Function Documentation**
        """
        ...

    def postEvent(self, event: PySide2.QtScxml.QScxmlEvent) -> None:
        """
        **[pure virtual] void QScxmlInvokableService::postEvent(QScxmlEvent * event )**

        Sends an **event** to the service.
        """
        ...

    def start(self) -> bool:
        """
        **[pure virtual] bool QScxmlInvokableService::start()**

        Starts the invokable service. Returns `true` on success, or `false` if the invocation fails.
        """
        ...
