"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtWidgets

bytes = str


class QWidgetItem(PySide2.QtWidgets.QLayoutItem):
    """
    **Detailed Description**

    Normally, you don't need to use this class directly. Qt's built-in layout managers provide the following functions for manipulating widgets in layouts:

    ClassFunctions
    **QBoxLayout** **addWidget()** , **insertWidget()** , **setStretchFactor()**
    **QGridLayout** **addWidget()**
    **QStackedLayout** **addWidget()** , **insertWidget()** , **currentWidget()** , **setCurrentWidget()** , **widget()**

    **See also** **QLayout** , **QSpacerItem** , and **QLayoutItem::widget** ().
    """

    def __init__(self, w: PySide2.QtWidgets.QWidget) -> None:
        """
        **QWidgetItem::QWidgetItem(QWidget * widget )**

        Creates an item containing the given **widget**.
        """
        ...

    def controlTypes(self) -> PySide2.QtWidgets.QSizePolicy.ControlTypes:
        """
        **[override virtual] QSizePolicy::ControlTypes QWidgetItem::controlTypes() const**

        Reimplements: **QLayoutItem::controlTypes** () const.

        Returns the control type associated with the widget for which this size policy applies.

        **See also** **QSizePolicy::controlType** ().
        """
        ...

    def expandingDirections(self) -> PySide2.QtCore.Qt.Orientations:
        """
        **[override virtual] Qt::Orientations QWidgetItem::expandingDirections() const**

        Reimplements: **QLayoutItem::expandingDirections** () const.
        """
        ...

    def geometry(self) -> PySide2.QtCore.QRect:
        """
        **[override virtual] QRect QWidgetItem::geometry() const**

        Reimplements: **QLayoutItem::geometry** () const.

        **See also** **setGeometry** ().
        """
        ...

    def hasHeightForWidth(self) -> bool:
        """
        **[override virtual] bool QWidgetItem::hasHeightForWidth() const**

        Reimplements: **QLayoutItem::hasHeightForWidth** () const.
        """
        ...

    def heightForWidth(self, arg__1: int) -> int:
        """
        **[override virtual] int QWidgetItem::heightForWidth(int w ) const**

        Reimplements: **QLayoutItem::heightForWidth** (int ) const.
        """
        ...

    def isEmpty(self) -> bool:
        """
        **[override virtual] bool QWidgetItem::isEmpty() const**

        Reimplements: **QLayoutItem::isEmpty** () const.

        Returns `true` if the widget is hidden; otherwise returns `false`.

        **See also** **QWidget::isHidden** ().
        """
        ...

    def maximumSize(self) -> PySide2.QtCore.QSize:
        """
        **[override virtual] QSize QWidgetItem::maximumSize() const**

        Reimplements: **QLayoutItem::maximumSize** () const.
        """
        ...

    def minimumSize(self) -> PySide2.QtCore.QSize:
        """
        **[override virtual] QSize QWidgetItem::minimumSize() const**

        Reimplements: **QLayoutItem::minimumSize** () const.
        """
        ...

    def setGeometry(self, arg__1: PySide2.QtCore.QRect) -> None:
        """
        **[override virtual] void QWidgetItem::setGeometry(const QRect & rect )**

        Reimplements: **QLayoutItem::setGeometry** (const QRect &r).

        **See also** **geometry** ().
        """
        ...

    def sizeHint(self) -> PySide2.QtCore.QSize:
        """
        **[override virtual] QSize QWidgetItem::sizeHint() const**

        Reimplements: **QLayoutItem::sizeHint** () const.
        """
        ...

    def widget(self) -> PySide2.QtWidgets.QWidget:
        """
        **[override virtual] QWidget *QWidgetItem::widget()**

        Reimplements: **QLayoutItem::widget** ().

        Returns the widget managed by this item.
        """
        ...
