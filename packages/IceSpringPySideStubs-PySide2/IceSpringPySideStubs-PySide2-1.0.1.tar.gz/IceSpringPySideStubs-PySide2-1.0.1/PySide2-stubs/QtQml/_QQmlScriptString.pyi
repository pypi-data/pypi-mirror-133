"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtNetwork
import PySide2.QtQml

bytes = str


class QQmlScriptString(object):
    """
    **Detailed Description**

    QQmlScriptString is used to create **QObject**  properties that accept a script "assignment" from QML.

    Normally, the following QML would result in a binding being established for the `script` property; i.e. `script` would be assigned the value obtained from running `myObj.value = Math.max(myValue, 100)`

    MyType {
            script: myObj.value = Math.max(myValue, 100)
        }

    If instead the property had a type of QQmlScriptString, the script itself -- **myObj.value = Math.max(myValue, 100)** \\-- would be passed to the `script` property and the class could choose how to handle it. Typically, the class will evaluate the script at some later time using a **QQmlExpression** .

    **QQmlExpression**  expr(scriptString);
        expr.evaluate();

    **See also** **QQmlExpression** .
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QQmlScriptString::QQmlScriptString()**

        Constructs an empty instance.
        """
        ...

    @typing.overload
    def __init__(self, arg__1: PySide2.QtQml.QQmlScriptString) -> None:
        """
        **QQmlScriptString::QQmlScriptString()**

        Constructs an empty instance.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def booleanLiteral(self) -> typing.Tuple:
        """
        **bool QQmlScriptString::booleanLiteral(bool * ok ) const**

        If the content of the **QQmlScriptString**  is a boolean literal, returns the boolean value and sets **ok** to true. Otherwise returns false and sets **ok** to false.
        """
        ...

    def isEmpty(self) -> bool:
        """
        **bool QQmlScriptString::isEmpty() const**

        Returns whether the **QQmlScriptString**  is empty.
        """
        ...

    def isNullLiteral(self) -> bool:
        """
        **bool QQmlScriptString::isNullLiteral() const**

        Returns whether the content of the **QQmlScriptString**  is the `null` literal.
        """
        ...

    def isUndefinedLiteral(self) -> bool:
        """
        **bool QQmlScriptString::isUndefinedLiteral() const**

        Returns whether the content of the **QQmlScriptString**  is the `undefined` literal.
        """
        ...

    def numberLiteral(self) -> typing.Tuple:
        """
        **qreal QQmlScriptString::numberLiteral(bool * ok ) const**

        If the content of the **QQmlScriptString**  is a number literal, returns that number and sets **ok** to true. Otherwise returns 0.0 and sets **ok** to false.
        """
        ...

    def stringLiteral(self) -> str:
        """
        **QString QQmlScriptString::stringLiteral() const**

        If the content of the **QQmlScriptString**  is a string literal, returns that string. Otherwise returns a null **QString** .
        """
        ...
