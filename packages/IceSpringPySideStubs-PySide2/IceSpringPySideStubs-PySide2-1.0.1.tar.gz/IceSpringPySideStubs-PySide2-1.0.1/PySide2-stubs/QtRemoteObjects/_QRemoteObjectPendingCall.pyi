"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtRemoteObjects

bytes = str


class QRemoteObjectPendingCall(object):
    """
    **Detailed Description**
    """

    NoError: QRemoteObjectPendingCall = ...
    InvalidMessage: QRemoteObjectPendingCall = ...

    class Error(object):
        NoError: QRemoteObjectPendingCall.Error = ...
        InvalidMessage: QRemoteObjectPendingCall.Error = ...

    @typing.overload
    def __init__(self) -> None:
        ...

    @typing.overload
    def __init__(self, other: PySide2.QtRemoteObjects.QRemoteObjectPendingCall) -> None:
        ...

    def error(self) -> PySide2.QtRemoteObjects.QRemoteObjectPendingCall.Error:
        """
        **QRemoteObjectPendingCall::Error QRemoteObjectPendingCall::error() const**

        Returns the error, if any, from the remote call.
        """
        ...

    @staticmethod
    def fromCompletedCall(
        returnValue: typing.Any,
    ) -> PySide2.QtRemoteObjects.QRemoteObjectPendingCall:
        ...

    def isFinished(self) -> bool:
        """
        **bool QRemoteObjectPendingCall::isFinished() const**

        Returns true if the remote call has finished, false otherwise.

        A finished call will include a **returnValue**  or **error** .
        """
        ...

    def returnValue(self) -> typing.Any:
        """
        **QVariant QRemoteObjectPendingCall::returnValue() const**

        Returns the return value of the remote call.

        returnValue will only be valid when the remote call has finished and there are no **error** s.
        """
        ...

    def waitForFinished(self, timeout: int = ...) -> bool:
        """
        **bool QRemoteObjectPendingCall::waitForFinished(int timeout = 30000)**

        Blocks for up to **timeout** milliseconds, until the remote call has finished.

        Returns `true` on success, `false` otherwise.
        """
        ...
