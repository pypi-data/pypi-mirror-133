"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtXml

bytes = str


class QDomText(PySide2.QtXml.QDomCharacterData):
    """
    **Detailed Description**

    You can split the text in a QDomText object over two QDomText objecs with **splitText** ().

    For further information about the Document Object Model see **Level 1**  and **Level 2 Core** . For a more general introduction of the DOM implementation see the **QDomDocument**  documentation.
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QDomText::QDomText()**

        Constructs an empty QDomText object.

        To construct a QDomText with content, use **QDomDocument::createTextNode** ().
        """
        ...

    @typing.overload
    def __init__(self, x: PySide2.QtXml.QDomText) -> None:
        """
        **QDomText::QDomText()**

        Constructs an empty QDomText object.

        To construct a QDomText with content, use **QDomDocument::createTextNode** ().
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def nodeType(self) -> PySide2.QtXml.QDomNode.NodeType:
        """
        **QDomNode::NodeType QDomText::nodeType() const**

        Returns `TextNode`.
        """
        ...

    def splitText(self, offset: int) -> PySide2.QtXml.QDomText:
        """
        **QDomText QDomText::splitText(int offset )**

        Splits this DOM text object into two **QDomText**  objects. This object keeps its first **offset** characters and the second (newly created) object is inserted into the document tree after this object with the remaining characters.

        The function returns the newly created object.

        **See also** **QDomNode::normalize** ().
        """
        ...
