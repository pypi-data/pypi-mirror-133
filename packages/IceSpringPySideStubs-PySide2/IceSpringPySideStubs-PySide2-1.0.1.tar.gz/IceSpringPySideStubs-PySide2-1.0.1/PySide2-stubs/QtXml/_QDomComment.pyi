"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtXml

bytes = str


class QDomComment(PySide2.QtXml.QDomCharacterData):
    """
    **Detailed Description**

    A comment in the parsed XML such as this:

    <!-- this is a comment -->

    is represented by QDomComment objects in the parsed Dom tree.

    For further information about the Document Object Model see **Level 1**  and **Level 2 Core** . For a more general introduction of the DOM implementation see the **QDomDocument**  documentation.
    """

    @typing.overload
    def __init__(self) -> None:
        """
        **QDomComment::QDomComment()**

        Constructs an empty comment. To construct a comment with content, use the **QDomDocument::createComment** () function.
        """
        ...

    @typing.overload
    def __init__(self, x: PySide2.QtXml.QDomComment) -> None:
        """
        **QDomComment::QDomComment()**

        Constructs an empty comment. To construct a comment with content, use the **QDomDocument::createComment** () function.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...

    def nodeType(self) -> PySide2.QtXml.QDomNode.NodeType:
        """
        **QDomNode::NodeType QDomComment::nodeType() const**

        Returns `CommentNode`.
        """
        ...
