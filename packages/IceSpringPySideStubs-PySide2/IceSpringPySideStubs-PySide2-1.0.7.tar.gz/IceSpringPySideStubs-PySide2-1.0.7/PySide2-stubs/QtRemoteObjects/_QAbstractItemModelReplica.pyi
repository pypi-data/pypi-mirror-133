"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtRemoteObjects

bytes = str


class QAbstractItemModelReplica(PySide2.QtCore.QAbstractItemModel):
    def availableRoles(self) -> typing.List:
        ...

    def columnCount(self, parent: PySide2.QtCore.QModelIndex = ...) -> int:
        ...

    def data(self, index: PySide2.QtCore.QModelIndex, role: int = ...) -> typing.Any:
        ...

    def flags(self, index: PySide2.QtCore.QModelIndex) -> PySide2.QtCore.Qt.ItemFlags:
        ...

    def hasChildren(self, parent: PySide2.QtCore.QModelIndex = ...) -> bool:
        ...

    def hasData(self, index: PySide2.QtCore.QModelIndex, role: int) -> bool:
        ...

    def headerData(
        self, section: int, orientation: PySide2.QtCore.Qt.Orientation, role: int
    ) -> typing.Any:
        ...

    def index(
        self, row: int, column: int, parent: PySide2.QtCore.QModelIndex = ...
    ) -> PySide2.QtCore.QModelIndex:
        ...

    def isInitialized(self) -> bool:
        ...

    @typing.overload
    def parent(self) -> PySide2.QtCore.QObject:
        ...

    @typing.overload
    def parent(self, index: PySide2.QtCore.QModelIndex) -> PySide2.QtCore.QModelIndex:
        ...

    def roleNames(self) -> typing.Dict:
        ...

    def rowCount(self, parent: PySide2.QtCore.QModelIndex = ...) -> int:
        ...

    def selectionModel(self) -> PySide2.QtCore.QItemSelectionModel:
        ...

    def setData(
        self, index: PySide2.QtCore.QModelIndex, value: typing.Any, role: int = ...
    ) -> bool:
        ...
