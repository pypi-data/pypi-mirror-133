"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtCore, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore

bytes = str


class QParallelAnimationGroup(PySide2.QtCore.QAnimationGroup):
    """
    https://doc.qt.io/qt-5/qparallelanimationgroup.html

    **Detailed Description**

    QParallelAnimationGroup--a **container for animations** \\--starts all its
    animations when it is **started**  itself, i.e., runs all animations in
    parallel. The animation group finishes when the longest lasting animation
    has finished.

    You can treat QParallelAnimationGroup as any other **QAbstractAnimation** ,
    e.g., pause, resume, or add it to other animation groups.

    **QParallelAnimationGroup**  *group = new **QParallelAnimationGroup** ;
    group->addAnimation(anim1);
            group->addAnimation(anim2);
    group->start();

    In this example, `anim1` and `anim2` are two **QPropertyAnimation** s that
    have already been set up.

    **See also** **QAnimationGroup** , **QPropertyAnimation** , and **The
    Animation Framework** .
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#QParallelAnimationGr
        oup

        **QParallelAnimationGroup::QParallelAnimationGroup(QObject * parent =
        nullptr)**

        Constructs a QParallelAnimationGroup. **parent** is passed to
        **QObject** 's constructor.
        """
        ...

    def duration(self) -> int:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#duration

        **[override virtual] int QParallelAnimationGroup::duration() const**

        Reimplements: **QAbstractAnimation::duration** () const.
        """
        ...

    def event(self, event: PySide2.QtCore.QEvent) -> bool:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#event

        **[override virtual protected] bool
        QParallelAnimationGroup::event(QEvent * event )**

        Reimplements: **QAnimationGroup::event** (QEvent *event).
        """
        ...

    def updateCurrentTime(self, currentTime: int) -> None:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#updateCurrentTime

        **[override virtual protected] void
        QParallelAnimationGroup::updateCurrentTime(int currentTime )**

        Reimplements: **QAbstractAnimation::updateCurrentTime** (int
        currentTime).
        """
        ...

    def updateDirection(
        self, direction: PySide2.QtCore.QAbstractAnimation.Direction
    ) -> None:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#updateDirection

        **[override virtual protected] void
        QParallelAnimationGroup::updateDirection(QAbstractAnimation::Direction
        direction )**

        Reimplements: **QAbstractAnimation::updateDirection**
        (QAbstractAnimation::Direction direction).
        """
        ...

    def updateState(
        self,
        newState: PySide2.QtCore.QAbstractAnimation.State,
        oldState: PySide2.QtCore.QAbstractAnimation.State,
    ) -> None:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#updateState

        **[override virtual protected] void
        QParallelAnimationGroup::updateState(QAbstractAnimation::State newState
        , QAbstractAnimation::State oldState )**

        Reimplements: **QAbstractAnimation::updateState**
        (QAbstractAnimation::State newState, QAbstractAnimation::State
        oldState).
        """
        ...
