"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtMultimedia, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtNetwork
import PySide2.QtMultimediaWidgets
import PySide2.QtMultimedia

bytes = str


class QVideoEncoderSettingsControl(PySide2.QtMultimedia.QMediaControl):
    """
    https://doc.qt.io/qt-5/qvideoencodersettingscontrol.html

    **Detailed Description**

    If a **QMediaService**  supports encoding video data it will implement
    QVideoEncoderSettingsControl. This control provides information about the
    limits of restricted video encoder options and allows the selection of a set
    of video encoder settings as specified in a **QVideoEncoderSettings**
    object.

    The functionality provided by this control is exposed to application code
    through the **QMediaRecorder**  class.

    The interface name of QVideoEncoderSettingsControl is `org.qt-
    project.qt.videoencodersettingscontrol/5.0` as defined in
    **QVideoEncoderSettingsControl_iid** .

    **See also** **QMediaRecorder** , **QVideoEncoderSettings** , and
    **QMediaService::requestControl** ().
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qvideoencodersettingscontrol.html#QVideoEncoderSe
        ttingsControl

        **[protected]
        QVideoEncoderSettingsControl::QVideoEncoderSettingsControl(QObject *
        parent = nullptr)**

        Create a new video encoder settings control object with the given
        **parent**.
        """
        ...

    def setVideoSettings(
        self, settings: PySide2.QtMultimedia.QVideoEncoderSettings
    ) -> None:
        """
        https://doc.qt.io/qt-5/qvideoencodersettingscontrol.html#setVideoSetting
        s

        **[pure virtual] void
        QVideoEncoderSettingsControl::setVideoSettings(const
        QVideoEncoderSettings & settings )**

        Sets the selected video encoder **settings**.

        **See also** **videoSettings** ().
        """
        ...

    def supportedVideoCodecs(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qvideoencodersettingscontrol.html#supportedVideoC
        odecs

        **[pure virtual] QStringList
        QVideoEncoderSettingsControl::supportedVideoCodecs() const**

        Returns the list of supported video codecs.
        """
        ...

    def videoCodecDescription(self, codec: str) -> str:
        """
        https://doc.qt.io/qt-5/qvideoencodersettingscontrol.html#videoCodecDescr
        iption

        **[pure virtual] QString
        QVideoEncoderSettingsControl::videoCodecDescription(const QString &
        codec ) const**

        Returns a description of a video **codec**.
        """
        ...

    def videoSettings(self) -> PySide2.QtMultimedia.QVideoEncoderSettings:
        """
        https://doc.qt.io/qt-5/qvideoencodersettingscontrol.html#videoSettings

        **[pure virtual] QVideoEncoderSettings
        QVideoEncoderSettingsControl::videoSettings() const**

        Returns the video encoder settings.

        The returned value may be different tha passed to
        **QVideoEncoderSettingsControl::setVideoSettings** () if the settings
        contains the default or undefined parameters. In this case if the
        undefined parameters are already resolved, they should be returned.

        **See also** **setVideoSettings** ().
        """
        ...
