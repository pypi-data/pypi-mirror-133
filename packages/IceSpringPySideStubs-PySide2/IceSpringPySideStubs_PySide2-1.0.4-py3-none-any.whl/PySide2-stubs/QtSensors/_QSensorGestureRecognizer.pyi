"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com'Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtSensors

bytes = str


class QSensorGestureRecognizer(PySide2.QtCore.QObject):
    """
    https://doc.qt.io/qt-5/qsensorgesturerecognizer.html

    **Detailed Description**

    **QSensorGesture**  recognizer developers should sub-class this to implement
    their own recognizer.

    All sensor gesture recognizers have a detected(**QString** ) signal.
    Implementors can use this and send recognizer specific gestures, such as
    detected("shake_left") or implement custom signals such as shakeLeft().

    These custom signals will be available in the **QSensorGesture**  object at
    runtime.

    **See also** **QSensorGestureRecognizer::gestureSignals** ().
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#QSensorGestureRecog
        nizer

        **QSensorGestureRecognizer::QSensorGestureRecognizer(QObject * parent =
        Q_NULLPTR)**

        Constructs the QSensorGestureRecognizer with **parent** as parent.
        """
        ...

    def create(self) -> None:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#create

        **[pure virtual protected] void QSensorGestureRecognizer::create()**

        Called by **QSensorGesture**  object constructor to create the
        recognizers backend.

        Implementors would use this to instantiate QSensors and connect signals.
        """
        ...

    def createBackend(self) -> None:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#createBackend

        **void QSensorGestureRecognizer::createBackend()**

        Calls **QSensorGestureRecognizer::create** () if the recognizer is
        valid.
        """
        ...

    def gestureSignals(self) -> typing.List:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#gestureSignals

        **QStringList QSensorGestureRecognizer::gestureSignals() const**

        Returns a list of signals that this recognizer supports.

        Note that all signals declared will be exported to the
        **QSensorGesture**  object. If you need to use signals that are not
        exported, you should use a private class to do so.
        """
        ...

    def id(self) -> str:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#id

        **[pure virtual] QString QSensorGestureRecognizer::id() const**

        Returns the identifier for this recognizer.
        """
        ...

    def isActive(self) -> bool:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#isActive

        **[pure virtual] bool QSensorGestureRecognizer::isActive()**

        Returns true if this recognizer is active, otherwise false.
        """
        ...

    def start(self) -> bool:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#start

        **[pure virtual protected] bool QSensorGestureRecognizer::start()**

        Called by **QSensorGesture::startDetection** () to start this
        recognizer. Implementors should start the sensors. Returns true if the
        operation is successful.
        """
        ...

    def startBackend(self) -> None:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#startBackend

        **void QSensorGestureRecognizer::startBackend()**

        Calls **QSensorGestureRecognizer::start** () if the recognizer isn't
        already initialized. This is called by the **QSensorGesture**  object,
        so please use that instead.

        **See also** **QSensorGesture::startDetection** ().
        """
        ...

    def stop(self) -> bool:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#stop

        **[pure virtual protected] bool QSensorGestureRecognizer::stop()**

        Called by **QSensorGesture::stopDetection** () to stop this recognizer.
        Returns true if the call succeeds, otherwise false.

        Implementors should stop the sensors.
        """
        ...

    def stopBackend(self) -> None:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#stopBackend

        **void QSensorGestureRecognizer::stopBackend()**

        Calls **QSensorGestureRecognizer::stop** () if no other clients are
        using it. This is called by the **QSensorGesture**  object, so please
        use that instead.

        **See also** **QSensorGesture::stopDetection** ().
        """
        ...

    @property
    def detected(self) -> PySide2.QtCore.SignalInstance:
        """
        https://doc.qt.io/qt-5/qsensorgesturerecognizer.html#detected

        **[signal] void QSensorGestureRecognizer::detected( const QString &)**

        Signals when a gesture is recognized. Implementors can use this signal
        to send recognizer-specific gestures, such as `detected("shake_left")`
        or implement custom signals such as `shakeLeft()`.

        The custom signals are available in the **QSensorGesture**  object at
        runtime.
        """
        ...
