"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore
import PySide2.QtNetwork
import PySide2.QtQml

bytes = str


class QQmlImageProviderBase(object):
    """
    https://doc.qt.io/qt-5/qqmlimageproviderbase.html

    **Detailed Description**

    Image providers must be registered with the QML engine. The only information the QML engine knows about image providers is the type of image data they provide. To use an image provider to acquire image data, you must cast the QQmlImageProviderBase pointer to a **QQuickImageProvider**  pointer.

    **See also** **QQuickImageProvider**  and **QQuickTextureFactory** .
    """

    Image: QQmlImageProviderBase = ...
    ForceAsynchronousImageLoading: QQmlImageProviderBase = ...
    Pixmap: QQmlImageProviderBase = ...
    Texture: QQmlImageProviderBase = ...
    Invalid: QQmlImageProviderBase = ...
    ImageResponse: QQmlImageProviderBase = ...

    class Flag(object):
        ForceAsynchronousImageLoading: QQmlImageProviderBase.Flag = ...

    class Flags(object):
        ...

    class ImageType(object):
        Image: QQmlImageProviderBase.ImageType = ...
        Pixmap: QQmlImageProviderBase.ImageType = ...
        Texture: QQmlImageProviderBase.ImageType = ...
        Invalid: QQmlImageProviderBase.ImageType = ...
        ImageResponse: QQmlImageProviderBase.ImageType = ...

    def flags(self) -> PySide2.QtQml.QQmlImageProviderBase.Flags:
        """
        https://doc.qt.io/qt-5/qqmlimageproviderbase.html#flags

        **[pure virtual] QQmlImageProviderBase::Flags QQmlImageProviderBase::flags() const**

        Implement this to return the properties of this image provider.
        """
        ...

    def imageType(self) -> PySide2.QtQml.QQmlImageProviderBase.ImageType:
        """
        https://doc.qt.io/qt-5/qqmlimageproviderbase.html#imageType

        **[pure virtual] QQmlImageProviderBase::ImageType QQmlImageProviderBase::imageType() const**

        Implement this method to return the image type supported by this image provider.
        """
        ...
