"""
PySide2 stub files generated by **IceSpringPySideStubs**

Home page: https://github.com/baijifeilong/IceSpringPySideStubs

Generated by BaiJiFeiLong@gmail.com

Licence: GPL-3
"""
import typing
import PySide2
import PySide2.QtCore

bytes = str


class QTransposeProxyModel(PySide2.QtCore.QAbstractProxyModel):
    """
    https://doc.qt.io/qt-5/qtransposeproxymodel.html

    **Detailed Description**

    This model will make the rows of the source model become columns of the proxy model and vice-versa.

    If the model is a tree, the parents will be transposed as well. For example, if an index in the source model had parent `index(2,0)`, it will have parent `index(0,2)` in the proxy.
    """

    def __init__(self, parent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#QTransposeProxyModel-1

        **QTransposeProxyModel::QTransposeProxyModel(QObject * parent = nullptr)**

        Constructs a new proxy model with the given **parent**.
        """
        ...

    def columnCount(self, parent: PySide2.QtCore.QModelIndex = ...) -> int:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#columnCount

        **[override virtual] int QTransposeProxyModel::columnCount(const QModelIndex & parent = QModelIndex()) const**

        Reimplements: **QAbstractItemModel::columnCount** (const QModelIndex &parent) const.
        """
        ...

    def headerData(
        self, section: int, orientation: PySide2.QtCore.Qt.Orientation, role: int = ...
    ) -> typing.Any:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#headerData

        **[override virtual] QVariant QTransposeProxyModel::headerData(int section , Qt::Orientation orientation , int role = Qt::DisplayRole) const**

        Reimplements: **QAbstractProxyModel::headerData** (int section, Qt::Orientation orientation, int role) const.

        **See also** **setHeaderData** ().
        """
        ...

    def index(
        self, row: int, column: int, parent: PySide2.QtCore.QModelIndex = ...
    ) -> PySide2.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#index

        **[override virtual] QModelIndex QTransposeProxyModel::index(int row , int column , const QModelIndex & parent = QModelIndex()) const**

        Reimplements: **QAbstractItemModel::index** (int row, int column, const QModelIndex &parent) const.
        """
        ...

    def insertColumns(
        self, column: int, count: int, parent: PySide2.QtCore.QModelIndex = ...
    ) -> bool:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#insertColumns

        **[override virtual] bool QTransposeProxyModel::insertColumns(int column , int count , const QModelIndex & parent = QModelIndex())**

        Reimplements: **QAbstractItemModel::insertColumns** (int column, int count, const QModelIndex &parent).
        """
        ...

    def insertRows(
        self, row: int, count: int, parent: PySide2.QtCore.QModelIndex = ...
    ) -> bool:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#insertRows

        **[override virtual] bool QTransposeProxyModel::insertRows(int row , int count , const QModelIndex & parent = QModelIndex())**

        Reimplements: **QAbstractItemModel::insertRows** (int row, int count, const QModelIndex &parent).
        """
        ...

    def itemData(self, index: PySide2.QtCore.QModelIndex) -> typing.Dict:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#itemData

        **[override virtual] QMap<int, QVariant> QTransposeProxyModel::itemData(const QModelIndex & index ) const**

        Reimplements: **QAbstractProxyModel::itemData** (const QModelIndex &proxyIndex) const.

        **See also** **setItemData** ().
        """
        ...

    def mapFromSource(
        self, sourceIndex: PySide2.QtCore.QModelIndex
    ) -> PySide2.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#mapFromSource

        **[override virtual] QModelIndex QTransposeProxyModel::mapFromSource(const QModelIndex & sourceIndex ) const**

        Reimplements: **QAbstractProxyModel::mapFromSource** (const QModelIndex &sourceIndex) const.
        """
        ...

    def mapToSource(
        self, proxyIndex: PySide2.QtCore.QModelIndex
    ) -> PySide2.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#mapToSource

        **[override virtual] QModelIndex QTransposeProxyModel::mapToSource(const QModelIndex & proxyIndex ) const**

        Reimplements: **QAbstractProxyModel::mapToSource** (const QModelIndex &proxyIndex) const.
        """
        ...

    def moveColumns(
        self,
        sourceParent: PySide2.QtCore.QModelIndex,
        sourceColumn: int,
        count: int,
        destinationParent: PySide2.QtCore.QModelIndex,
        destinationChild: int,
    ) -> bool:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#moveColumns

        **[override virtual] bool QTransposeProxyModel::moveColumns(const QModelIndex & sourceParent , int sourceRow , int count , const QModelIndex & destinationParent , int destinationChild )**

        Reimplements: **QAbstractItemModel::moveColumns** (const QModelIndex &sourceParent, int sourceColumn, int count, const QModelIndex &destinationParent, int destinationChild).
        """
        ...

    def moveRows(
        self,
        sourceParent: PySide2.QtCore.QModelIndex,
        sourceRow: int,
        count: int,
        destinationParent: PySide2.QtCore.QModelIndex,
        destinationChild: int,
    ) -> bool:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#moveRows

        **[override virtual] bool QTransposeProxyModel::moveRows(const QModelIndex & sourceParent , int sourceRow , int count , const QModelIndex & destinationParent , int destinationChild )**

        Reimplements: **QAbstractItemModel::moveRows** (const QModelIndex &sourceParent, int sourceRow, int count, const QModelIndex &destinationParent, int destinationChild).
        """
        ...

    @typing.overload
    def parent(self) -> PySide2.QtCore.QObject:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#parent

        **[override virtual] QModelIndex QTransposeProxyModel::parent(const QModelIndex & index ) const**

        Reimplements: **QAbstractItemModel::parent** (const QModelIndex &index) const.
        """
        ...

    @typing.overload
    def parent(self, index: PySide2.QtCore.QModelIndex) -> PySide2.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#parent

        **[override virtual] QModelIndex QTransposeProxyModel::parent(const QModelIndex & index ) const**

        Reimplements: **QAbstractItemModel::parent** (const QModelIndex &index) const.
        """
        ...

    def removeColumns(
        self, column: int, count: int, parent: PySide2.QtCore.QModelIndex = ...
    ) -> bool:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#removeColumns

        **[override virtual] bool QTransposeProxyModel::removeColumns(int column , int count , const QModelIndex & parent = QModelIndex())**

        Reimplements: **QAbstractItemModel::removeColumns** (int column, int count, const QModelIndex &parent).
        """
        ...

    def removeRows(
        self, row: int, count: int, parent: PySide2.QtCore.QModelIndex = ...
    ) -> bool:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#removeRows

        **[override virtual] bool QTransposeProxyModel::removeRows(int row , int count , const QModelIndex & parent = QModelIndex())**

        Reimplements: **QAbstractItemModel::removeRows** (int row, int count, const QModelIndex &parent).
        """
        ...

    def rowCount(self, parent: PySide2.QtCore.QModelIndex = ...) -> int:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#rowCount

        **[override virtual] int QTransposeProxyModel::rowCount(const QModelIndex & parent = QModelIndex()) const**

        Reimplements: **QAbstractItemModel::rowCount** (const QModelIndex &parent) const.
        """
        ...

    def setHeaderData(
        self,
        section: int,
        orientation: PySide2.QtCore.Qt.Orientation,
        value: typing.Any,
        role: int = ...,
    ) -> bool:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#setHeaderData

        **[override virtual] bool QTransposeProxyModel::setHeaderData(int section , Qt::Orientation orientation , const QVariant & value , int role = Qt::EditRole)**

        Reimplements: **QAbstractProxyModel::setHeaderData** (int section, Qt::Orientation orientation, const QVariant &value, int role).

        **See also** **headerData** ().
        """
        ...

    def setItemData(
        self, index: PySide2.QtCore.QModelIndex, roles: typing.Dict
    ) -> bool:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#setItemData

        **[override virtual] bool QTransposeProxyModel::setItemData(const QModelIndex & index , const QMap<int, QVariant> & roles )**

        Reimplements: **QAbstractProxyModel::setItemData** (const QModelIndex &index, const QMap<int, QVariant> &roles).

        **See also** **itemData** ().
        """
        ...

    def setSourceModel(self, newSourceModel: PySide2.QtCore.QAbstractItemModel) -> None:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#setSourceModel

        **[override virtual] void QTransposeProxyModel::setSourceModel(QAbstractItemModel * newSourceModel )**

        Reimplements: **QAbstractProxyModel::setSourceModel** (QAbstractItemModel *sourceModel).
        """
        ...

    def sort(self, column: int, order: PySide2.QtCore.Qt.SortOrder = ...) -> None:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#sort

        **[override virtual] void QTransposeProxyModel::sort(int column , Qt::SortOrder order = Qt::AscendingOrder)**

        Reimplements: **QAbstractProxyModel::sort** (int column, Qt::SortOrder order).

        This method will perform no action. Use a **QSortFilterProxyModel**  on top of this one if you require sorting.
        """
        ...

    def span(self, index: PySide2.QtCore.QModelIndex) -> PySide2.QtCore.QSize:
        """
        https://doc.qt.io/qt-5/qtransposeproxymodel.html#span

        **[override virtual] QSize QTransposeProxyModel::span(const QModelIndex & index ) const**

        Reimplements: **QAbstractProxyModel::span** (const QModelIndex &index) const.
        """
        ...
