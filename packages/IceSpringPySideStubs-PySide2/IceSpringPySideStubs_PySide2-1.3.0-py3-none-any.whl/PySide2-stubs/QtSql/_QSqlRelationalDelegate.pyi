"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

Licence: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtSql, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore
import PySide2.QtWidgets
import PySide2.QtSql

bytes = str


class QSqlRelationalDelegate(PySide2.QtWidgets.QItemDelegate):
    """
    https://doc.qt.io/qt-5/qsqlrelationaldelegate.html

    **Detailed Description**

    Unlike the default delegate, QSqlRelationalDelegate provides a combobox for
    fields that are foreign keys into other tables. To use the class, simply
    call **QAbstractItemView::setItemDelegate** () on the view with an instance
    of QSqlRelationalDelegate:

    std::unique_ptr<**QTableView** > view{new **QTableView** };
    view->setModel(model);
            view->setItemDelegate(new
    **QSqlRelationalDelegate** (view.get()));

    The **Relational Table Model**  example (shown below) illustrates how to use
    QSqlRelationalDelegate in conjunction with **QSqlRelationalTableModel**  to
    provide tables with foreign key support.

    ![](images/relationaltable.png)

    **See also** **QSqlRelationalTableModel**  and **Model/View Programming** .
    """

    def __init__(self, aParent: typing.Optional[PySide2.QtCore.QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qsqlrelationaldelegate.html#QSqlRelationalDelegat
        e

        **QSqlRelationalDelegate::QSqlRelationalDelegate(QObject * parent =
        nullptr)**

        Constructs a QSqlRelationalDelegate object with the given **parent**.
        """
        ...

    def createEditor(
        self,
        aParent: PySide2.QtWidgets.QWidget,
        option: PySide2.QtWidgets.QStyleOptionViewItem,
        index: PySide2.QtCore.QModelIndex,
    ) -> PySide2.QtWidgets.QWidget:
        """
        https://doc.qt.io/qt-5/qsqlrelationaldelegate.html#createEditor

        **[override virtual] QWidget
        *QSqlRelationalDelegate::createEditor(QWidget * parent , const
        QStyleOptionViewItem & option , const QModelIndex & index ) const**

        Reimplements: **QItemDelegate::createEditor** (QWidget *parent, const
        QStyleOptionViewItem &option, const QModelIndex &index) const.
        """
        ...

    def setEditorData(
        self, editor: PySide2.QtWidgets.QWidget, index: PySide2.QtCore.QModelIndex
    ) -> None:
        ...

    def setModelData(
        self,
        editor: PySide2.QtWidgets.QWidget,
        model: PySide2.QtCore.QAbstractItemModel,
        index: PySide2.QtCore.QModelIndex,
    ) -> None:
        """
        https://doc.qt.io/qt-5/qsqlrelationaldelegate.html#setModelData

        **[override virtual] void QSqlRelationalDelegate::setModelData(QWidget *
        editor , QAbstractItemModel * model , const QModelIndex & index )
        const**

        Reimplements: **QItemDelegate::setModelData** (QWidget *editor,
        QAbstractItemModel *model, const QModelIndex &index) const.
        """
        ...
