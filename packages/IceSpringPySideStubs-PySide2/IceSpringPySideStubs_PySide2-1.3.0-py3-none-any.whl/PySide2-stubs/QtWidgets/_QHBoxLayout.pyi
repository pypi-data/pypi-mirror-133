"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

Licence: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide2.QtWidgets, except for defaults which are replaced by "...".
"""
import PySide2
import typing
import PySide2.QtCore
import PySide2.QtGui
import PySide2.QtWidgets

bytes = str


class QHBoxLayout(PySide2.QtWidgets.QBoxLayout):
    """
    https://doc.qt.io/qt-5/qhboxlayout.html

    **Detailed Description**

    This class is used to construct horizontal box layout objects. See
    **QBoxLayout**  for details.

    The simplest use of the class is like this:

    **QWidget**  *window = new **QWidget** ;
            **QPushButton**  *button1 =
    new **QPushButton** ("One");
            **QPushButton**  *button2 = new
    **QPushButton** ("Two");
            **QPushButton**  *button3 = new
    **QPushButton** ("Three");
            **QPushButton**  *button4 = new
    **QPushButton** ("Four");
            **QPushButton**  *button5 = new
    **QPushButton** ("Five");

            **QHBoxLayout**  *layout = new
    **QHBoxLayout** ;
            layout->addWidget(button1);
    layout->addWidget(button2);
            layout->addWidget(button3);
    layout->addWidget(button4);
            layout->addWidget(button5);
    window->setLayout(layout);
            window->show();

    First, we create the widgets we want in the layout. Then, we create the
    QHBoxLayout object and add the widgets into the layout. Finally, we call
    **QWidget::setLayout** () to install the QHBoxLayout object onto the widget.
    At that point, the widgets in the layout are reparented to have `window` as
    their parent.

    ![Horizontal box layout with five child widgets](images/qhboxlayout-
    with-5-children.png)

    **See also** **QVBoxLayout** , **QGridLayout** , **QStackedLayout** ,
    **Layout Management** , and **Basic Layouts Example** .
    """

    @typing.overload
    def __init__(self) -> None:
        """
        https://doc.qt.io/qt-5/qhboxlayout.html#QHBoxLayout

        **QHBoxLayout::QHBoxLayout()**

        Constructs a new horizontal box. You must add it to another layout.
        """
        ...

    @typing.overload
    def __init__(self, parent: PySide2.QtWidgets.QWidget) -> None:
        """
        https://doc.qt.io/qt-5/qhboxlayout.html#QHBoxLayout-1

        **QHBoxLayout::QHBoxLayout(QWidget * parent )**

        Constructs a new top-level horizontal box with parent **parent**.
        """
        ...
