"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

License: MIT
"""
import typing
from PyQt5 import QtCore
from PyQt5 import sip


class QQmlError(sip.simplewrapper):
    """
    https://doc.qt.io/qt-5/qqmlerror.html

    **Detailed Description**

    QQmlError includes a textual description of the error, as well as location
    information (the file, line, and column). The **toString** () method creates
    a single-line, human-readable string containing all of this information, for
    example:

    file:///home/user/test.qml:7:8: Invalid property assignment: double expected

    You can use **qDebug** (), **qInfo** (), or **qWarning** () to output errors
    to the console. This method will attempt to open the file indicated by the
    error and include additional contextual information.

    file:///home/user/test.qml:7:8: Invalid property assignment: double expected
    y: "hello"
                   ^

    **See also** **QQuickView::errors** () and **QQmlComponent::errors** ().
    """

    @typing.overload
    def __init__(self) -> None:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#QQmlError

        **QQmlError::QQmlError()**

        Creates an empty error object.
        """
        ...

    @typing.overload
    def __init__(self, a0: "QQmlError") -> None:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#QQmlError-1

        **QQmlError::QQmlError(const QQmlError & other )**

        Creates a copy of **other**.
        """
        ...

    def setMessageType(self, messageType: QtCore.QtMsgType) -> None:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#setMessageType

        **void QQmlError::setMessageType(QtMsgType messageType )**

        Sets the **messageType** for this message. The message type determines
        which **QDebug**  handlers are responsible for receiving the message.

        This function was introduced in Qt 5.9.

        **See also** **messageType** ().
        """
        ...

    def messageType(self) -> QtCore.QtMsgType:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#messageType

        **QtMsgType QQmlError::messageType() const**

        Returns the message type.

        This function was introduced in Qt 5.9.

        **See also** **setMessageType** ().
        """
        ...

    def setObject(self, a0: QtCore.QObject) -> None:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#setObject

        **void QQmlError::setObject(QObject * object )**

        Sets the nearest **object** where this error occurred.

        **See also** **object** ().
        """
        ...

    def object(self) -> QtCore.QObject:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#object

        **QObject *QQmlError::object() const**

        Returns the nearest object where this error occurred. Exceptions in
        bound property expressions set this to the object to which the property
        belongs. It will be 0 for all other exceptions.

        **See also** **setObject** ().
        """
        ...

    def toString(self) -> str:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#toString

        **QString QQmlError::toString() const**

        Returns the error as a human readable string.
        """
        ...

    def setColumn(self, a0: int) -> None:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#setColumn

        **void QQmlError::setColumn(int column )**

        Sets the error **column** number.

        **See also** **column** ().
        """
        ...

    def column(self) -> int:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#column

        **int QQmlError::column() const**

        Returns the error column number.

        **See also** **setColumn** ().
        """
        ...

    def setLine(self, a0: int) -> None:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#setLine

        **void QQmlError::setLine(int line )**

        Sets the error **line** number.

        **See also** **line** ().
        """
        ...

    def line(self) -> int:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#line

        **int QQmlError::line() const**

        Returns the error line number.

        **See also** **setLine** ().
        """
        ...

    def setDescription(self, a0: str) -> None:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#setDescription

        **void QQmlError::setDescription(const QString & description )**

        Sets the error **description**.

        **See also** **description** ().
        """
        ...

    def description(self) -> str:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#description

        **QString QQmlError::description() const**

        Returns the error description.

        **See also** **setDescription** ().
        """
        ...

    def setUrl(self, a0: QtCore.QUrl) -> None:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#setUrl

        **void QQmlError::setUrl(const QUrl & url )**

        Sets the **url** for the file that caused this error.

        **See also** **url** ().
        """
        ...

    def url(self) -> QtCore.QUrl:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#url

        **QUrl QQmlError::url() const**

        Returns the url for the file that caused this error.

        **See also** **setUrl** ().
        """
        ...

    def isValid(self) -> bool:
        """
        https://doc.qt.io/qt-5/qqmlerror.html#isValid

        **bool QQmlError::isValid() const**

        Returns true if this error is valid, otherwise false.
        """
        ...
