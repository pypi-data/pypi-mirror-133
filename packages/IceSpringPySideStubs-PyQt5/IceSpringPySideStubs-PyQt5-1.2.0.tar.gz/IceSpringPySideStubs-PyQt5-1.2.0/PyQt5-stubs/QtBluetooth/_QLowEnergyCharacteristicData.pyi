"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
import typing
import PyQt5.sip
from PyQt5 import QtCore
from PyQt5.QtBluetooth import *


class QLowEnergyCharacteristicData(PyQt5.sip.wrapper):
    """
    https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html

    **Detailed Description**

    An Object of this class provides a characteristic to be added to a
    **QLowEnergyServiceData**  object via
    **QLowEnergyServiceData::addCharacteristic** ().

    **See also** **QLowEnergyServiceData**  and
    **QLowEnergyController::addService** .
    """

    @typing.overload
    def __init__(self) -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#QLowEnergyChara
        cteristicData

        **QLowEnergyCharacteristicData::QLowEnergyCharacteristicData()**

        Creates a new invalid object of this class.
        """
        ...

    @typing.overload
    def __init__(self, other: "QLowEnergyCharacteristicData") -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#QLowEnergyChara
        cteristicData-1

        **QLowEnergyCharacteristicData::QLowEnergyCharacteristicData(const
        QLowEnergyCharacteristicData & other )**

        Constructs a new object of this class that is a copy of **other**.
        """
        ...

    def swap(self, other: "QLowEnergyCharacteristicData") -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#swap

        **void QLowEnergyCharacteristicData::swap(QLowEnergyCharacteristicData &
        other )**

        Swaps this object with **other**.
        """
        ...

    def isValid(self) -> bool:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#isValid

        **bool QLowEnergyCharacteristicData::isValid() const**

        Returns true if and only if this characteristic is valid, that is, it
        has a non-null UUID.
        """
        ...

    def maximumValueLength(self) -> int:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#maximumValueLen
        gth

        **int QLowEnergyCharacteristicData::maximumValueLength() const**

        Returns the maximum length in bytes that the value of this
        characteristic can have. By default, there is no limit beyond the
        constraints of the data type.
        """
        ...

    def minimumValueLength(self) -> int:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#minimumValueLen
        gth

        **int QLowEnergyCharacteristicData::minimumValueLength() const**

        Returns the minimum length in bytes that the value of this
        characteristic can have. The default is zero.
        """
        ...

    def setValueLength(self, minimum: int, maximum: int) -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#setValueLength

        **void QLowEnergyCharacteristicData::setValueLength(int minimum , int
        maximum )**

        Specifies **minimum** and **maximum** to be the smallest and largest
        length, respectively, that the value of this characteristic can have.
        The unit is bytes. If **minimum** and **maximum** are equal, the
        characteristic has a fixed-length value.
        """
        ...

    def writeConstraints(self) -> QBluetooth.AttAccessConstraints:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#writeConstraint
        s

        **QBluetooth::AttAccessConstraints
        QLowEnergyCharacteristicData::writeConstraints() const**

        Returns the constraints needed for a client to write the value of this
        characteristic. If **properties** () does not include either of
        **QLowEnergyCharacteristic::Write** ,
        **QLowEnergyCharacteristic::WriteNoResponse**  and
        **QLowEnergyCharacteristic::WriteSigned** , this value is irrelevant. By
        default, there are no write constraints.

        **See also** **setWriteConstraints** ().
        """
        ...

    def setWriteConstraints(
        self,
        constraints: typing.Union[
            QBluetooth.AttAccessConstraints, QBluetooth.AttAccessConstraint
        ],
    ) -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#setWriteConstra
        ints

        **void QLowEnergyCharacteristicData::setWriteConstraints(QBluetooth::Att
        AccessConstraints constraints )**

        Specifies that clients need to fulfill **constraints** to write the
        value of this characteristic.

        **See also** **writeConstraints** ().
        """
        ...

    def readConstraints(self) -> QBluetooth.AttAccessConstraints:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#readConstraints

        **QBluetooth::AttAccessConstraints
        QLowEnergyCharacteristicData::readConstraints() const**

        Returns the constraints needed for a client to read the value of this
        characteristic. If **properties** () does not include
        **QLowEnergyCharacteristic::Read** , this value is irrelevant. By
        default, there are no read constraints.

        **See also** **setReadConstraints** ().
        """
        ...

    def setReadConstraints(
        self,
        constraints: typing.Union[
            QBluetooth.AttAccessConstraints, QBluetooth.AttAccessConstraint
        ],
    ) -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#setReadConstrai
        nts

        **void QLowEnergyCharacteristicData::setReadConstraints(QBluetooth::AttA
        ccessConstraints constraints )**

        Specifies that clients need to fulfill **constraints** to read the value
        of this characteristic.

        **See also** **readConstraints** ().
        """
        ...

    def addDescriptor(self, descriptor: "QLowEnergyDescriptorData") -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#addDescriptor

        **void QLowEnergyCharacteristicData::addDescriptor(const
        QLowEnergyDescriptorData & descriptor )**

        Adds **descriptor** to the list of descriptors of this characteristic,
        if it is valid.

        **See also** **setDescriptors** ().
        """
        ...

    def setDescriptors(
        self, descriptors: typing.Iterable["QLowEnergyDescriptorData"]
    ) -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#setDescriptors

        **void QLowEnergyCharacteristicData::setDescriptors(const
        QList<QLowEnergyDescriptorData> & descriptors )**

        Sets the descriptors of this characteristic to **descriptors**. Only
        valid descriptors are considered.

        **See also** **descriptors** () and **addDescriptor** ().
        """
        ...

    def descriptors(self) -> typing.List["QLowEnergyDescriptorData"]:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#descriptors

        **QList<QLowEnergyDescriptorData>
        QLowEnergyCharacteristicData::descriptors() const**

        Returns the descriptors of this characteristic.

        **See also** **setDescriptors** ().
        """
        ...

    def setProperties(
        self,
        properties: typing.Union[
            QLowEnergyCharacteristic.PropertyTypes,
            QLowEnergyCharacteristic.PropertyType,
        ],
    ) -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#setProperties

        **void QLowEnergyCharacteristicData::setProperties(QLowEnergyCharacteris
        tic::PropertyTypes properties )**

        Sets the properties of this characteristic to **properties**.

        **See also** **properties** ().
        """
        ...

    def properties(self) -> QLowEnergyCharacteristic.PropertyTypes:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#properties

        **QLowEnergyCharacteristic::PropertyTypes
        QLowEnergyCharacteristicData::properties() const**

        Returns the properties of this characteristic.

        **See also** **setProperties** ().
        """
        ...

    def setValue(
        self, value: typing.Union[QtCore.QByteArray, bytes, bytearray]
    ) -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#setValue

        **void QLowEnergyCharacteristicData::setValue(const QByteArray & value
        )**

        Sets the value of this characteristic to **value**.

        **See also** **value** ().
        """
        ...

    def value(self) -> QtCore.QByteArray:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#value

        **QByteArray QLowEnergyCharacteristicData::value() const**

        Returns the value of this characteristic.

        **See also** **setValue** ().
        """
        ...

    def setUuid(self, uuid: QBluetoothUuid) -> None:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#setUuid

        **void QLowEnergyCharacteristicData::setUuid(const QBluetoothUuid & uuid
        )**

        Sets the UUID of this characteristic to **uuid**.

        **See also** **uuid** ().
        """
        ...

    def uuid(self) -> QBluetoothUuid:
        """
        https://doc.qt.io/qt-5/qlowenergycharacteristicdata.html#uuid

        **QBluetoothUuid QLowEnergyCharacteristicData::uuid() const**

        Returns the UUID of this characteristic.

        **See also** **setUuid** ().
        """
        ...
