"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
import typing
import PyQt5.sip
from PyQt5.QtNetwork import *
from PyQt5 import sip


class QSsl(PyQt5.sip.simplewrapper):
    """
    https://doc.qt.io/qt-5/qssl.html

    **Detailed Description**
    """

    class SslOption(int):
        SslOptionDisableEmptyFragments: QSsl = ...
        SslOptionDisableSessionTickets: QSsl = ...
        SslOptionDisableCompression: QSsl = ...
        SslOptionDisableServerNameIndication: QSsl = ...
        SslOptionDisableLegacyRenegotiation: QSsl = ...
        SslOptionDisableSessionSharing: QSsl = ...
        SslOptionDisableSessionPersistence: QSsl = ...
        SslOptionDisableServerCipherPreference: QSsl = ...

    class SslProtocol(int):
        UnknownProtocol: QSsl = ...
        SslV3: QSsl = ...
        SslV2: QSsl = ...
        TlsV1_0: QSsl = ...
        TlsV1_0OrLater: QSsl = ...
        TlsV1_1: QSsl = ...
        TlsV1_1OrLater: QSsl = ...
        TlsV1_2: QSsl = ...
        TlsV1_2OrLater: QSsl = ...
        AnyProtocol: QSsl = ...
        TlsV1SslV3: QSsl = ...
        SecureProtocols: QSsl = ...
        DtlsV1_0: QSsl = ...
        DtlsV1_0OrLater: QSsl = ...
        DtlsV1_2: QSsl = ...
        DtlsV1_2OrLater: QSsl = ...
        TlsV1_3: QSsl = ...
        TlsV1_3OrLater: QSsl = ...

    class AlternativeNameEntryType(int):
        EmailEntry: QSsl = ...
        DnsEntry: QSsl = ...
        IpAddressEntry: QSsl = ...

    class KeyAlgorithm(int):
        Opaque: QSsl = ...
        Rsa: QSsl = ...
        Dsa: QSsl = ...
        Ec: QSsl = ...
        Dh: QSsl = ...

    class EncodingFormat(int):
        Pem: QSsl = ...
        Der: QSsl = ...

    class KeyType(int):
        PrivateKey: QSsl = ...
        PublicKey: QSsl = ...

    class SslOptions(sip.simplewrapper):
        @typing.overload
        def __init__(self) -> None:
            ...

        @typing.overload
        def __init__(
            self, f: typing.Union["QSsl.SslOptions", "QSsl.SslOption"]
        ) -> None:
            ...

        @typing.overload
        def __init__(self, a0: "QSsl.SslOptions") -> None:
            ...

        def __hash__(self) -> int:
            ...

        def __bool__(self) -> int:
            ...

        def __invert__(self) -> "QSsl.SslOptions":
            ...

        def __index__(self) -> int:
            ...

        def __int__(self) -> int:
            ...
