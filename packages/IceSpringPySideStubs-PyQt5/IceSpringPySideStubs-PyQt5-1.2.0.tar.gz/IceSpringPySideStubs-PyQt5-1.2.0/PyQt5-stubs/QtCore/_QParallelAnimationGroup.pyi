"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
import typing
from PyQt5.QtCore import *


class QParallelAnimationGroup(QAnimationGroup):
    """
    https://doc.qt.io/qt-5/qparallelanimationgroup.html

    **Detailed Description**

    QParallelAnimationGroup--a **container for animations** \\--starts all its
    animations when it is **started**  itself, i.e., runs all animations in
    parallel. The animation group finishes when the longest lasting animation
    has finished.

    You can treat QParallelAnimationGroup as any other **QAbstractAnimation** ,
    e.g., pause, resume, or add it to other animation groups.

    **QParallelAnimationGroup**  *group = new **QParallelAnimationGroup** ;
    group->addAnimation(anim1);
            group->addAnimation(anim2);
    group->start();

    In this example, `anim1` and `anim2` are two **QPropertyAnimation** s that
    have already been set up.

    **See also** **QAnimationGroup** , **QPropertyAnimation** , and **The
    Animation Framework** .
    """

    def __init__(self, parent: typing.Optional[QObject] = ...) -> None:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#QParallelAnimationGr
        oup

        **QParallelAnimationGroup::QParallelAnimationGroup(QObject * parent =
        nullptr)**

        Constructs a QParallelAnimationGroup. **parent** is passed to
        **QObject** 's constructor.
        """
        ...

    def updateDirection(self, direction: QAbstractAnimation.Direction) -> None:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#updateDirection

        **[override virtual protected] void
        QParallelAnimationGroup::updateDirection(QAbstractAnimation::Direction
        direction )**

        Reimplements: **QAbstractAnimation::updateDirection**
        (QAbstractAnimation::Direction direction).
        """
        ...

    def updateState(
        self, newState: QAbstractAnimation.State, oldState: QAbstractAnimation.State
    ) -> None:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#updateState

        **[override virtual protected] void
        QParallelAnimationGroup::updateState(QAbstractAnimation::State newState
        , QAbstractAnimation::State oldState )**

        Reimplements: **QAbstractAnimation::updateState**
        (QAbstractAnimation::State newState, QAbstractAnimation::State
        oldState).
        """
        ...

    def updateCurrentTime(self, currentTime: int) -> None:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#updateCurrentTime

        **[override virtual protected] void
        QParallelAnimationGroup::updateCurrentTime(int currentTime )**

        Reimplements: **QAbstractAnimation::updateCurrentTime** (int
        currentTime).
        """
        ...

    def event(self, event: QEvent) -> bool:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#event

        **[override virtual protected] bool
        QParallelAnimationGroup::event(QEvent * event )**

        Reimplements: **QAnimationGroup::event** (QEvent *event).
        """
        ...

    def duration(self) -> int:
        """
        https://doc.qt.io/qt-5/qparallelanimationgroup.html#duration

        **[override virtual] int QParallelAnimationGroup::duration() const**

        Reimplements: **QAbstractAnimation::duration** () const.
        """
        ...
