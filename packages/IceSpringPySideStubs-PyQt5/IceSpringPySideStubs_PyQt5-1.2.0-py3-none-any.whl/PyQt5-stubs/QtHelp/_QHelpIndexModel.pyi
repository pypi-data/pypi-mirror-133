"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
import typing
import PyQt5.sip
from PyQt5 import QtCore
from PyQt5.QtHelp import *


class QHelpIndexModel(QtCore.QStringListModel):
    """
    https://doc.qt.io/qt-5/qhelpindexmodel.html

    **Detailed Description**
    """

    def isCreatingIndex(self) -> bool:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#isCreatingIndex

        **bool QHelpIndexModel::isCreatingIndex() const**

        Returns true if the index is currently built up, otherwise false.
        """
        ...

    def linksForKeyword(self, keyword: str) -> typing.Dict[str, QtCore.QUrl]:
        ...

    def filter(self, filter: str, wildcard: str = ...) -> QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#filter

        **QModelIndex QHelpIndexModel::filter(const QString & filter , const
        QString & wildcard = QString())**

        Filters the indices and returns the model index of the best matching
        keyword. In a first step, only the keywords containing **filter** are
        kept in the model's index list. Analogously, if **wildcard** is not
        empty, only the keywords matched are left in the index list. In a second
        step, the best match is determined and its index model returned. When
        specifying a wildcard expression, the **filter** string is used to
        search for the best match.
        """
        ...

    def createIndex(self, customFilterName: str) -> None:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#createIndex

        **void QHelpIndexModel::createIndex(const QString & customFilterName )**

        Creates a new index by querying the help system for keywords for the
        specified **customFilterName**.
        """
        ...

    def helpEngine(self) -> QHelpEngineCore:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#helpEngine

        **QHelpEngineCore *QHelpIndexModel::helpEngine() const**

        Returns the associated help engine that manages this model.

        This function was introduced in Qt 5.15.
        """
        ...

    @property
    def indexCreated(self) -> PyQt5.QtCore.pyqtBoundSignal:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#indexCreated

        **[signal] void QHelpIndexModel::indexCreated()**

        This signal is emitted when the index has been created.
        """
        ...

    @property
    def indexCreationStarted(self) -> PyQt5.QtCore.pyqtBoundSignal:
        """
        https://doc.qt.io/qt-5/qhelpindexmodel.html#indexCreationStarted

        **[signal] void QHelpIndexModel::indexCreationStarted()**

        This signal is emitted when the creation of a new index has started. The
        current index is invalid from this point on until the signal
        **indexCreated** () is emitted.

        **See also** **isCreatingIndex** ().
        """
        ...
