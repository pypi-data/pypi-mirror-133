"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

Licence: MIT
"""
import typing
from PyQt5.QtXml import *


class QDomComment(QDomCharacterData):
    """
    https://doc.qt.io/qt-5/qdomcomment.html

    **Detailed Description**

    A comment in the parsed XML such as this:

    <!-- this is a comment -->

    is represented by QDomComment objects in the parsed Dom tree.

    For further information about the Document Object Model see **Level 1**  and
    **Level 2 Core** . For a more general introduction of the DOM implementation
    see the **QDomDocument**  documentation.
    """

    @typing.overload
    def __init__(self) -> None:
        """
        https://doc.qt.io/qt-5/qdomcomment.html#QDomComment

        **QDomComment::QDomComment()**

        Constructs an empty comment. To construct a comment with content, use
        the **QDomDocument::createComment** () function.
        """
        ...

    @typing.overload
    def __init__(self, x: "QDomComment") -> None:
        """
        https://doc.qt.io/qt-5/qdomcomment.html#QDomComment-1

        **QDomComment::QDomComment(const QDomComment & x )**

        Constructs a copy of **x**.

        The data of the copy is shared (shallow copy): modifying one node will
        also change the other. If you want to make a deep copy, use
        **cloneNode** ().
        """
        ...

    def nodeType(self) -> QDomNode.NodeType:
        """
        https://doc.qt.io/qt-5/qdomcomment.html#nodeType

        **QDomNode::NodeType QDomComment::nodeType() const**

        Returns `CommentNode`.
        """
        ...
