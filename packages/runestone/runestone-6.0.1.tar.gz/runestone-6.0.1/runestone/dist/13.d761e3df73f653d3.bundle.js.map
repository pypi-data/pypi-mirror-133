{"version":3,"file":"13.d761e3df73f653d3.bundle.js","mappings":"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","sources":["webpack://WebComponents/./node_modules/codemirror/mode/gas/gas.js","webpack://WebComponents/./runestone/common/js/runestonebase.js","webpack://WebComponents/./runestone/lp/js/lp.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"gas\", function(_config, parserConfig) {\n  'use strict';\n\n  // If an architecture is specified, its initialization function may\n  // populate this array with custom parsing functions which will be\n  // tried in the event that the standard functions do not find a match.\n  var custom = [];\n\n  // The symbol used to start a line comment changes based on the target\n  // architecture.\n  // If no architecture is pased in \"parserConfig\" then only multiline\n  // comments will have syntax support.\n  var lineCommentStartSymbol = \"\";\n\n  // These directives are architecture independent.\n  // Machine specific directives should go in their respective\n  // architecture initialization function.\n  // Reference:\n  // http://sourceware.org/binutils/docs/as/Pseudo-Ops.html#Pseudo-Ops\n  var directives = {\n    \".abort\" : \"builtin\",\n    \".align\" : \"builtin\",\n    \".altmacro\" : \"builtin\",\n    \".ascii\" : \"builtin\",\n    \".asciz\" : \"builtin\",\n    \".balign\" : \"builtin\",\n    \".balignw\" : \"builtin\",\n    \".balignl\" : \"builtin\",\n    \".bundle_align_mode\" : \"builtin\",\n    \".bundle_lock\" : \"builtin\",\n    \".bundle_unlock\" : \"builtin\",\n    \".byte\" : \"builtin\",\n    \".cfi_startproc\" : \"builtin\",\n    \".comm\" : \"builtin\",\n    \".data\" : \"builtin\",\n    \".def\" : \"builtin\",\n    \".desc\" : \"builtin\",\n    \".dim\" : \"builtin\",\n    \".double\" : \"builtin\",\n    \".eject\" : \"builtin\",\n    \".else\" : \"builtin\",\n    \".elseif\" : \"builtin\",\n    \".end\" : \"builtin\",\n    \".endef\" : \"builtin\",\n    \".endfunc\" : \"builtin\",\n    \".endif\" : \"builtin\",\n    \".equ\" : \"builtin\",\n    \".equiv\" : \"builtin\",\n    \".eqv\" : \"builtin\",\n    \".err\" : \"builtin\",\n    \".error\" : \"builtin\",\n    \".exitm\" : \"builtin\",\n    \".extern\" : \"builtin\",\n    \".fail\" : \"builtin\",\n    \".file\" : \"builtin\",\n    \".fill\" : \"builtin\",\n    \".float\" : \"builtin\",\n    \".func\" : \"builtin\",\n    \".global\" : \"builtin\",\n    \".gnu_attribute\" : \"builtin\",\n    \".hidden\" : \"builtin\",\n    \".hword\" : \"builtin\",\n    \".ident\" : \"builtin\",\n    \".if\" : \"builtin\",\n    \".incbin\" : \"builtin\",\n    \".include\" : \"builtin\",\n    \".int\" : \"builtin\",\n    \".internal\" : \"builtin\",\n    \".irp\" : \"builtin\",\n    \".irpc\" : \"builtin\",\n    \".lcomm\" : \"builtin\",\n    \".lflags\" : \"builtin\",\n    \".line\" : \"builtin\",\n    \".linkonce\" : \"builtin\",\n    \".list\" : \"builtin\",\n    \".ln\" : \"builtin\",\n    \".loc\" : \"builtin\",\n    \".loc_mark_labels\" : \"builtin\",\n    \".local\" : \"builtin\",\n    \".long\" : \"builtin\",\n    \".macro\" : \"builtin\",\n    \".mri\" : \"builtin\",\n    \".noaltmacro\" : \"builtin\",\n    \".nolist\" : \"builtin\",\n    \".octa\" : \"builtin\",\n    \".offset\" : \"builtin\",\n    \".org\" : \"builtin\",\n    \".p2align\" : \"builtin\",\n    \".popsection\" : \"builtin\",\n    \".previous\" : \"builtin\",\n    \".print\" : \"builtin\",\n    \".protected\" : \"builtin\",\n    \".psize\" : \"builtin\",\n    \".purgem\" : \"builtin\",\n    \".pushsection\" : \"builtin\",\n    \".quad\" : \"builtin\",\n    \".reloc\" : \"builtin\",\n    \".rept\" : \"builtin\",\n    \".sbttl\" : \"builtin\",\n    \".scl\" : \"builtin\",\n    \".section\" : \"builtin\",\n    \".set\" : \"builtin\",\n    \".short\" : \"builtin\",\n    \".single\" : \"builtin\",\n    \".size\" : \"builtin\",\n    \".skip\" : \"builtin\",\n    \".sleb128\" : \"builtin\",\n    \".space\" : \"builtin\",\n    \".stab\" : \"builtin\",\n    \".string\" : \"builtin\",\n    \".struct\" : \"builtin\",\n    \".subsection\" : \"builtin\",\n    \".symver\" : \"builtin\",\n    \".tag\" : \"builtin\",\n    \".text\" : \"builtin\",\n    \".title\" : \"builtin\",\n    \".type\" : \"builtin\",\n    \".uleb128\" : \"builtin\",\n    \".val\" : \"builtin\",\n    \".version\" : \"builtin\",\n    \".vtable_entry\" : \"builtin\",\n    \".vtable_inherit\" : \"builtin\",\n    \".warning\" : \"builtin\",\n    \".weak\" : \"builtin\",\n    \".weakref\" : \"builtin\",\n    \".word\" : \"builtin\"\n  };\n\n  var registers = {};\n\n  function x86(_parserConfig) {\n    lineCommentStartSymbol = \"#\";\n\n    registers.ax  = \"variable\";\n    registers.eax = \"variable-2\";\n    registers.rax = \"variable-3\";\n\n    registers.bx  = \"variable\";\n    registers.ebx = \"variable-2\";\n    registers.rbx = \"variable-3\";\n\n    registers.cx  = \"variable\";\n    registers.ecx = \"variable-2\";\n    registers.rcx = \"variable-3\";\n\n    registers.dx  = \"variable\";\n    registers.edx = \"variable-2\";\n    registers.rdx = \"variable-3\";\n\n    registers.si  = \"variable\";\n    registers.esi = \"variable-2\";\n    registers.rsi = \"variable-3\";\n\n    registers.di  = \"variable\";\n    registers.edi = \"variable-2\";\n    registers.rdi = \"variable-3\";\n\n    registers.sp  = \"variable\";\n    registers.esp = \"variable-2\";\n    registers.rsp = \"variable-3\";\n\n    registers.bp  = \"variable\";\n    registers.ebp = \"variable-2\";\n    registers.rbp = \"variable-3\";\n\n    registers.ip  = \"variable\";\n    registers.eip = \"variable-2\";\n    registers.rip = \"variable-3\";\n\n    registers.cs  = \"keyword\";\n    registers.ds  = \"keyword\";\n    registers.ss  = \"keyword\";\n    registers.es  = \"keyword\";\n    registers.fs  = \"keyword\";\n    registers.gs  = \"keyword\";\n  }\n\n  function armv6(_parserConfig) {\n    // Reference:\n    // http://infocenter.arm.com/help/topic/com.arm.doc.qrc0001l/QRC0001_UAL.pdf\n    // http://infocenter.arm.com/help/topic/com.arm.doc.ddi0301h/DDI0301H_arm1176jzfs_r0p7_trm.pdf\n    lineCommentStartSymbol = \"@\";\n    directives.syntax = \"builtin\";\n\n    registers.r0  = \"variable\";\n    registers.r1  = \"variable\";\n    registers.r2  = \"variable\";\n    registers.r3  = \"variable\";\n    registers.r4  = \"variable\";\n    registers.r5  = \"variable\";\n    registers.r6  = \"variable\";\n    registers.r7  = \"variable\";\n    registers.r8  = \"variable\";\n    registers.r9  = \"variable\";\n    registers.r10 = \"variable\";\n    registers.r11 = \"variable\";\n    registers.r12 = \"variable\";\n\n    registers.sp  = \"variable-2\";\n    registers.lr  = \"variable-2\";\n    registers.pc  = \"variable-2\";\n    registers.r13 = registers.sp;\n    registers.r14 = registers.lr;\n    registers.r15 = registers.pc;\n\n    custom.push(function(ch, stream) {\n      if (ch === '#') {\n        stream.eatWhile(/\\w/);\n        return \"number\";\n      }\n    });\n  }\n\n  var arch = (parserConfig.architecture || \"x86\").toLowerCase();\n  if (arch === \"x86\") {\n    x86(parserConfig);\n  } else if (arch === \"arm\" || arch === \"armv6\") {\n    armv6(parserConfig);\n  }\n\n  function nextUntilUnescaped(stream, end) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next === end && !escaped) {\n        return false;\n      }\n      escaped = !escaped && next === \"\\\\\";\n    }\n    return escaped;\n  }\n\n  function clikeComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch === \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch === \"*\");\n    }\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenize: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (state.tokenize) {\n        return state.tokenize(stream, state);\n      }\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var style, cur, ch = stream.next();\n\n      if (ch === \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = clikeComment;\n          return clikeComment(stream, state);\n        }\n      }\n\n      if (ch === lineCommentStartSymbol) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (ch === '\"') {\n        nextUntilUnescaped(stream, '\"');\n        return \"string\";\n      }\n\n      if (ch === '.') {\n        stream.eatWhile(/\\w/);\n        cur = stream.current().toLowerCase();\n        style = directives[cur];\n        return style || null;\n      }\n\n      if (ch === '=') {\n        stream.eatWhile(/\\w/);\n        return \"tag\";\n      }\n\n      if (ch === '{') {\n        return \"bracket\";\n      }\n\n      if (ch === '}') {\n        return \"bracket\";\n      }\n\n      if (/\\d/.test(ch)) {\n        if (ch === \"0\" && stream.eat(\"x\")) {\n          stream.eatWhile(/[0-9a-fA-F]/);\n          return \"number\";\n        }\n        stream.eatWhile(/\\d/);\n        return \"number\";\n      }\n\n      if (/\\w/.test(ch)) {\n        stream.eatWhile(/\\w/);\n        if (stream.eat(\":\")) {\n          return 'tag';\n        }\n        cur = stream.current().toLowerCase();\n        style = registers[cur];\n        return style || null;\n      }\n\n      for (var i = 0; i < custom.length; i++) {\n        style = custom[i](ch, stream, state);\n        if (style) {\n          return style;\n        }\n      }\n    },\n\n    lineComment: lineCommentStartSymbol,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\"\n  };\n});\n\n});\n","/* ********************************\n * |docname| - Runestone Base Class\n * ********************************\n * All runestone components should inherit from RunestoneBase. In addition all runestone components should do the following things:\n *\n * 1.   Ensure that they are wrapped in a div with the class runestone\n * 2.   Write their source AND their generated html to the database if the database is configured\n * 3.   Properly save and restore their answers using the checkServer mechanism in this base class. Each component must provide an implementation of:\n *\n *      -    checkLocalStorage\n *      -    setLocalStorage\n *      -    restoreAnswers\n *      -    disableInteraction\n *\n * 4.   provide a Selenium based unit test\n */\n\nimport { pageProgressTracker } from \"./bookfuncs.js\";\n//import \"./../styles/runestone-custom-sphinx-bootstrap.css\";\n\nexport default class RunestoneBase {\n  constructor(opts) {\n    this.component_ready_promise = new Promise(\n      (resolve) => (this._component_ready_resolve_fn = resolve)\n    );\n    this.optional = false;\n    if (typeof window.allComponents === \"undefined\") {\n      window.allComponents = [];\n    }\n    window.allComponents.push(this);\n    if (opts) {\n      this.sid = opts.sid;\n      this.graderactive = opts.graderactive;\n      this.showfeedback = true;\n      if (opts.timed) {\n        this.isTimed = true;\n      }\n      if (opts.enforceDeadline) {\n        this.deadline = opts.deadline;\n      }\n      if ($(opts.orig).data(\"optional\")) {\n        this.optional = true;\n      } else {\n        this.optional = false;\n      }\n      if (opts.selector_id) {\n        this.selector_id = opts.selector_id;\n      }\n      if (typeof opts.assessmentTaken !== \"undefined\") {\n        this.assessmentTaken = opts.assessmentTaken;\n      } else {\n        // default to true as this opt is only provided from a timedAssessment\n        this.assessmentTaken = true;\n      }\n      // This is for the selectquestion points\n      // If a selectquestion is part of a timed exam it will get\n      // the timedWrapper options.\n      if (typeof opts.timedWrapper !== \"undefined\") {\n        this.timedWrapper = opts.timedWrapper;\n      } else {\n        // However sometimes selectquestions\n        // are used in regular assignments.  The hacky way to detect this\n        // is to look for doAssignment in the URL and then grab\n        // the assignment name from the heading.\n        if (location.href.indexOf(\"doAssignment\") >= 0) {\n          this.timedWrapper = $(\"h1#assignment_name\").text();\n        } else {\n          this.timedWrapper = null;\n        }\n      }\n      if ($(opts.orig).data(\"question_label\")) {\n        this.question_label = $(opts.orig).data(\"question_label\");\n      }\n    }\n    this.jsonHeaders = new Headers({\n      \"Content-type\": \"application/json; charset=utf-8\",\n      Accept: \"application/json\",\n    });\n  }\n\n  // _`logBookEvent`\n  //----------------\n  // This function sends the provided ``eventInfo`` to the `hsblog endpoint` of the server. Awaiting this function returns either ``undefined`` (if Runestone services are not available) or the data returned by the server as a JavaScript object (already JSON-decoded).\n  async logBookEvent(eventInfo) {\n    if (this.graderactive) {\n      return;\n    }\n    let post_return;\n    eventInfo.course_name = eBookConfig.course;\n    eventInfo.clientLoginStatus = eBookConfig.isLoggedIn;\n    eventInfo.timezoneoffset = new Date().getTimezoneOffset() / 60;\n    if (this.percent) {\n      eventInfo.percent = this.percent;\n    }\n    if (eBookConfig.useRunestoneServices && eBookConfig.logLevel > 0) {\n      post_return = this.postLogMessage(eventInfo);\n    }\n    if (!this.isTimed || eBookConfig.debug) {\n      console.log(\"logging event \" + JSON.stringify(eventInfo));\n    }\n    // When selectquestions are part of an assignment especially toggle questions\n    // we need to count using the selector_id of the select question.\n    // We  also need to log an event for that selector so that we will know\n    // that interaction has taken place.  This is **independent** of how the\n    // autograder will ultimately grade the question!\n    if (this.selector_id) {\n      eventInfo.div_id = this.selector_id.replace(\n        \"-toggleSelectedQuestion\",\n        \"\"\n      );\n      eventInfo.event = \"selectquestion\";\n      eventInfo.act = \"interaction\";\n      this.postLogMessage(eventInfo);\n    }\n    if (\n      typeof pageProgressTracker.updateProgress === \"function\" &&\n      eventInfo.act != \"edit\" &&\n      this.optional == false\n    ) {\n      pageProgressTracker.updateProgress(eventInfo.div_id);\n    }\n    return post_return;\n  }\n\n  async postLogMessage(eventInfo) {\n    var post_return;\n    let request = new Request(\n      `${eBookConfig.new_server_prefix}/logger/bookevent`,\n      {\n        method: \"POST\",\n        headers: this.jsonHeaders,\n        body: JSON.stringify(eventInfo),\n      }\n    );\n    try {\n      let response = await fetch(request);\n      if (!response.ok) {\n        throw new Error(\"Failed to save the log entry\");\n      }\n      post_return = response.json();\n    } catch (e) {\n      if (this.isTimed) {\n        alert(`Error: Your action was not saved! The error was ${e}`);\n      }\n      console.log(`Error: ${e}`);\n    }\n    return post_return;\n  }\n  // .. _logRunEvent:\n  //\n  // logRunEvent\n  // -----------\n  // This function sends the provided ``eventInfo`` to the `runlog endpoint`. When awaited, this function returns the data (decoded from JSON) the server sent back.\n  async logRunEvent(eventInfo) {\n    let post_promise = \"done\";\n    if (this.graderactive) {\n      return;\n    }\n    eventInfo.course = eBookConfig.course;\n    eventInfo.clientLoginStatus = eBookConfig.isLoggedIn;\n    eventInfo.timezoneoffset = new Date().getTimezoneOffset() / 60;\n    if (this.forceSave || \"to_save\" in eventInfo === false) {\n      eventInfo.save_code = \"True\";\n    }\n    if (eBookConfig.useRunestoneServices && eBookConfig.logLevel > 0) {\n      let request = new Request(\n        `${eBookConfig.new_server_prefix}/logger/runlog`,\n        {\n          method: \"POST\",\n          headers: this.jsonHeaders,\n          body: JSON.stringify(eventInfo),\n        }\n      );\n      let response = await fetch(request);\n      if (!response.ok) {\n        throw new Error(\"Failed to log the run\");\n      }\n      post_promise = await response.json();\n    }\n    if (!this.isTimed || eBookConfig.debug) {\n      console.log(\"running \" + JSON.stringify(eventInfo));\n    }\n    if (\n      typeof pageProgressTracker.updateProgress === \"function\" &&\n      this.optional == false\n    ) {\n      pageProgressTracker.updateProgress(eventInfo.div_id);\n    }\n    return post_promise;\n  }\n  /* Checking/loading from storage\n    **WARNING:**  DO NOT `await` this function!\n    This function, although async, does not explicitly resolve its promise by returning a value.  The reason for this is because it is called by the constructor for nearly every component.  In Javascript constructors cannot be async!\n\n    One of the recommended ways to handle the async requirements from within a constructor is to use an attribute as a promise and resolve that attribute at the appropriate time.\n    */\n  async checkServer(\n    // A string specifying the event name to use for querying the :ref:`getAssessResults` endpoint.\n    eventInfo,\n    // If true, this function will invoke ``indicate_component_ready()`` just before it returns. This is provided since most components are ready after this function completes its work.\n    //\n    // TODO: This defaults to false, to avoid causing problems with any components that haven't been updated and tested. After all Runestone components have been updated, default this to true and remove the extra parameter from most calls to this function.\n    will_be_ready = false\n  ) {\n    // Check if the server has stored answer\n    let self = this;\n    this.checkServerComplete = new Promise(function (resolve, reject) {\n      self.csresolver = resolve;\n    });\n    if (this.useRunestoneServices || this.graderactive) {\n      let data = {};\n      data.div_id = this.divid;\n      data.course = eBookConfig.course;\n      data.event = eventInfo;\n      if (this.graderactive && this.deadline) {\n        data.deadline = this.deadline;\n        data.rawdeadline = this.rawdeadline;\n        data.tzoff = this.tzoff;\n      }\n      if (this.sid) {\n        data.sid = this.sid;\n      }\n      // If we are NOT in practice mode and we are not in a peer exercise\n      // and assessmentTaken is true\n      if (\n        !eBookConfig.practice_mode &&\n        !eBookConfig.peer &&\n        this.assessmentTaken\n      ) {\n        let request = new Request(\n          `${eBookConfig.new_server_prefix}/assessment/results`,\n          {\n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: this.jsonHeaders,\n          }\n        );\n        try {\n          let response = await fetch(request);\n          if (response.ok) {\n            data = await response.json();\n            data = data.detail;\n            this.repopulateFromStorage(data);\n            this.csresolver(\"server\");\n          } else {\n            console.log(`HTTP Error getting results: ${response.statusText}`);\n          }\n        } catch (err) {\n          try {\n            this.checkLocalStorage();\n          } catch (err) {\n            console.log(err);\n          }\n        }\n      } else {\n        this.loadData({});\n        this.csresolver(\"not taken\");\n      }\n    } else {\n      this.checkLocalStorage(); // just go right to local storage\n      this.csresolver(\"local\");\n    }\n\n    if (will_be_ready) {\n      this.indicate_component_ready();\n    }\n  }\n\n  // This method assumes that ``this.componentDiv`` refers to the ``div`` containing the component, and that this component's ID is set.\n  indicate_component_ready() {\n    // Add a class to indicate the component is now ready.\n    this.containerDiv.classList.add(\"runestone-component-ready\");\n    // Resolve the ``this.component_ready_promise``.\n    this._component_ready_resolve_fn();\n  }\n\n  loadData(data) {\n    // for most classes, loadData doesn't do anything. But for Parsons, and perhaps others in the future,\n    // initialization can happen even when there's no history to be loaded\n    return null;\n  }\n\n  /**\n   * repopulateFromStorage is called after a successful API call is made to ``getAssessResults`` in\n   * the checkServer method in this class\n   *\n   * ``restoreAnswers,`` ``setLocalStorage`` and ``checkLocalStorage`` are defined in the child classes.\n   *\n   * @param {*} data - a JSON object representing the data needed to restore a previous answer for a component\n   * @param {*} status - the http status\n   * @param {*} whatever - ignored\n   */\n  repopulateFromStorage(data) {\n    // decide whether to use the server's answer (if there is one) or to load from storage\n    if (data !== null && data !== \"no data\" && this.shouldUseServer(data)) {\n      this.restoreAnswers(data);\n      this.setLocalStorage(data);\n    } else {\n      this.checkLocalStorage();\n    }\n  }\n  shouldUseServer(data) {\n    // returns true if server data is more recent than local storage or if server storage is correct\n    if (\n      data.correct === \"T\" ||\n      localStorage.length === 0 ||\n      this.graderactive === true ||\n      this.isTimed\n    ) {\n      return true;\n    }\n    let ex = localStorage.getItem(this.localStorageKey());\n    if (ex === null) {\n      return true;\n    }\n    let storedData;\n    try {\n      storedData = JSON.parse(ex);\n    } catch (err) {\n      // error while parsing; likely due to bad value stored in storage\n      console.log(err.message);\n      localStorage.removeItem(this.localStorageKey());\n      // definitely don't want to use local storage here\n      return true;\n    }\n    if (data.answer == storedData.answer) return true;\n    let storageDate = new Date(storedData.timestamp);\n    let serverDate = new Date(data.timestamp);\n    return serverDate >= storageDate;\n  }\n  // Return the key which to be used when accessing local storage.\n  localStorageKey() {\n    return (\n      eBookConfig.email + \":\" + eBookConfig.course + \":\" + this.divid + \"-given\"\n    );\n  }\n  addCaption(elType) {\n    //someElement.parentNode.insertBefore(newElement, someElement.nextSibling);\n    if (!this.isTimed) {\n      var capDiv = document.createElement(\"p\");\n      if (this.question_label) {\n        this.caption = `Activity: ${this.question_label} ${this.caption}  <span class=\"runestone_caption_divid\">(${this.divid})</span>`;\n        $(capDiv).html(this.caption);\n        $(capDiv).addClass(`${elType}_caption`);\n      } else {\n        $(capDiv).html(this.caption + \" (\" + this.divid + \")\");\n        $(capDiv).addClass(`${elType}_caption`);\n        $(capDiv).addClass(`${elType}_caption_text`);\n      }\n      this.capDiv = capDiv;\n      //this.outerDiv.parentNode.insertBefore(capDiv, this.outerDiv.nextSibling);\n      this.containerDiv.appendChild(capDiv);\n    }\n  }\n\n  hasUserActivity() {\n    return this.isAnswered;\n  }\n\n  checkCurrentAnswer() {\n    console.log(\n      \"Each component should provide an implementation of checkCurrentAnswer\"\n    );\n  }\n\n  async logCurrentAnswer() {\n    console.log(\n      \"Each component should provide an implementation of logCurrentAnswer\"\n    );\n  }\n  renderFeedback() {\n    console.log(\n      \"Each component should provide an implementation of renderFeedback\"\n    );\n  }\n  disableInteraction() {\n    console.log(\n      \"Each component should provide an implementation of disableInteraction\"\n    );\n  }\n\n  toString() {\n    return `${this.constructor.name}: ${this.divid}`;\n  }\n\n  queueMathJax(component) {\n    if (MathJax.version.substring(0, 1) === \"2\") {\n      MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, component]);\n    } else {\n      MathJax.typesetPromise([component]);\n    }\n  }\n}\n\nwindow.RunestoneBase = RunestoneBase;\n","// .. Copyright (C) 2017 Bryan A. Jones.\n//\n//    This file is part of E-Book Binder.\n//\n//    E-Book Binder is free software: you can redistribute it and/or modify it\n//    under the terms of the GNU General Public License as published by the Free\n//    Software Foundation, either version 3 of the License, or (at your option)\n//    any later version.\n//\n//    E-Book Binder is distributed in the hope that it will be useful, but WITHOUT\n//    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n//    FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n//    details.\n//\n//    You should have received a copy of the GNU General Public License along\n//    with E-Book Binder.  If not, see <http://www.gnu.org/licenses/>.\n//\n// .. highlight:: javascript\n//\n// **************************************************************************************\n// |docname| - JavaScript functions supporting immediate feedback to in-browser questions\n// **************************************************************************************\n\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase\";\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/mode/gas/gas.js\";\nimport \"codemirror/mode/python/python.js\";\nimport \"codemirror/mode/javascript/javascript.js\";\nimport \"codemirror/mode/sql/sql.js\";\nimport \"codemirror/mode/clike/clike.js\";\nimport \"codemirror/mode/octave/octave.js\";\nimport \"codemirror/lib/codemirror.css\";\n\n// Constructor\n// ===========\n// Object containing all instances of LP problems. (I assume there is just one per page.)\nwindow.LPList = {};\n\n// FITB constructor\nclass LP extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        this.useRunestoneServices = opts.useRunestoneServices;\n        // Store the DOM element (the input) for the \"Test\" button.\n        this.element = opts.orig;\n        this.containerDiv = this.element;\n        this.divid = this.element.id;\n        // Store the DOM element (the textarea) where compile results will be displayed.\n        this.resultElement = $(this.element).siblings(\".lp-result\");\n        // Store the DOM element (a div) where feedback will be displayed.\n        this.feedbackElement = $(this.element).siblings(\".lp-feedback\").children(\"div\");\n        // Use a nice editor.\n        let that = this;\n        this.textAreas = [];\n        $(\".code_snippet\").each(function (index, element) {\n            let editor = CodeMirror.fromTextArea(element, {\n                lineNumbers: true,\n                mode: $(that.element).attr(\"data-lang\"),\n                indentUnit: 4,\n                matchBrackets: true,\n                autoMatchParens: true,\n                extraKeys: { Tab: \"indentMore\", \"Shift-Tab\": \"indentLess\" },\n            });\n            // Make the editor resizable.\n            $(editor.getWrapperElement()).resizable({\n                resize: function () {\n                    editor.setSize($(this).width(), $(this).height());\n                    editor.refresh();\n                },\n            });\n            // Keep track of it.\n            that.textAreas.push(editor);\n        });\n        // Handle clicks to the \"Save and run\" button.\n        $(this.element).click((eventObject) => that.onSaveAndRun(eventObject).then(null));\n        this.checkServer(\"lp_build\", true);\n    }\n\n    // Data structures:\n    //\n    // Format of data stored locally and on the server*::\n    //\n    //  -   answer: JSON-encoded string containing {\n    //          code_snippets: [\n    //              str, snippet 1, ...\n    //          ],\n    //          (optional) resultString: str, output from build.\n    //      }\n    //  -   correct: (optional) float, a percentage from 0 to 100.\n    //  -   timestamp: date/time in UTC.\n    //\n    // Format of data sent to the server*::\n    //\n    //  -   answer: JSON-encoded string containing only the code_snippets\n    //          array, not resultString. There's no point in sending the\n    //          previous resultString, since the server will compute a new\n    //          one.\n    //  -   event: \"lp_build\"\n    //  -   act: \"\", since the useinfo table requires it. It's not\n    //          otherwise used.\n    //  -   path: str, giving the relative path to this web page. Used\n    //          to find the source code which produced this page in order\n    //          to do snippet replacement.\n    //  -   div_id: str, the div_id of this component.\n    //\n    // Format of data received from the server::\n    //\n    //  If there was an error:\n    //  -   errors: [\n    //          str, error message 1, ...\n    //      ]\n    //\n    //  Otherwise:\n    //  -   answer: JSON-encoded string containing {\n    //          resultString: str, output from build.\n    //          Note that the code_snippets aren't sent back, to save\n    //              bandwidth.\n    //      }\n    //  -   correct: float, a percentage from 0 to 100.\n    //  -   timestamp: str, the server's timestamp.\n    //\n    // * For simplicity, I omitted the common fields (course, etc.) and discussed only fields unique to this component.\n\n    async onSaveAndRun(_eventObject) {\n        // Prevent multiple click while the build is running.\n        $(this.element).attr(\"disabled\", true);\n        $(this.resultElement).val(\"Building...\");\n        $(this.feedbackElement).text(\"\").attr(\"\");\n        // Since the Save and run button was clicked, we assume the code snippets have been changed; therefore, don't store ``correct`` or ``answer.resultString`` because they are out of date.\n        //\n        // Store the answer as a string, since this is what goes in to / comes out from the database. We have to translate this back to a data structure when restoring from the db or local storage.\n        let code_snippets = this.textareasToData();\n        this.setLocalStorage({\n            answer: JSON.stringify({code_snippets: code_snippets}),\n            timestamp: new Date(),\n        });\n        // Store the answer that the server returns, which includes additional data (correct/incorrect, feedback from the build, etc.).\n        let serverAnswer;\n        try {\n            serverAnswer = await this.logBookEvent({\n                event: \"lp_build\",\n                answer: JSON.stringify(code_snippets),\n                // This is required by useinfo, but not used.\n                act: \"\",\n                // Find the relative path to this web page. Slice off the leading ``/``.\n                path: window.location.href\n                    .replace(eBookConfig.app, \"\")\n                    .slice(1),\n                div_id: this.divid,\n            });\n        } catch (err) {\n            $(this.feedbackElement)\n                .val(`Error contacting server: {err}.`)\n                .attr(\"class\", \"alert alert-danger\");\n            return;\n        } finally {\n            // Always re-enable the button after the server responds.\n            $(this.element).attr(\"disabled\", false);\n        }\n        serverAnswer = serverAnswer.detail;\n        // The server doesn't return the ``code_snippets``, for efficiency. Include those. If an error was returned, note that there is no ``answer`` yet.\n        if (!(\"answer\" in serverAnswer)) {\n            serverAnswer.answer = {};\n        }\n        serverAnswer.answer.code_snippets = code_snippets;\n        this.displayAnswer(serverAnswer);\n        // JSON-encode the answer for storage.\n        serverAnswer.answer = JSON.stringify(serverAnswer.answer);\n        this.setLocalStorage(serverAnswer);\n    }\n\n    // Given a single answer, display it.\n    displayAnswer(data) {\n        if (\"errors\" in data) {\n            // Display any server-side errors. If this key is present, other keys won't be.\n            $(this.feedbackElement)\n                .text(data.errors.join(\"<br>\"))\n                .attr(\"class\", \"alert alert-danger\");\n        } else {\n            // Display and color-code the results.\n            $(this.resultElement).val(data.answer.resultString);\n            if (data.correct == null) {\n                $(this.feedbackElement)\n                    .text(\"Response recorded.\")\n                    .attr(\"class\", \"alert alert-success\");\n            } else if (data.correct >= 100) {\n                $(this.feedbackElement)\n                    .text(\"Correct. Grade: \" + data.correct + \"%\")\n                    .attr(\"class\", \"alert alert-success\");\n            } else {\n                $(this.feedbackElement)\n                    .text(\"Incorrect. Grade: \" + data.correct + \"%\")\n                    .attr(\"class\", \"alert alert-danger\");\n            }\n            // Scroll to the bottom of the results.\n            $(this.resultElement).scrollTop(this.resultElement[0].scrollHeight);\n        }\n    }\n\n    // Store the contents of each textarea into an array of strings.\n    textareasToData() {\n        return $.map(this.textAreas, function (obj, index) {\n            // See https://codemirror.net/doc/manual.html#api.\n            return obj.getValue();\n        });\n    }\n\n    // Store an array of strings in ``data.code_snippets`` into each textarea.\n    dataToTextareas(data) {\n        // Find all code snippet textareas.\n        $(this.textAreas).each(function (index, value) {\n            // Silently ignore if ``data.answer.code_snippets`` or ``data.answer.code_snippets[index]`` isn't defined.\n            value.setValue((data.answer.code_snippets || \"\")[index] || \"\");\n        });\n    }\n\n    // Restore answers from storage retrieval done in RunestoneBase.\n    restoreAnswers(data) {\n        // We store the answer as a JSON-encoded string in the db / local storage. Restore the actual data structure from it.\n        data.answer = JSON.parse(data.answer);\n        this.dataToTextareas(data);\n        this.displayAnswer(data);\n    }\n\n    checkLocalStorage() {\n        // Loads previous answers from local storage if they exist.\n        var storedData;\n        if (localStorage.length > 0) {\n            var key = this.localStorageKey();\n            var ex = localStorage.getItem(key);\n            if (ex !== null) {\n                try {\n                    storedData = JSON.parse(ex);\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(key);\n                    return;\n                }\n                this.restoreAnswers(storedData);\n            }\n        }\n    }\n\n    setLocalStorage(data) {\n        localStorage.setItem(this.localStorageKey(), JSON.stringify(data));\n    }\n}\n\n// Initialization\n// ==============\n// Find the custom HTML tags and execute our code on them.\n$(document).bind(\"runestone:login-complete\", function () {\n    $(\"[data-component=lp_build]\").each(function (index) {\n        try {\n            window.LPList[this.id] = new LP({\n                orig: this,\n                useRunestoneServices: eBookConfig.useRunestoneServices,\n            });\n        } catch (err) {\n            console.log(`Error rendering LP Problem ${this.id}`);\n        }\n    });\n});\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\nwindow.component_factory[\"lp_build\"] = function (opts) {\n    return new LP(opts);\n};\n"],"names":["CodeMirror","defineMode","_config","parserConfig","custom","lineCommentStartSymbol","directives","registers","arch","architecture","toLowerCase","clikeComment","stream","state","ch","maybeEnd","next","tokenize","ax","eax","rax","bx","ebx","rbx","cx","ecx","rcx","dx","edx","rdx","si","esi","rsi","di","edi","rdi","sp","esp","rsp","bp","ebp","rbp","ip","eip","rip","cs","ds","ss","es","fs","gs","syntax","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","lr","pc","r13","r14","r15","push","eatWhile","startState","token","eatSpace","style","cur","eat","skipToEnd","end","escaped","nextUntilUnescaped","current","test","i","length","lineComment","blockCommentStart","blockCommentEnd","mod","RunestoneBase","constructor","opts","this","component_ready_promise","Promise","resolve","_component_ready_resolve_fn","optional","window","allComponents","sid","graderactive","showfeedback","timed","isTimed","enforceDeadline","deadline","$","orig","data","selector_id","assessmentTaken","timedWrapper","location","href","indexOf","text","question_label","jsonHeaders","Headers","Accept","async","eventInfo","post_return","course_name","eBookConfig","course","clientLoginStatus","isLoggedIn","timezoneoffset","Date","getTimezoneOffset","percent","useRunestoneServices","logLevel","postLogMessage","debug","console","log","JSON","stringify","div_id","replace","event","act","request","Request","new_server_prefix","method","headers","body","response","fetch","ok","Error","json","e","alert","post_promise","forceSave","save_code","will_be_ready","self","checkServerComplete","reject","csresolver","divid","rawdeadline","tzoff","practice_mode","peer","loadData","detail","repopulateFromStorage","statusText","err","checkLocalStorage","indicate_component_ready","containerDiv","classList","add","shouldUseServer","restoreAnswers","setLocalStorage","correct","localStorage","storedData","ex","getItem","localStorageKey","parse","message","removeItem","answer","storageDate","timestamp","email","addCaption","elType","capDiv","document","createElement","caption","html","addClass","appendChild","hasUserActivity","isAnswered","checkCurrentAnswer","renderFeedback","disableInteraction","toString","name","queueMathJax","component","MathJax","version","substring","Hub","Queue","typesetPromise","LPList","LP","super","element","id","resultElement","siblings","feedbackElement","children","that","textAreas","each","index","editor","lineNumbers","mode","attr","indentUnit","matchBrackets","autoMatchParens","extraKeys","Tab","getWrapperElement","resizable","resize","setSize","width","height","refresh","click","eventObject","onSaveAndRun","then","checkServer","_eventObject","val","serverAnswer","code_snippets","textareasToData","logBookEvent","path","app","slice","displayAnswer","errors","join","resultString","scrollTop","scrollHeight","map","obj","getValue","dataToTextareas","value","setValue","key","setItem","bind","component_factory"],"sourceRoot":""}