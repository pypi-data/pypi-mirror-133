"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

License: MIT
"""
import enum
import PyQt6.sip
from PyQt6.QtNetwork import *
import enum


class QSsl(PyQt6.sip.simplewrapper):
    """
    https://doc.qt.io/qt-6/qssl.html

    **Detailed Description**
    """

    class SupportedFeature(enum.Enum):
        CertificateVerification: QSsl = ...
        ClientSideAlpn: QSsl = ...
        ServerSideAlpn: QSsl = ...
        Ocsp: QSsl = ...
        Psk: QSsl = ...
        SessionTicket: QSsl = ...
        Alerts: QSsl = ...

    class ImplementedClass(enum.Enum):
        Key: QSsl = ...
        Certificate: QSsl = ...
        Socket: QSsl = ...
        DiffieHellman: QSsl = ...
        EllipticCurve: QSsl = ...
        Dtls: QSsl = ...
        DtlsCookie: QSsl = ...

    class AlertType(enum.Enum):
        CloseNotify: QSsl = ...
        UnexpectedMessage: QSsl = ...
        BadRecordMac: QSsl = ...
        RecordOverflow: QSsl = ...
        DecompressionFailure: QSsl = ...
        HandshakeFailure: QSsl = ...
        NoCertificate: QSsl = ...
        BadCertificate: QSsl = ...
        UnsupportedCertificate: QSsl = ...
        CertificateRevoked: QSsl = ...
        CertificateExpired: QSsl = ...
        CertificateUnknown: QSsl = ...
        IllegalParameter: QSsl = ...
        UnknownCa: QSsl = ...
        AccessDenied: QSsl = ...
        DecodeError: QSsl = ...
        DecryptError: QSsl = ...
        ExportRestriction: QSsl = ...
        ProtocolVersion: QSsl = ...
        InsufficientSecurity: QSsl = ...
        InternalError: QSsl = ...
        InappropriateFallback: QSsl = ...
        UserCancelled: QSsl = ...
        NoRenegotiation: QSsl = ...
        MissingExtension: QSsl = ...
        UnsupportedExtension: QSsl = ...
        CertificateUnobtainable: QSsl = ...
        UnrecognizedName: QSsl = ...
        BadCertificateStatusResponse: QSsl = ...
        BadCertificateHashValue: QSsl = ...
        UnknownPskIdentity: QSsl = ...
        CertificateRequired: QSsl = ...
        NoApplicationProtocol: QSsl = ...
        UnknownAlertMessage: QSsl = ...

    class AlertLevel(enum.Enum):
        Warning: QSsl = ...
        Fatal: QSsl = ...
        Unknown: QSsl = ...

    class SslOption(enum.Flag):
        SslOptionDisableEmptyFragments: QSsl = ...
        SslOptionDisableSessionTickets: QSsl = ...
        SslOptionDisableCompression: QSsl = ...
        SslOptionDisableServerNameIndication: QSsl = ...
        SslOptionDisableLegacyRenegotiation: QSsl = ...
        SslOptionDisableSessionSharing: QSsl = ...
        SslOptionDisableSessionPersistence: QSsl = ...
        SslOptionDisableServerCipherPreference: QSsl = ...

    class SslProtocol(enum.Enum):
        UnknownProtocol: QSsl = ...
        TlsV1_0: QSsl = ...
        TlsV1_0OrLater: QSsl = ...
        TlsV1_1: QSsl = ...
        TlsV1_1OrLater: QSsl = ...
        TlsV1_2: QSsl = ...
        TlsV1_2OrLater: QSsl = ...
        AnyProtocol: QSsl = ...
        SecureProtocols: QSsl = ...
        DtlsV1_0: QSsl = ...
        DtlsV1_0OrLater: QSsl = ...
        DtlsV1_2: QSsl = ...
        DtlsV1_2OrLater: QSsl = ...
        TlsV1_3: QSsl = ...
        TlsV1_3OrLater: QSsl = ...

    class AlternativeNameEntryType(enum.Enum):
        EmailEntry: QSsl = ...
        DnsEntry: QSsl = ...
        IpAddressEntry: QSsl = ...

    class KeyAlgorithm(enum.Enum):
        Opaque: QSsl = ...
        Rsa: QSsl = ...
        Dsa: QSsl = ...
        Ec: QSsl = ...
        Dh: QSsl = ...

    class EncodingFormat(enum.Enum):
        Pem: QSsl = ...
        Der: QSsl = ...

    class KeyType(enum.Enum):
        PrivateKey: QSsl = ...
        PublicKey: QSsl = ...
