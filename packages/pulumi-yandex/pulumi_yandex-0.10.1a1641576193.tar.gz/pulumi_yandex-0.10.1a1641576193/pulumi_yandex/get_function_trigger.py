# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetFunctionTriggerResult',
    'AwaitableGetFunctionTriggerResult',
    'get_function_trigger',
    'get_function_trigger_output',
]

@pulumi.output_type
class GetFunctionTriggerResult:
    """
    A collection of values returned by getFunctionTrigger.
    """
    def __init__(__self__, created_at=None, description=None, dlq=None, folder_id=None, function=None, id=None, iot=None, labels=None, log_group=None, logging=None, message_queue=None, name=None, object_storage=None, timer=None, trigger_id=None):
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if dlq and not isinstance(dlq, dict):
            raise TypeError("Expected argument 'dlq' to be a dict")
        pulumi.set(__self__, "dlq", dlq)
        if folder_id and not isinstance(folder_id, str):
            raise TypeError("Expected argument 'folder_id' to be a str")
        pulumi.set(__self__, "folder_id", folder_id)
        if function and not isinstance(function, dict):
            raise TypeError("Expected argument 'function' to be a dict")
        pulumi.set(__self__, "function", function)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if iot and not isinstance(iot, dict):
            raise TypeError("Expected argument 'iot' to be a dict")
        pulumi.set(__self__, "iot", iot)
        if labels and not isinstance(labels, dict):
            raise TypeError("Expected argument 'labels' to be a dict")
        pulumi.set(__self__, "labels", labels)
        if log_group and not isinstance(log_group, dict):
            raise TypeError("Expected argument 'log_group' to be a dict")
        pulumi.set(__self__, "log_group", log_group)
        if logging and not isinstance(logging, dict):
            raise TypeError("Expected argument 'logging' to be a dict")
        pulumi.set(__self__, "logging", logging)
        if message_queue and not isinstance(message_queue, dict):
            raise TypeError("Expected argument 'message_queue' to be a dict")
        pulumi.set(__self__, "message_queue", message_queue)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if object_storage and not isinstance(object_storage, dict):
            raise TypeError("Expected argument 'object_storage' to be a dict")
        pulumi.set(__self__, "object_storage", object_storage)
        if timer and not isinstance(timer, dict):
            raise TypeError("Expected argument 'timer' to be a dict")
        pulumi.set(__self__, "timer", timer)
        if trigger_id and not isinstance(trigger_id, str):
            raise TypeError("Expected argument 'trigger_id' to be a str")
        pulumi.set(__self__, "trigger_id", trigger_id)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> str:
        """
        Creation timestamp of the Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Description of the Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def dlq(self) -> 'outputs.GetFunctionTriggerDlqResult':
        """
        Dead Letter Queue settings definition for Yandex Cloud Functions Trigger
        * `dlq.0.queue_id` - ID of Dead Letter Queue for Trigger (Queue ARN)
        * `dlq.0.service_account_id` - Service Account ID for Dead Letter Queue for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "dlq")

    @property
    @pulumi.getter(name="folderId")
    def folder_id(self) -> Optional[str]:
        """
        Folder ID for the Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "folder_id")

    @property
    @pulumi.getter
    def function(self) -> 'outputs.GetFunctionTriggerFunctionResult':
        """
        [Yandex.Cloud Function](https://cloud.yandex.com/docs/functions/concepts/function) settings definition for Yandex Cloud Functions Trigger
        * `function.0.id` - Yandex.Cloud Function ID for Yandex Cloud Functions Trigger
        * `function.0.service_account_id` - Service account ID for Yandex.Cloud Function for Yandex Cloud Functions Trigger
        * `function.0.tag` - Tag for Yandex.Cloud Function for Yandex Cloud Functions Trigger
        * `function.0.retry_attempts` - Retry attempts for Yandex.Cloud Function for Yandex Cloud Functions Trigger
        * `function.0.retry_interval` - Retry interval in seconds for Yandex.Cloud Function for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "function")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def iot(self) -> 'outputs.GetFunctionTriggerIotResult':
        """
        [IoT](https://cloud.yandex.com/docs/functions/concepts/trigger/iot-core-trigger) settings definition for Yandex Cloud Functions Trigger, if present
        * `iot.0.registry_id` - IoT Registry ID for Yandex Cloud Functions Trigger
        * `iot.0.device_id` - IoT Device ID for Yandex Cloud Functions Trigger
        * `iot.0.topic` - IoT Topic for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "iot")

    @property
    @pulumi.getter
    def labels(self) -> Mapping[str, str]:
        """
        A set of key/value label pairs to assign to the Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "labels")

    @property
    @pulumi.getter(name="logGroup")
    def log_group(self) -> 'outputs.GetFunctionTriggerLogGroupResult':
        return pulumi.get(self, "log_group")

    @property
    @pulumi.getter
    def logging(self) -> 'outputs.GetFunctionTriggerLoggingResult':
        return pulumi.get(self, "logging")

    @property
    @pulumi.getter(name="messageQueue")
    def message_queue(self) -> 'outputs.GetFunctionTriggerMessageQueueResult':
        """
        [Message Queue](https://cloud.yandex.com/docs/functions/concepts/trigger/ymq-trigger) settings definition for Yandex Cloud Functions Trigger, if present
        * `message_queue.0.queue_id` - Message Queue ID for Yandex Cloud Functions Trigger
        * `message_queue.0.service_account_id` - Message Queue Service Account ID for Yandex Cloud Functions Trigger
        * `message_queue.0.batch_cutoff` - Batch Duration in seconds for Yandex Cloud Functions Trigger
        * `message_queue.0.batch_size` - Batch Size for Yandex Cloud Functions Trigger
        * `message_queue.0.visibility_timeout` - Visibility timeout for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "message_queue")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="objectStorage")
    def object_storage(self) -> 'outputs.GetFunctionTriggerObjectStorageResult':
        """
        [Object Storage](https://cloud.yandex.com/docs/functions/concepts/trigger/os-trigger) settings definition for Yandex Cloud Functions Trigger, if present
        * `object_storage.0.bucket_id` - Object Storage Bucket ID for Yandex Cloud Functions Trigger
        * `object_storage.0.prefix` - Prefix for Object Storage for Yandex Cloud Functions Trigger
        * `object_storage.0.suffix` - Suffix for Object Storage for Yandex Cloud Functions Trigger
        * `object_storage.0.create` - Boolean flag for setting create event for Yandex Cloud Functions Trigger
        * `object_storage.0.update` - Boolean flag for setting update event for Yandex Cloud Functions Trigger
        * `object_storage.0.delete` - Boolean flag for setting delete event for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "object_storage")

    @property
    @pulumi.getter
    def timer(self) -> 'outputs.GetFunctionTriggerTimerResult':
        """
        [Timer](https://cloud.yandex.com/docs/functions/concepts/trigger/timer) settings definition for Yandex Cloud Functions Trigger, if present
        * `timer.0.cron_expression` - Cron expression for timer for Yandex Cloud Functions Trigger
        """
        return pulumi.get(self, "timer")

    @property
    @pulumi.getter(name="triggerId")
    def trigger_id(self) -> Optional[str]:
        return pulumi.get(self, "trigger_id")


class AwaitableGetFunctionTriggerResult(GetFunctionTriggerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFunctionTriggerResult(
            created_at=self.created_at,
            description=self.description,
            dlq=self.dlq,
            folder_id=self.folder_id,
            function=self.function,
            id=self.id,
            iot=self.iot,
            labels=self.labels,
            log_group=self.log_group,
            logging=self.logging,
            message_queue=self.message_queue,
            name=self.name,
            object_storage=self.object_storage,
            timer=self.timer,
            trigger_id=self.trigger_id)


def get_function_trigger(folder_id: Optional[str] = None,
                         name: Optional[str] = None,
                         trigger_id: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFunctionTriggerResult:
    """
    Get information about a Yandex Cloud Function Trigger. For more information about Yandex Cloud Functions, see
    [Yandex Cloud Functions](https://cloud.yandex.com/docs/functions/).

    ```python
    import pulumi
    import pulumi_yandex as yandex

    my_trigger = yandex.get_function_trigger(trigger_id="are1sampletrigger11")
    ```

    This data source is used to define [Yandex Cloud Functions Trigger](https://cloud.yandex.com/docs/functions/concepts/trigger) that can be used by other resources.


    :param str folder_id: Folder ID for the Yandex Cloud Functions Trigger
    :param str name: Yandex Cloud Functions Trigger name used to define trigger
    :param str trigger_id: Yandex Cloud Functions Trigger id used to define trigger
    """
    __args__ = dict()
    __args__['folderId'] = folder_id
    __args__['name'] = name
    __args__['triggerId'] = trigger_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('yandex:index/getFunctionTrigger:getFunctionTrigger', __args__, opts=opts, typ=GetFunctionTriggerResult).value

    return AwaitableGetFunctionTriggerResult(
        created_at=__ret__.created_at,
        description=__ret__.description,
        dlq=__ret__.dlq,
        folder_id=__ret__.folder_id,
        function=__ret__.function,
        id=__ret__.id,
        iot=__ret__.iot,
        labels=__ret__.labels,
        log_group=__ret__.log_group,
        logging=__ret__.logging,
        message_queue=__ret__.message_queue,
        name=__ret__.name,
        object_storage=__ret__.object_storage,
        timer=__ret__.timer,
        trigger_id=__ret__.trigger_id)


@_utilities.lift_output_func(get_function_trigger)
def get_function_trigger_output(folder_id: Optional[pulumi.Input[Optional[str]]] = None,
                                name: Optional[pulumi.Input[Optional[str]]] = None,
                                trigger_id: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFunctionTriggerResult]:
    """
    Get information about a Yandex Cloud Function Trigger. For more information about Yandex Cloud Functions, see
    [Yandex Cloud Functions](https://cloud.yandex.com/docs/functions/).

    ```python
    import pulumi
    import pulumi_yandex as yandex

    my_trigger = yandex.get_function_trigger(trigger_id="are1sampletrigger11")
    ```

    This data source is used to define [Yandex Cloud Functions Trigger](https://cloud.yandex.com/docs/functions/concepts/trigger) that can be used by other resources.


    :param str folder_id: Folder ID for the Yandex Cloud Functions Trigger
    :param str name: Yandex Cloud Functions Trigger name used to define trigger
    :param str trigger_id: Yandex Cloud Functions Trigger id used to define trigger
    """
    ...
