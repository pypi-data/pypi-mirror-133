Metadata-Version: 2.1
Name: django_arg_path
Version: 0.1.2.3
Summary: We like writing short codes but we don"t want to think about logic. Here with django-arg-path package you can write short and clean code easily
Home-page: https://github.com/nurhesen
Author: Nuru Hasanov
Author-email: nurhesen@gmail.com
License: MIT
Download-URL: https://github.com/user/reponame/archive/v_01.tar.gz
Keywords: django,path,static,urls
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: LICENSE.txt


This package helps you write shorter and cleaner codes by supporting the useage of one views with multiple urls in django. 
These urls and views are static but supports any extra dynamic slug, str, int etc.


Useage is simple

Here is our urls.py file


```sh

urlpatterns = [
  arg_path('en', '', home, name='home_en',
  arg_path('ru', 'ru', home, name='home_ru',
  arg_path('es', 'es', home, name='home_es',
]

```


Here is our views.py file

```sh

def home(request, static_arg=''):
    # static_arg variable gives us en, ru and es as a string which we included in the beginning of our path
    return render(request, static_arg+'.html')

```

So this one views.py file creates 3 pages named '', 'ru' and 'es'

Something like that
127.0.0.1:8000/,
127.0.0.1:8000/ru,
127.0.0.1:8000/es,



