list[any].append:
  side_effect: |-
    set_el_type(obj, args[0].type)
    set_as_mut(obj)
  alt_name: 'push'
  ret_type: "None"

list[None].*.type:
  side_effect: |-
    set_el_type(obj, as=args[0])
    set_as_mut(obj)
  code: "{{left}}"
  type: "List[{{right.type}}]"

list[any].*.int:
  code: 'Array({{right}}).fill({{left}}).flat()'
  type: 'left.type'

list[any].==.list[any]:
  code: |-
    {%- if left() == right()-%}
      true
    {%- else -%}
      (JSON.stringify({{left}})==JSON.stringify({{right}}))
    {%- endif -%}
  type: 'bool'

list[any].index:
  alt_name: 'indexOf'
  type: 'int'

list[any].+.list[any]:
  code: "{{left}}.concat({{right}})"
  type: "left.type"

any.in.list[any]:
  code: "{{right}}.includes({{left}})"
  type: "bool"

list[any].pop:
  code: |-
    {%- if args|length > 0 -%}
      {{obj}}.splice({{args[0]}}, 1)
    {%- else -%}
      {{obj}}.pop()
    {%- endif -%}