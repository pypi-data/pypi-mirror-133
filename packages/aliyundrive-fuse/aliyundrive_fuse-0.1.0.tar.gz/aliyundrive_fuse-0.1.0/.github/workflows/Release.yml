name: Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  macos:
    runs-on: macos-latest
    env:
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
    steps:
      - uses: actions/checkout@v2
      - name: Install macfuse
        run: |
          brew install macfuse
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          default: true
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v1
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64-apple-darwin
          args: --release --out dist --strip
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          if-no-files-found: error
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: apple-darwin-bin
          path: target/x86_64-apple-darwin/release/aliyundrive-fuse
          if-no-files-found: error
      - name: Get tag
        if: "startsWith(github.ref, 'refs/tags/')"
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Archive binary
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          cd target/x86_64-apple-darwin/release
          tar czvf aliyundrive-fuse-${{ steps.tag.outputs.tag }}.apple-darwin.tar.gz aliyundrive-fuse
          shasum -a 256 aliyundrive-fuse-${{ steps.tag.outputs.tag }}.apple-darwin.tar.gz > aliyundrive-fuse-${{ steps.tag.outputs.tag }}.apple-darwin.tar.gz.sha256
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-apple-darwin/release/aliyundrive-fuse*.tar.gz
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [
          { target: "x86_64-unknown-linux-musl", image_tag: "x86_64-musl", wheel: true },
          { target: "i686-unknown-linux-musl", image_tag: "i686-musl", wheel: true },
          { target: "aarch64-unknown-linux-musl", image_tag: "aarch64-musl", wheel: true },
          { target: "armv7-unknown-linux-musleabihf", image_tag: "armv7-musleabihf", wheel: true },
          { target: "armv7-unknown-linux-musleabi", image_tag: "armv7-musleabi", wheel: false },
          { target: "arm-unknown-linux-musleabihf", image_tag: "arm-musleabihf", wheel: false },
          { target: "arm-unknown-linux-musleabi", image_tag: "arm-musleabi", wheel: false },
        ]
    container:
      image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      env:
        CFLAGS_armv7_unknown_linux_musleabihf: '-mfpu=vfpv3-d16'
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.platform.target }}
      - name: Build wheels - manylinux
        uses: messense/maturin-action@main
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          container: off
          args: --no-sdist --release -o dist --strip --cargo-extra-args="--no-default-features --features rustls-tls"
      - name: Build wheels - musllinux
        if: matrix.platform.wheel
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_1
          container: off
          args: --no-sdist --release -o dist --strip --cargo-extra-args="--no-default-features --features rustls-tls"
      - name: Upload wheels
        if: matrix.platform.wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          if-no-files-found: error
      - name: Upx compress binary
        uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          files: target/${{ matrix.platform.target }}/release/aliyundrive-fuse
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.target }}-bin
          path: target/${{ matrix.platform.target }}/release/aliyundrive-fuse
          if-no-files-found: error
      - name: Get tag
        if: "startsWith(github.ref, 'refs/tags/')"
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Archive binary
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf aliyundrive-fuse-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz aliyundrive-fuse
          shasum -a 256 aliyundrive-fuse-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz > aliyundrive-fuse-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.platform.target }}/release/aliyundrive-fuse*.tar.gz*
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}

  release:
    name: Release
    runs-on: ubuntu-latest
    environment:
      name: PyPI
      url: https://pypi.org/project/aliyundrive-fuse/
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux, macos ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
