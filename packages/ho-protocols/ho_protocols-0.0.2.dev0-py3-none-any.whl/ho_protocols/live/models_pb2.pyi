"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ModelLiveItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HARVEST_TIME_FIELD_NUMBER: builtins.int
    COLONY_COLLAPSE_FIELD_NUMBER: builtins.int
    HARVEST_RESULT_FIELD_NUMBER: builtins.int

    @property
    def harvest_time(self) -> global___HarvestTime: ...

    @property
    def colony_collapse(self) -> global___ColonyCollapse: ...

    @property
    def harvest_result(self) -> global___HarvestResult: ...

    def __init__(self,
        *,
        harvest_time : typing.Optional[global___HarvestTime] = ...,
        colony_collapse : typing.Optional[global___ColonyCollapse] = ...,
        harvest_result : typing.Optional[global___HarvestResult] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"colony_collapse",b"colony_collapse",u"harvest_result",b"harvest_result",u"harvest_time",b"harvest_time",u"model",b"model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"colony_collapse",b"colony_collapse",u"harvest_result",b"harvest_result",u"harvest_time",b"harvest_time",u"model",b"model"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"model",b"model"]) -> typing_extensions.Literal["harvest_time","colony_collapse","harvest_result"]: ...
global___ModelLiveItem = ModelLiveItem

class HarvestTime(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Status.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        Unknown = HarvestTime.Status.V(0)
        NotReadyYet = HarvestTime.Status.V(1)
        ReadyToHarvest = HarvestTime.Status.V(2)
    class Status(metaclass=_Status):
        V = typing.NewType('V', builtins.int)
    Unknown = HarvestTime.Status.V(0)
    NotReadyYet = HarvestTime.Status.V(1)
    ReadyToHarvest = HarvestTime.Status.V(2)

    STATUS_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_NUMBER: builtins.int
    status: global___HarvestTime.Status.V = ...
    weight: builtins.float = ...

    def __init__(self,
        *,
        status : global___HarvestTime.Status.V = ...,
        weight : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"status",b"status",u"weight",b"weight"]) -> None: ...
global___HarvestTime = HarvestTime

class ColonyCollapse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COLLAPSE_PROBABILITY_FIELD_NUMBER: builtins.int
    collapse_probability: builtins.float = ...

    def __init__(self,
        *,
        collapse_probability : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"collapse_probability",b"collapse_probability"]) -> None: ...
global___ColonyCollapse = ColonyCollapse

class HarvestResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Status.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        Unknown = HarvestResult.Status.V(0)
        Success = HarvestResult.Status.V(1)
        Failure = HarvestResult.Status.V(2)
    class Status(metaclass=_Status):
        V = typing.NewType('V', builtins.int)
    Unknown = HarvestResult.Status.V(0)
    Success = HarvestResult.Status.V(1)
    Failure = HarvestResult.Status.V(2)

    STATUS_FIELD_NUMBER: builtins.int
    HARVESTED_AMOUNT_FIELD_NUMBER: builtins.int
    status: global___HarvestResult.Status.V = ...
    harvested_amount: builtins.float = ...

    def __init__(self,
        *,
        status : global___HarvestResult.Status.V = ...,
        harvested_amount : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"harvested_amount",b"harvested_amount",u"status",b"status"]) -> None: ...
global___HarvestResult = HarvestResult
