define("serialhub",["@jupyter-widgets/base"],(e=>(()=>{var t={150:(e,t,n)=>{(t=n(495)(!1)).push([e.id,'.xx-serialhub-widget {\n  padding: 1px 1px;\n}\n.xx-serialhub-status {\n  background-color: lightseagreen;\n  border: 1px solid lightcoral;\n  padding: 2px 4px 1px;\n  font-weight: bold;\n  min-height: 12px;\n}\n.xx-serialhub-value {\n  white-space: pre-wrap;\n  font-weight: normal;\n  font-family: "Lucida Console", Courier, monospace;\n  min-height: 10px;\n}\n.xx-serialhub-stats {\n  padding: 1px 10px 1px;\n  font-weight: normal;\n  font-style: italic;\n  min-height: 10px;\n}',""]),e.exports=t},760:(e,t,n)=>{var s=n(495),i=n(150);(t=s(!1)).i(i),t.push([e.id,"\n",""]),e.exports=t},495:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n,s,i,o=e[1]||"",r=e[3];if(!r)return o;if(t&&"function"==typeof btoa){var l=(n=r,s=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(i," */")),a=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[o].concat(a).concat([l]).join("\n")}return[o].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,s){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(s)for(var o=0;o<this.length;o++){var r=this[o][0];null!=r&&(i[r]=!0)}for(var l=0;l<e.length;l++){var a=[].concat(e[l]);s&&i[a[0]]||(n&&(a[2]?a[2]="".concat(n," and ").concat(a[2]):a[2]=n),t.push(a))}},t}},549:(e,t,n)=>{var s=n(379),i=n(760);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.id,i,""]]);s(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},379:(e,t,n)=>{"use strict";var s,i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),o=[];function r(e){for(var t=-1,n=0;n<o.length;n++)if(o[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},s=[],i=0;i<e.length;i++){var l=e[i],a=t.base?l[0]+t.base:l[0],c=n[a]||0,u="".concat(a," ").concat(c);n[a]=c+1;var d=r(u),h={css:l[1],media:l[2],sourceMap:l[3]};-1!==d?(o[d].references++,o[d].updater(h)):o.push({identifier:u,updater:f(h,t),references:1}),s.push(u)}return s}function a(e){var t=document.createElement("style"),s=e.attributes||{};if(void 0===s.nonce){var o=n.nc;o&&(s.nonce=o)}if(Object.keys(s).forEach((function(e){t.setAttribute(e,s[e])})),"function"==typeof e.insert)e.insert(t);else{var r=i(e.insert||"head");if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}return t}var c,u=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function d(e,t,n,s){var i=n?"":s.media?"@media ".concat(s.media," {").concat(s.css,"}"):s.css;if(e.styleSheet)e.styleSheet.cssText=u(t,i);else{var o=document.createTextNode(i),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(o,r[t]):e.appendChild(o)}}function h(e,t,n){var s=n.css,i=n.media,o=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=s;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(s))}}var p=null,_=0;function f(e,t){var n,s,i;if(t.singleton){var o=_++;n=p||(p=a(t)),s=d.bind(null,n,o,!1),i=d.bind(null,n,o,!0)}else n=a(t),s=h.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return s(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;s(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===s&&(s=Boolean(window&&document&&document.all&&!window.atob)),s));var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var s=0;s<n.length;s++){var i=r(n[s]);o[i].references--}for(var a=l(e,t),c=0;c<n.length;c++){var u=r(n[c]);0===o[u].references&&(o[u].updater(),o.splice(u,1))}n=a}}}},146:t=>{"use strict";t.exports=e},173:()=>{},147:e=>{"use strict";e.exports=JSON.parse('{"name":"serialhub","version":"0.0.34","description":"WebSerial widget for JupyterLab","keywords":["jupyter","jupyterlab","jupyterlab-extension","widgets"],"homepage":"https://github.com/cdr4eelz/serialhub","bugs":{"url":"https://github.com/cdr4eelz/serialhub/issues"},"license":"BSD-3-Clause","author":{"name":"cdr4eelz","email":"1408777+cdr4eelz@users.noreply.github.com"},"files":["lib/**/*.{d.ts,eot,gif,html,jpg,js,js.map,json,png,svg,woff2,ttf}","style/**/*.{css,js,eot,gif,html,jpg,json,png,svg,woff2,ttf}","schema/*.json"],"main":"lib/index.js","types":"lib/index.d.ts","style":"style/index.css","repository":{"type":"git","url":"https://github.com/cdr4eelz/serialhub.git"},"scripts":{"build":"jlpm run build:lib && jlpm run build:labextension:dev","build:prod":"jlpm run clean && jlpm run build:lib && jlpm run build:labextension","build:labextension":"jupyter labextension build .","build:labextension:dev":"jupyter labextension build --development True .","build:lib":"tsc","build:nbextension":"webpack --node-env production","build:all":"jlpm run build:lib && jlpm run build:labextension:dev && jlpm run build:nbextension","webpack:help":"webpack --help","webpack:version":"webpack -v","clean":"jlpm run clean:lib","clean:lib":"rimraf lib tsconfig.tsbuildinfo","clean:labextension":"rimraf serialhub/labextension","clean:nbextension":"rimraf serialhub/nbextension/static/index.js","clean:all":"jlpm run clean:lib && jlpm run clean:labextension && jlpm run clean:nbextension","eslint":"eslint . --ext .ts,.tsx --fix","eslint:check":"eslint . --ext .ts,.tsx","install:extension":"jlpm run build","watch":"run-p watch:src watch:labextension","watch:src":"tsc -w","watch:labextension":"jupyter labextension watch ."},"dependencies":{"@jupyterlab/application":"^3.1.0","@jupyterlab/coreutils":"^5.1.0","@jupyterlab/services":"^6.1.0","@jupyter-widgets/base":"^2 || ^3 || ^4","@lumino/coreutils":"^1.5.3","@lumino/widgets":"^1.19.0","lodash":"^4.17.19","minimist":"^1.2.3"},"devDependencies":{"@jupyterlab/builder":"^3.1.0","@typescript-eslint/eslint-plugin":"^4.8.1","@typescript-eslint/parser":"^4.8.1","eslint":"^7.14.0","eslint-config-prettier":"^6.15.0","eslint-plugin-prettier":"^3.1.4","mkdirp":"^1.0.3","npm-run-all":"^4.1.5","prettier":"^2.1.1","rimraf":"^3.0.2","typescript":"~4.1.3","@types/backbone":"~1.4.15","webpack":"^5","webpack-cli":"^4","source-map-loader":"^0.2.4","style-loader":"^1.0.0","ts-loader":"^9","css-loader":"^3.2.0"},"sideEffects":["style/*.css","style/index.js"],"styleModule":"style/index.js","publishConfig":{"access":"public"},"jupyterlab":{"sharedPackages":{"@jupyter-widgets/base":{"bundled":false,"singleton":true}},"discovery":{"server":{"managers":["pip"],"base":{"name":"serialhub"}}},"extension":"lib/plugin","outputDir":"serialhub/labextension"},"jupyter-releaser":{"hooks":{"before-build-npm":["python -m pip install jupyterlab~=3.1","jlpm"]}}}')}},n={};function s(e){var i=n[e];if(void 0!==i)return i.exports;var o=n[e]={id:e,exports:{}};return t[e](o,o.exports,s),o.exports}s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};return(()=>{"use strict";s.r(i),s.d(i,{MODULE_NAME:()=>n,MODULE_VERSION:()=>t,SerialHubModel:()=>u,SerialHubPort:()=>c,SerialHubView:()=>d,default:()=>h});const e=s(147),t=e.version,n=e.name;var o,r,l,a=s(146);s(549),function(e){function t(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e}function n(e){return Array.isArray(e)}e.emptyObject=Object.freeze({}),e.emptyArray=Object.freeze([]),e.isPrimitive=t,e.isArray=n,e.isObject=function(e){return!t(e)&&!n(e)},e.deepEqual=function e(s,i){if(s===i)return!0;if(t(s)||t(i))return!1;var o=n(s),r=n(i);return o===r&&(o&&r?function(t,n){if(t===n)return!0;if(t.length!==n.length)return!1;for(var s=0,i=t.length;s<i;++s)if(!e(t[s],n[s]))return!1;return!0}(s,i):function(t,n){if(t===n)return!0;for(var s in t)if(void 0!==t[s]&&!(s in n))return!1;for(var s in n)if(void 0!==n[s]&&!(s in t))return!1;for(var s in t){var i=t[s],o=n[s];if(void 0!==i||void 0!==o){if(void 0===i||void 0===o)return!1;if(!e(i,o))return!1}}return!0}(s,i))},e.deepCopy=function e(s){return t(s)?s:n(s)?function(t){for(var n=new Array(t.length),s=0,i=t.length;s<i;++s)n[s]=e(t[s]);return n}(s):function(t){var n={};for(var s in t){var i=t[s];void 0!==i&&(n[s]=e(i))}return n}(s)}}(o||(o={})),function(){function e(){this._types=[],this._values=[]}e.prototype.types=function(){return this._types.slice()},e.prototype.hasData=function(e){return-1!==this._types.indexOf(e)},e.prototype.getData=function(e){var t=this._types.indexOf(e);return-1!==t?this._values[t]:void 0},e.prototype.setData=function(e,t){this.clearData(e),this._types.push(e),this._values.push(t)},e.prototype.clearData=function(e){var t=this._types.indexOf(e);-1!==t&&(this._types.splice(t,1),this._values.splice(t,1))},e.prototype.clear=function(){this._types.length=0,this._values.length=0}}(),function(){function e(){var e=this;this.promise=new Promise((function(t,n){e._resolve=t,e._reject=n}))}e.prototype.resolve=function(e){(0,this._resolve)(e)},e.prototype.reject=function(e){(0,this._reject)(e)}}(),function(e){var t;e.getRandomValues=(t="undefined"!=typeof window&&(window.crypto||window.msCrypto)||s(173)||null)&&"function"==typeof t.getRandomValues?function(e){return t.getRandomValues(e)}:t&&"function"==typeof t.randomFillSync?function(e){return t.randomFillSync(e)}:t&&"function"==typeof t.randomBytes?function(e){for(var n=t.randomBytes(e.length),s=0,i=n.length;s<i;++s)e[s]=n[s]}:function(e){for(var t=0,n=0,s=e.length;n<s;++n)n%4==0&&(t=4294967295*Math.random()>>>0),e[n]=255&t,t>>>=8}}(r||(r={})),function(e){e.uuid4=function(){for(var e=new Uint8Array(16),t=new Array(256),n=0;n<16;++n)t[n]="0"+n.toString(16);for(n=16;n<256;++n)t[n]=n.toString(16);return function(){return r.getRandomValues(e),e[6]=64|15&e[6],e[8]=128|63&e[8],t[e[0]]+t[e[1]]+t[e[2]]+t[e[3]]+"-"+t[e[4]]+t[e[5]]+"-"+t[e[6]]+t[e[7]]+"-"+t[e[8]]+t[e[9]]+"-"+t[e[10]]+t[e[11]]+t[e[12]]+t[e[13]]+t[e[14]]+t[e[15]]}}()}(l||(l={}));class c{constructor(){this.port=null,this.writer=null,this.reader=null}async connect(e,t){const n=window.navigator;if(!n||!n.serial)throw new TypeError("Web Serial API not supported");if(this.port)throw new TypeError("WebSerial port is already connected");const s=await n.serial.requestPort(e);if(!s)throw new TypeError("FAILED request a port from user");console.log("OPENING PORT:",s,s.getInfo()),this.port=s,await this.port.open(t),this.writer=this.port.writable.getWriter(),this.reader=this.port.readable.getReader(),console.log("CONNECTED: ",this,this.port,this.port.getInfo())}async disconnect(){var e,t,n;console.log("CLOSE: ",this);try{await(null===(e=this.reader)||void 0===e?void 0:e.cancel("Closing port"))}catch(e){console.error("Ignoring error while closing readable",e)}finally{this.reader=null}try{await(null===(t=this.writer)||void 0===t?void 0:t.close())}catch(e){console.error("Ignoring error while closing writable",e)}finally{this.writer=null}try{await(null===(n=this.port)||void 0===n?void 0:n.close())}finally{this.port=null}}writeToStream(e){if(!this.writer)throw new TypeError("Stream not open");e.forEach((async e=>{var t;console.log("[WRITE]",e,e.byteLength),await(null===(t=this.writer)||void 0===t?void 0:t.write(e))}));let t=0;for(const n of e)t+=n.byteLength;return console.log("[WROTE]",t),t}async readLoop(e){for(var t;this.reader&&(null===(t=this.port)||void 0===t?void 0:t.readable);){const{value:t,done:n}=await this.reader.read();if(t&&e(t),n){console.log("[readLoop] DONE",n),this.reader.releaseLock();break}}console.log("[readLoop] EXIT")}static isSupported(){return"serial"in navigator}static createOneHub(){const e=window.serPort;if(e){console.log("Closing left over port",e);try{e.disconnect()}catch(e){console.error("Ignoring close error",e)}finally{window.serPort=null}}const t=new c;return window.serPort=t,t}}class u extends a.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:u.model_name,_model_module:u.model_module,_model_module_version:u.model_module_version,_view_name:u.view_name,_view_module:u.view_module,_view_module_version:u.view_module_version,is_supported:!1,status:"Initializing...",value:"Loading...",request_options:{},serial_options:{},pkt_recv_front:[0,0],pkt_send_front:[0,0],pkt_recv_back:[0,0],pkt_send_back:[0,0]})}static get mytempid(){return u._mytempid}}u._mytempid=a.uuid(),u.serializers=Object.assign({},a.DOMWidgetModel.serializers),u.model_name="SerialHubModel",u.model_module=n,u.model_module_version=t,u.view_name="SerialHubView",u.view_module=n,u.view_module_version=t;class d extends a.DOMWidgetView{constructor(){super(...arguments),this._el_status=null,this._el_stats=null,this._el_value=null,this._shp=null}render(){console.log("RENDER serialhub widget"),this.el.id=this.id||l.uuid4(),this.el.classList.add("xx-serialhub-widget"),this._el_status=window.document.createElement("button"),this._el_status.classList.add("xx-serialhub-status"),this._el_stats=window.document.createElement("pre"),this._el_stats.classList.add("xx-serialhub-stats"),this._el_value=window.document.createElement("pre"),this._el_value.classList.add("xx-serialhub-value"),this._el_status.onclick=e=>this.click_status(e),this._el_value.onclick=e=>this.click_value(e),this.el.append(this._el_status,this._el_stats,this._el_value),this.changed_status(),this.changed_value(),this.changed_stats(),this.update_stats_title(),this.model.on("change:status",this.changed_status,this),this.model.on("change:value",this.changed_value,this),this.model.on("change:request_options",this.changed_request_options,this),this.model.on("change:serial_options",this.changed_serial_options,this),this.model.on("change:pkt_recv_front",this.changed_stats,this),this.model.on("change:pkt_recv_back",this.changed_stats,this),this.model.on("change:pkt_send_front",this.changed_stats,this),this.model.on("change:pkt_send_back",this.changed_stats,this),this.model.on("msg:custom",this.msg_custom,this);const e=c.isSupported();return this.model.set("is_supported",e),this.model.set("status",e?"Supported":"Unsupported"),this.touch(),this}get_port_options(){return[this.model.get("request_options"),this.model.get("serial_options")]}update_stats_title(){var e,t;const[n,s]=this.get_port_options();let i="Request-Options: "+JSON.stringify(n)+"\r\nSerial-Options: "+JSON.stringify(s);const o=null===(t=null===(e=this._shp)||void 0===e?void 0:e.port)||void 0===t?void 0:t.getInfo();o&&(i+="\r\nPort-Info:"+JSON.stringify(o)),this._el_stats&&(this._el_stats.title=i)}changed_request_options(){console.log("SET request_options:",this.model.get("request_options")),this.update_stats_title()}changed_serial_options(){console.log("SET serial_options:",this.model.get("serial_options")),this.update_stats_title()}changed_status(){this._el_status&&this.model&&(this._el_status.textContent=this.model.get("status"))}changed_value(){this._el_value&&this.model&&(this._el_value.textContent=this.model.get("value"))}changed_stats(){if(this._el_stats){let e="";e+=" RecvF:"+this.model.get("pkt_recv_front"),e+=" SendF:"+this.model.get("pkt_send_front"),e+="  (Front-End)\r\n",e+=" RecvB:"+this.model.get("pkt_recv_back"),e+=" SendB:"+this.model.get("pkt_send_back"),e+="  (Back-End)",this._el_stats.textContent=e}}stats_zero(){this.model.set("pkt_recv_front",[0,0]),this.model.set("pkt_send_front",[0,0]),this.model.set("pkt_recv_back",[0,0]),this.model.set("pkt_send_back",[0,0]),this.touch()}stats_inc_tuple(e,t,n=1){const[s,i]=this.model.get(e),o=[s+t,i+n];return this.model.set(e,o),this.touch(),o}cb_read(e){console.log("DATA-IN",e.length,e);const t=this.stats_inc_tuple("pkt_recv_front",e.length);try{this.model.send({type:"RECV",pkt_recv_front:t},{},[e])}catch(e){throw console.log("FAILED send of serial data to backend.",e),e}}cb_connect(){var e;console.log("cb_connect",this._shp),this.update_stats_title(),this.stats_zero(),null===(e=this._shp)||void 0===e||e.readLoop((e=>{this.cb_read(e)})),console.log("DONE cb_connect")}widget_connect(){this._shp=new c;const[e,t]=this.get_port_options();console.log("CONNECT options",e,t),this._shp.connect(e,t).then((()=>{this.model.set("status","Connected"),this.cb_connect()}),(e=>{this.model.set("status","Disconnected"),this._shp=null}))}widget_disconnect(){var e;console.log("DISconnect",this,this._shp),null===(e=this._shp)||void 0===e||e.disconnect().then((()=>{this.model.set("status","Disconnected"),this._shp=null}),(e=>{this.model.set("status","Stuck")}))}click_status(e){console.log("click_status",this,this.model,e),this._shp?this.widget_disconnect():this.widget_connect(),console.log("click_status DONE",this._shp)}click_value(e){this&&this.model}msg_custom(e,t){const n=e.type;if("SEND"===n){if(console.log("MSG-SEND",t),this._shp){const e=this._shp.writeToStream(t);this.stats_inc_tuple("pkt_send_front",e)}}else console.log("UNKNOWN MESSAGE: ",n,e,t)}}const h={id:"serialhub:plugin",autoStart:!0,activate:e=>{console.log("JupyterLab extension serialhub is NOW activated!")}}})(),i})()));
//# sourceMappingURL=embed-bundle.js.map