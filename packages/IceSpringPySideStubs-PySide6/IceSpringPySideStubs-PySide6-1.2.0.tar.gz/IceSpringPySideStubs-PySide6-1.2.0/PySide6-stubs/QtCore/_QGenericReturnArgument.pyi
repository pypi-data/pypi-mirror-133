"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

Generated by BaiJiFeiLong@gmail.com

Licence: GPLv3
"""
"""
This file contains the exact signatures for all functions in module
PySide6.QtCore, except for defaults which are replaced by "...".
"""
from typing import Optional, overload
import PySide6.QtCore

bytes = str


class QGenericReturnArgument(PySide6.QtCore.QGenericArgument):
    """
    https://doc.qt.io/qt-6/qgenericreturnargument.html

    **Detailed Description**

    This class should never be used directly. Please use the **Q_RETURN_ARG** ()
    macro instead.

    **See also** **Q_RETURN_ARG** (), **QMetaObject::invokeMethod** (), and
    **QGenericArgument** .
    """

    @overload
    def __init__(
        self, QGenericReturnArgument: PySide6.QtCore.QGenericReturnArgument
    ) -> None:
        """
        https://doc.qt.io/qt-6/qgenericreturnargument.html#QGenericReturnArgumen
        t

        **QGenericReturnArgument::QGenericReturnArgument(const char * name =
        nullptr, void * data = nullptr)**

        Constructs a QGenericReturnArgument object with the given **name** and
        **data**.
        """
        ...

    @overload
    def __init__(
        self, aName: Optional[bytes] = ..., aData: Optional[int] = ...
    ) -> None:
        """
        https://doc.qt.io/qt-6/qgenericreturnargument.html#QGenericReturnArgumen
        t

        **QGenericReturnArgument::QGenericReturnArgument(const char * name =
        nullptr, void * data = nullptr)**

        Constructs a QGenericReturnArgument object with the given **name** and
        **data**.
        """
        ...

    @staticmethod
    def __copy__() -> None:
        ...
