
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: qdr-orchestrator
  namespace: ${QDR_NS}
spec:
  selector:
    matchLabels:
      app: qdr-orchestrator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: qdr-orchestrator
    spec:
      serviceAccountName: qdrorch
      containers:
        - name: qdr-orchestrator
          image: ${DOCKER_REPO}/${QDR_NS}/qdr-orchestrator
          env:
          - name: DOCKER_REPO
            value: ${DOCKER_REPO}
          - name: DB_HOST
            value: ${DB_TYPE}
          - name: DB_PORT
            value: "${DB_PORT}"
          - name: DB_USER
            value: ${DB_USER}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: user-pw
                key: password
          - name: DB_NAME
            value: ${DB_DATABASE}                                    
          ports:
          - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: qdr-orchestrator
  namespace: ${QDR_NS}
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: qdr-orchestrator

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: qdr-ingress-orchestrator
  namespace: ${QDR_NS}
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: ${QDR_NS}.${KUBE_LOCATION}
    http:
      paths:
      - path: /
        backend:
          serviceName: qdr-orchestrator
          servicePort: 8080
