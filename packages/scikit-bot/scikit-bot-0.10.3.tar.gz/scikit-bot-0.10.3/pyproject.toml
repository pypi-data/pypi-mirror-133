[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.coverage.run]
    branch = true
    source = ["./skbot"]

[tool.coverage.report]
    omit = [
        "./skbot/ignition/messages.py",
        "*tests*",
        "./skbot/ignition/sdformat/bindings/*",
        "./skbot/ignition/sdformat/create_frame_graph.py",
        "./skbot/ignition/sdformat/generic_sdf/actor.py",
        "./skbot/ignition/sdformat/generic_sdf/air_pressure.py",
        "./skbot/ignition/sdformat/generic_sdf/altimeter.py",
        "./skbot/ignition/sdformat/generic_sdf/atmosphere.py",
        "./skbot/ignition/sdformat/generic_sdf/audio_sink.py",
        "./skbot/ignition/sdformat/generic_sdf/audio_source.py",
        "./skbot/ignition/sdformat/generic_sdf/battery.py",
        "./skbot/ignition/sdformat/generic_sdf/box_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/capsule_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/collision_engine.py",
        "./skbot/ignition/sdformat/generic_sdf/collision.py",
        "./skbot/ignition/sdformat/generic_sdf/contact.py",
        "./skbot/ignition/sdformat/generic_sdf/cylinder_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/ellipsoid_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/forcetorque.py",
        "./skbot/ignition/sdformat/generic_sdf/geometry.py",
        "./skbot/ignition/sdformat/generic_sdf/gps.py",
        "./skbot/ignition/sdformat/generic_sdf/gripper.py",
        "./skbot/ignition/sdformat/generic_sdf/gui.py",
        "./skbot/ignition/sdformat/generic_sdf/heightmap_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/image_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/imu.py",
        "./skbot/ignition/sdformat/generic_sdf/inertial.py",
        "./skbot/ignition/sdformat/generic_sdf/lidar.py",
        "./skbot/ignition/sdformat/generic_sdf/light_state.py",
        "./skbot/ignition/sdformat/generic_sdf/light.py",
        "./skbot/ignition/sdformat/generic_sdf/logical_camera.py",
        "./skbot/ignition/sdformat/generic_sdf/link_state.py",
        "./skbot/ignition/sdformat/generic_sdf/magnetometer.py",
        "./skbot/ignition/sdformat/generic_sdf/material.py",
        "./skbot/ignition/sdformat/generic_sdf/mesh_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/model_state.py",
        "./skbot/ignition/sdformat/generic_sdf/navsat.py",
        "./skbot/ignition/sdformat/generic_sdf/noise.py",
        "./skbot/ignition/sdformat/generic_sdf/particle_emitter.py",
        "./skbot/ignition/sdformat/generic_sdf/physics.py",
        "./skbot/ignition/sdformat/generic_sdf/plane_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/plugin.py",
        "./skbot/ignition/sdformat/generic_sdf/polyline_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/population.py",
        "./skbot/ignition/sdformat/generic_sdf/projector.py",
        "./skbot/ignition/sdformat/generic_sdf/ray.py",
        "./skbot/ignition/sdformat/generic_sdf/rfid.py",
        "./skbot/ignition/sdformat/generic_sdf/rfidtag.py",
        "./skbot/ignition/sdformat/generic_sdf/scene.py",
        "./skbot/ignition/sdformat/generic_sdf/sonar.py",
        "./skbot/ignition/sdformat/generic_sdf/sphere_shape.py",
        "./skbot/ignition/sdformat/generic_sdf/state.py",
        "./skbot/ignition/sdformat/generic_sdf/surface.py",
        "./skbot/ignition/sdformat/generic_sdf/transceiver.py",
        "./skbot/ignition/sdformat/generic_sdf/urdf.py",
        "./skbot/ignition/sdformat/generic_sdf/visual.py",
    ]

    exclude_lines = [
        "pragma: no cover",
        "raise NotImplementedError"
    ]
