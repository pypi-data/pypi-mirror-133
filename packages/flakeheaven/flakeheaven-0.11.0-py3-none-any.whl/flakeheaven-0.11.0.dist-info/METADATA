Metadata-Version: 2.1
Name: flakeheaven
Version: 0.11.0
Summary: Flake8 wrapper to make it nice and configurable
Home-page: https://github.com/flakeheaven/flakeheaven
Author: Gram (@orsinium)
Author-email: master_fess@mail.ru
Requires-Python: >=3.5
Description-Content-Type: text/markdown
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Framework :: Flake8
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Quality Assurance
Requires-Dist: colorama
Requires-Dist: entrypoints
Requires-Dist: flake8>=4.0.1
Requires-Dist: pygments
Requires-Dist: toml
Requires-Dist: urllib3
Requires-Dist: dlint ; extra == "dev"
Requires-Dist: flake8-2020 ; extra == "dev"
Requires-Dist: flake8-aaa ; extra == "dev"
Requires-Dist: flake8-absolute-import ; extra == "dev"
Requires-Dist: flake8-alfred ; extra == "dev"
Requires-Dist: flake8-annotations-complexity ; extra == "dev"
Requires-Dist: flake8-bandit ; extra == "dev"
Requires-Dist: flake8-black ; extra == "dev"
Requires-Dist: flake8-broken-line ; extra == "dev"
Requires-Dist: flake8-bugbear ; extra == "dev"
Requires-Dist: flake8-builtins ; extra == "dev"
Requires-Dist: flake8-coding ; extra == "dev"
Requires-Dist: flake8-cognitive-complexity ; extra == "dev"
Requires-Dist: flake8-commas ; extra == "dev"
Requires-Dist: flake8-comprehensions ; extra == "dev"
Requires-Dist: flake8-debugger ; extra == "dev"
Requires-Dist: flake8-django ; extra == "dev"
Requires-Dist: flake8-docstrings ; extra == "dev"
Requires-Dist: flake8-eradicate ; extra == "dev"
Requires-Dist: flake8-executable ; extra == "dev"
Requires-Dist: flake8-expression-complexity ; extra == "dev"
Requires-Dist: flake8-fixme ; extra == "dev"
Requires-Dist: flake8-functions ; extra == "dev"
Requires-Dist: flake8-future-import ; extra == "dev"
Requires-Dist: flake8-import-order ; extra == "dev"
Requires-Dist: flake8-isort ; extra == "dev"
Requires-Dist: flake8-logging-format ; extra == "dev"
Requires-Dist: flake8-mock ; extra == "dev"
Requires-Dist: flake8-mutable ; extra == "dev"
Requires-Dist: flake8-mypy ; extra == "dev"
Requires-Dist: flake8-pep3101 ; extra == "dev"
Requires-Dist: flake8-pie ; extra == "dev"
Requires-Dist: flake8-print ; extra == "dev"
Requires-Dist: flake8-printf-formatting ; extra == "dev"
Requires-Dist: flake8-pyi ; extra == "dev"
Requires-Dist: flake8-pytest-style ; extra == "dev"
Requires-Dist: flake8-pytest ; extra == "dev"
Requires-Dist: flake8-quotes ; extra == "dev"
Requires-Dist: flake8-requirements ; extra == "dev"
Requires-Dist: flake8-rst-docstrings ; extra == "dev"
Requires-Dist: flake8-scrapy ; extra == "dev"
Requires-Dist: flake8-spellcheck ; extra == "dev"
Requires-Dist: flake8-sql ; extra == "dev"
Requires-Dist: flake8-strict ; extra == "dev"
Requires-Dist: black==21.10b0 ; extra == "dev"
Requires-Dist: flake8-string-format ; extra == "dev"
Requires-Dist: flake8-tidy-imports ; extra == "dev"
Requires-Dist: flake8-todo ; extra == "dev"
Requires-Dist: flake8-use-fstring ; extra == "dev"
Requires-Dist: flake8-variables-names ; extra == "dev"
Requires-Dist: mccabe ; extra == "dev"
Requires-Dist: pandas-vet ; extra == "dev"
Requires-Dist: pep8-naming ; extra == "dev"
Requires-Dist: pylint ; extra == "dev"
Requires-Dist: typing-extensions ; extra == "dev"
Requires-Dist: wemake-python-styleguide ; extra == "dev"
Requires-Dist: mypy ; extra == "dev"
Requires-Dist: pytest ; extra == "dev"
Requires-Dist: isort[pyproject] ; extra == "dev"
Requires-Dist: alabaster ; extra == "docs"
Requires-Dist: pygments-github-lexers ; extra == "docs"
Requires-Dist: recommonmark ; extra == "docs"
Requires-Dist: sphinx ; extra == "docs"
Project-URL: Documentation, https://github.com/flakeheaven/flakeheaven/blob/master/docs/
Provides-Extra: dev
Provides-Extra: docs

# FlakeHeaven

[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

FlakeHeaven is a [Flake8](https://gitlab.com/pycqa/flake8) wrapper to make it cool.

This project is a fork of [FlakeHell](https://github.com/life4/flakehell). FlakeHell and other forks of it such as
flakehell/flakehell are [no longer maintained](https://github.com/flakehell/flakehell/issues/25) and do not work with Flake8 4.0.x.

FlakeHeaven works with Flake8 4.0.1 or greater. This fork will be [maintained by the community](https://github.com/flakeheaven/flakeheaven/discussions/1) that developed the existing forks.

+ [Lint md, rst, ipynb, and more](https://github.com/flakeheaven/flakeheaven/blob/master/docs/parsers.md).
+ [Shareable and remote configs](https://github.com/flakeheaven/flakeheaven/blob/master/docs/config.md#base).
+ [Legacy-friendly](https://github.com/flakeheaven/flakeheaven/blob/master/docs/commands/baseline.md): ability to get report only about new errors.
+ Caching for much better performance.
+ [Use only specified plugins](https://github.com/flakeheaven/flakeheaven/blob/master/docs/config.md#plugins), not everything installed.
+ [Make output beautiful](https://github.com/flakeheaven/flakeheaven/blob/master/docs/formatters.md).
+ [pyproject.toml](https://www.python.org/dev/peps/pep-0518/) support.
+ [Check that all required plugins are installed](https://github.com/flakeheaven/flakeheaven/blob/master/docs/commands/missed.md).
+ [Syntax highlighting in messages and code snippets](https://github.com/flakeheaven/flakeheaven/blob/master/docs/formatters.md#colored-with-source-code).
+ [PyLint](https://github.com/PyCQA/pylint) integration.
+ [Powerful GitLab support](https://github.com/flakeheaven/flakeheaven/blob/master/docs/formatters.md#gitlab).
+ Codes management:
    + Manage codes per plugin.
    + Enable and disable plugins and codes by wildcard.
    + [Show codes for installed plugins](https://github.com/flakeheaven/flakeheaven/blob/master/docs/commands/plugins.md).
    + [Show all messages and codes for a plugin](https://github.com/flakeheaven/flakeheaven/blob/master/docs/commands/codes.md).
    + Allow codes intersection for different plugins.

![output example](./assets/grouped.png)

## Compatibility

FlakeHeaven supports all flake8 plugins, formatters, and configs. However, FlakeHeaven has it's own beautiful way to configure enabled plugins and codes. So, options like `--ignore` and `--select` unsupported. You can have flake8 and FlakeHeaven in one project if you want but enabled plugins should be explicitly specified.

## Installation

```bash
python3 -m pip install --user flakeheaven
```

## Usage

First of all, let's create `pyproject.toml` config:

```toml
[tool.flakeheaven]
# optionally inherit from remote config (or local if you want)
base = "https://raw.githubusercontent.com/flakeheaven/flakeheaven/master/pyproject.toml"
# specify any flake8 options. For example, exclude "example.py":
exclude = ["example.py"]
# make output nice
format = "grouped"
# 80 chars aren't enough in 21 century
max_line_length = 90
# show line of source code in output
show_source = true

# list of plugins and rules for them
[tool.flakeheaven.plugins]
# include everything in pyflakes except F401
pyflakes = ["+*", "-F401"]
# enable only codes from S100 to S199
flake8-bandit = ["-*", "+S1??"]
# enable everything that starts from `flake8-`
"flake8-*" = ["+*"]
# explicitly disable plugin
flake8-docstrings = ["-*"]
```

Show plugins that aren't installed yet:

```bash
flakeheaven missed
```

Show installed plugins, used plugins, specified rules, codes prefixes:

```bash
flakeheaven plugins
```

![plugins command output](./assets/plugins.png)

Show codes and messages for a specific plugin:

```bash
flakeheaven codes pyflakes
```

![codes command output](./assets/codes.png)

Run flake8 against the code:

```bash
flakeheaven lint
```

This command accepts all the same arguments as Flake8.

Read [github.com/flakeheaven/flakeheaven/blob/master/docs](https://github.com/flakeheaven/flakeheaven/blob/master/docs/) for more information.

## Contributing

Contributions are welcome! A few ideas what you can contribute:

+ Improve documentation.
+ Add more tests.
+ Improve performance.
+ Found a bug? Fix it!
+ Made an article about FlakeHeaven? Great! Let's add it into the `README.md`.
+ Don't have time to code? No worries! Just tell your friends and subscribers about the project. More users -> more contributors -> more cool features.

A convenient way to run tests is using [DepHell](https://github.com/dephell/dephell):

```bash
curl -L dephell.org/install | python3
dephell venv create --env=pytest
dephell deps install --env=pytest
dephell venv run --env=pytest
```

Bug-tracker is disabled by-design to shift contributions from words to actions. Please, help us make the project better and don't stalk maintainers in social networks and on the street.

Thank you :heart:

![](./assets/flaky.png)

The FlakeHeaven mascot (Flaky) is created by [@illustrator.way](https://www.instagram.com/illustrator.way/) and licensed under the [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) license.

