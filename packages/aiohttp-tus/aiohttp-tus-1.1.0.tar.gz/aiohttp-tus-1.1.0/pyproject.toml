[tool.black]
line_length = 88

[tool.coverage.run]
branch = true
source = ["aiohttp_tus"]

[tool.coverage.paths]
source = ["aiohttp_tus/"]

[tool.coverage.report]
fail_under = 85
skip_covered = true
show_missing = true

[tool.poetry]
name = "aiohttp-tus"
version = "1.1.0"
description = "tus.io protocol implementation for aiohttp.web applications"
authors = ["Igor Davydenko <iam@igordavydenko.com>"]
license = "BSD-3-Clause"
readme = "README.rst"
repository = "https://github.com/okumy/aiohttp-tus"
documentation = "https://aiohttp-tus.readthedocs.io/"
keywords = ["aiohttp", "tus", "tus.io"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Utilities",
  "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.8.1"

[tool.poetry.dev-dependencies]
aiohttp-jinja2 = "^1.2.0"
async_generator = {version = "^1.10", python = "~3.6"}
coverage = {extras = ["toml"], version = "^6.2"}
humanfriendly = "^10.0"
pytest = "^6.2.5"
pytest-aiohttp = "^0.3.0"
pytest-asyncio = "^0.16.0"
pytest-cov = "^3.0.0"
sphinx-autobuild = "^0.7.1"
"tus.py" = "^1.3.4"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py36,py37,py38
skipsdist = True

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310

[testenv]
passenv =
    PYTHONPATH
    PYTEST_ADDOPTS
setenv =
    PYTHONPATH=.
skip_install = True
whitelist_externals = poetry
commands_pre =
    poetry install
commands =
    poetry run python -m pytest tests/ --cov --no-cov-on-fail
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
